{"version":3,"sources":["spectrum.js","speakingurl.js","hooks-manager.js","customizer-base.js","customizer-utils.js","customizer-support.js","customizer-shortcodes-popup.js","customizer-custom-popup.js","customizer-custom-style-manager.js","customizer-section-settings-controls.js","customizer-current-page-settings.js","customizer-section-settings-panel.js","customizer-features-popup.js","customizer-content.js","customizer-content-tpls.js","customizer-content-handles.js","customizer-content-sections-overlays.js","customizer-menu.js","customizer-page-settings-panel.js"],"names":["factory","define","amd","exports","module","require","jQuery","$","undefined","defaultOpts","beforeShow","noop","move","change","show","hide","color","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","appendTo","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","className","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","disabled","offset","spectrums","IE","exec","window","navigator","userAgent","rgbaSupport","contains","str","substr","indexOf","style","document","createElement","cssText","backgroundColor","replaceInput","join","markup","gradientFix","i","paletteTemplate","p","opts","html","length","current","tiny","tinycolor","c","toHsl","l","equals","formattedString","toString","swatchStyle","toRgbString","toFilter","push","append","attr","spectrum","element","o","func","wait","debounce","timeout","callbackContext","extend","callbacks","bind","resize","reflow","context","this","args","arguments","clearTimeout","setTimeout","apply","visible","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","slice","draggingClass","shiftMovementDirection","doc","ownerDocument","boundElement","body","container","addClass","pickerContainer","find","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","textInput","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","is","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","val","colorOnShow","currentPreferredFormat","isEmpty","observer","applyOptions","text","isArray","j","rgb","toggleClass","updateSelectionPaletteFromStorage","localStorage","oldPalette","split","each","addColorToSelectionPalette","e","inArray","shift","drawPalette","currentColor","get","map","unique","reverse","getUniqueSelectionPalette","drawInitial","initial","dragStart","trigger","dragStop","removeClass","setFromTextInput","value","isValid","set","updateOriginalInput","toggle","event","Event","isDefaultPrevented","hideAll","on","onkeydown","clickout","updateUI","setInterval","parentEl","parent","css","clearInterval","keyCode","button","revert","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","fromRatio","Math","round","format","updateHelperLocations","flatColor","toHexString","realColor","displayColor","realHex","realRgb","alpha","toRgb","realAlpha","gradient","gradientType","dragX","dragY","max","min","top","left","alphaX","slideY","fireCallback","hasChanged","picker","input","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","offsetLeft","offsetTop","width","height","outerWidth","outerHeight","documentElement","clientWidth","scrollLeft","clientHeight","scrollTop","abs","bottom","right","disable","after","paletteElementClick","data","ignore","target","closest","stopPropagation","preventDefault","click","keydown","hasClass","draggable","shiftKey","parseFloat","oldDragX","oldDragY","furtherFromX","setValue","paletteEvent","initialize","spect","option","optionName","optionValue","enable","coord","destroy","remove","id","obj","Array","prototype","call","concat","onmove","onstart","onstop","dragging","maxHeight","maxWidth","hasTouch","duringDragEvents","prevent","returnValue","documentMode","stop","t0","originalEvent","touches","pageX","pageY","which","fn","dataID","extra","method","Error","removeData","load","loadOpts","defaults","_cachedResult","colorInput","type","localization","palettes","processNativeColorInputs","colorInputs","trimLeft","trimRight","tinyCounter","math","mathRound","mathMin","mathMax","mathRandom","random","r","g","b","ok","replace","toLowerCase","match","named","names","matchers","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","hex6","hex3","stringInputToObject","hasOwnProperty","bound01","String","convertToPercentage","floor","f","q","t","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","_ok","_tc_id","rgbToHsl","d","rgbToHsv","rgbToHex","allow3Char","hex","pad2","charAt","rgbaToHex","desaturate","amount","clamp01","saturate","greyscale","lighten","brighten","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","modification","isDark","getBrightness","isLight","getOriginalInput","getAlpha","setAlpha","toHsvString","toHslString","toHex","toHex8","toHex8String","toPercentageRgb","toPercentageRgbString","toName","hexNames","secondColor","hex8String","secondHex8String","formatSet","hasAlpha","_applyModification","_applyCombination","color1","color2","mix","w1","rgb1","rgb2","w","w2","readability","c1","c2","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isNaN","n","processPercent","parseInt","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","root","charMap","À","Á","Â","Ã","Ä","Å","Æ","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","Ő","Ø","Ù","Ú","Û","Ü","Ű","Ý","Þ","ß","à","á","â","ã","ä","å","æ","ç","è","é","ê","ë","ì","í","î","ï","ð","ñ","ò","ó","ô","õ","ö","ő","ø","ù","ú","û","ü","ű","ý","þ","ÿ","ẞ","ا","أ","إ","آ","ؤ","ئ","ء","ب","ت","ث","ج","ح","خ","د","ذ","ر","ز","س","ش","ص","ض","ط","ظ","ع","غ","ف","ق","ك","ل","م","ن","ه","و","ي","ى","ة","ﻻ","ﻷ","ﻹ","ﻵ","گ","چ","پ","ژ","ک","ی","َ","ً","ِ","ٍ","ُ","ٌ","ْ","٠","١","٢","٣","٤","٥","٦","٧","٨","٩","۰","۱","۲","۳","۴","۵","۶","۷","۸","۹","က","ခ","ဂ","ဃ","င","စ","ဆ","ဇ","စျ","ည","ဋ","ဌ","ဍ","ဎ","ဏ","တ","ထ","ဒ","ဓ","န","ပ","ဖ","ဗ","ဘ","မ","ယ","ရ","လ","ဝ","သ","ဟ","ဠ","အ","ြ","ျ","ွ","ြွ","ျွ","ှ","ဧ","၏","ဣ","ဤ","ဉ","ဦ","ဩ","သြော","ဪ","၀","၁","၂","၃","၄","၅","၆","၇","၈","၉","္","့","း","č","ď","ě","ň","ř","š","ť","ů","ž","Č","Ď","Ě","Ň","Ř","Š","Ť","Ů","Ž","ހ","ށ","ނ","ރ","ބ","ޅ","ކ","އ","ވ","މ","ފ","ދ","ތ","ލ","ގ","ޏ","ސ","ޑ","ޒ","ޓ","ޔ","ޕ","ޖ","ޗ","ޘ","ޙ","ޚ","ޛ","ޜ","ޝ","ޞ","ޟ","ޠ","ޡ","ޢ","ޣ","ޤ","ޥ","ަ","ާ","ި","ީ","ު","ޫ","ެ","ޭ","ޮ","ޯ","ް","ა","ბ","გ","დ","ე","ვ","ზ","თ","ი","კ","ლ","მ","ნ","ო","პ","ჟ","რ","ს","ტ","უ","ფ","ქ","ღ","ყ","შ","ჩ","ც","ძ","წ","ჭ","ხ","ჯ","ჰ","α","β","γ","δ","ε","ζ","η","θ","ι","κ","λ","μ","ν","ξ","ο","π","ρ","σ","τ","υ","φ","χ","ψ","ω","ά","έ","ί","ό","ύ","ή","ώ","ς","ϊ","ΰ","ϋ","ΐ","Α","Β","Γ","Δ","Ε","Ζ","Η","Θ","Ι","Κ","Λ","Μ","Ν","Ξ","Ο","Π","Ρ","Σ","Τ","Υ","Φ","Χ","Ψ","Ω","Ά","Έ","Ί","Ό","Ύ","Ή","Ώ","Ϊ","Ϋ","ā","ē","ģ","ī","ķ","ļ","ņ","ū","Ā","Ē","Ģ","Ī","Ķ","Ļ","Ņ","Ū","Ќ","ќ","Љ","љ","Њ","њ","Тс","тс","ą","ć","ę","ł","ń","ś","ź","ż","Ą","Ć","Ę","Ł","Ń","Ś","Ź","Ż","Є","І","Ї","Ґ","є","і","ї","ґ","ă","Ă","ș","Ș","ț","Ț","ţ","Ţ","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","ђ","ј","ћ","џ","Ђ","Ј","Ћ","Џ","ľ","ĺ","ŕ","Ľ","Ĺ","Ŕ","ş","Ş","ı","İ","ğ","Ğ","ả","Ả","ẳ","Ẳ","ẩ","Ẩ","đ","Đ","ẹ","Ẹ","ẽ","Ẽ","ẻ","Ẻ","ế","Ế","ề","Ề","ệ","Ệ","ễ","Ễ","ể","Ể","ỏ","ọ","Ọ","ố","Ố","ồ","Ồ","ổ","Ổ","ộ","Ộ","ỗ","Ỗ","ơ","Ơ","ớ","Ớ","ờ","Ờ","ợ","Ợ","ỡ","Ỡ","Ở","ở","ị","Ị","ĩ","Ĩ","ỉ","Ỉ","ủ","Ủ","ụ","Ụ","ũ","Ũ","ư","Ư","ứ","Ứ","ừ","Ừ","ự","Ự","ữ","Ữ","ử","Ử","ỷ","Ỷ","ỳ","Ỳ","ỵ","Ỵ","ỹ","Ỹ","ạ","Ạ","ấ","Ấ","ầ","Ầ","ậ","Ậ","ẫ","Ẫ","ắ","Ắ","ằ","Ằ","ặ","Ặ","ẵ","Ẵ","“","”","‘","’","∂","ƒ","™","©","œ","Œ","®","†","℠","…","˚","º","ª","•","၊","။","€","₢","₣","£","₤","₦","₧","₩","₪","₫","₭","₮","₯","₱","₲","₳","₴","₵","¢","¥","元","円","﷼","₠","฿","₨","₹","₰","₺","؋","₼","лв","៛","₡","₸","ден","zł","₽","₾","lookAheadCharArray","diatricMap","ာ","ါ","ေ","ဲ","ိ","ီ","ို","ု","ူ","ေါင်","ော","ော်","ေါ","ေါ်","်","က်","ိုက်","ောက်","င်","ိုင်","ောင်","စ်","ည်","တ်","ိတ်","ုတ်","ွတ်","ေတ်","ဒ်","ိုဒ်","ုဒ်","န်","ာန်","ိန်","ုန်","ွန်","ပ်","ိပ်","ုပ်","ွပ်","န်ုပ်","မ်","ိမ်","ုမ်","ွမ်","ယ်","ိုလ်","ဉ်","ံ","ိံ","ုံ","ައް","ަށް","langCharMap","en","az","ə","Ə","cs","fi","hu","lt","ė","į","ų","Ė","Į","Ų","lv","pl","sk","sr","tr","symbolMap","ar","∆","∞","♥","&","|","<",">","∑","¤","ca","de","dv","es","fa","fr","ge","gr","it","my","mk","nl","pt","ro","ru","uk","vn","uricChars","uricNoSlashChars","markChars","getSlug","maintainCase","titleCase","truncate","uricFlag","uricNoSlashFlag","markFlag","symbol","langChar","lucky","ch","lastCharWasSymbol","lastCharWasDiatric","separator","result","diatricString","convertSymbols","customReplacements","allowedChars","custom","uric","uricNoSlash","mark","symbols","lang","forEach","Object","keys","escapeChars","isReplacedCustomChar","test","_","toUpperCase","lastIndexOf","createSlug","hooksManager","MethodsAvailable","removeFilter","filter","callback","_removeHook","applyFilters","_runHook","addFilter","priority","_addHook","removeAction","action","doAction","addAction","STORAGE","actions","filters","hook","handlers","handler","splice","hookObject","hooks","tmpHook","prevHook","len","_hookInsertSort","Element","scrollIntoViewIfNeeded","centerIfNeeded","parentNode","parentComputedStyle","getComputedStyle","parentBorderTopWidth","getPropertyValue","parentBorderLeftWidth","overTop","overBottom","overLeft","overRight","alignWithTop","scrollIntoView","tagName","nodeName","insertAt","index","$parent","siblings","eq","before","last","children","prepend","NodeList","HTMLCollection","from","object","translateCompanionString","isString","__materialisCustomizerStrings","CP_Customizer","options","console","warn","wp","customize","query","customize_post_id","preview","pageID","events","PREVIEW_LOADED","ADD_FIXED_OVERLAYS","RIGHT_SECTION_CLOSED","ELEMENT_DECORATED","CONTENT_ROW_REMOVED","DOCUMENT_READY","STATE_UPDATED","FOCUS_CONTROL","wpApi","MAX_SAFE_INTEGER","Number","CONTENT_ELEMENTS","TEXT_ELEMENTS","THEME_MOD_NODES","cpCustomizerGlobal","pluginOptions","addContentElementsSelectors","selectors","IO","send","isObject","post","customGet","url","customSend","customPost","rest","route","utils","phpTrim","promise","deferred","ajax","settings","Date","now","xhrFields","withCredentials","Deferred","success","done","error","fail","jqXHR","response","resolveWith","rejectWith","abort","key","defaultValue","keyParts","isUndefined","__exportsCache","getSectionExports","sectionId","jquery","sectionData","pop","modules","export","eval","slugPrefix","log","name","SCRIPT_DEBUG","groupCollapsed","groupEnd","logError","unbind","async","ev","cb","one","showLoader","$select","selectize","blur","hideLoader","jsTPL","__containerDataHandlers","addContainerDataHandler","selector","getter","setter","__containerDataFilters","addContainerDataFilter","__modules","__modulesLoaded","addModule","popUp","title","elementID","tb_show","z-index","transform","opacity","margin-top","focus","class","popUpInfo","content","uniqueId","tempContainer","popupPrompt","extraHTML","htmlEscape","$content","onClose","canceled","newValue","trim","isFunction","closePopUps","popupSelectPrompt","emptySelection","select","selectedAttr","tb_remove","openMultiImageManager","single","interestWindow","custom_uploader","media","frames","file_frame","multiple","attachment","state","toJSON","open","mode","frame","views","openImageManager","multi","link","openMediaCustomFrame","extender","view","MediaFrame","Select","openMIManager","cp","extendFrameWithMDI","MIFrame","openCropableImageManager","flexible","control","CroppedImageControl","params","fixCropKeyPressBug","imgAreaSelect","keyPress","button_labels","frame_title","flex_width","flex_height","initFrame","setState","setImageFromAttachment","__createCropToolbar","createCropToolbar","openGalleryImageManager","shortocode","ids","columns","size","shortcode","gallery","edit","selection","model","openMediaBrowser","mdi","getCustomizerRootEl","openRightSidebar","elementId","hideRightSidebar","$form","$container","floating","y","$toAppend","offsetWidth","$visibleSection","isRightSidebarVisible","sectionID","updateState","force","forceOverlays","_setContent","setContent","overlays","hoverOverlay","updateAllOverlays","__changesetUpdate","changeSet","requestChangesetUpdate","then","__requestCachedCbs","self","__onSetForcedTransport","setMod","transport","reqCB","initialMod","modParts","setting","clone","create","previewer","oldTransport","oldValue","_value","jsonEncoded","parsed","decodeURI","JSON","parse","path","setToPath","encodeURI","stringify","isBoolean","prop","kirkiSetSettingValue","getMod","cleanModValue","onModChange","autoMod","modCallback","setMultipleMods","mods","finishCb","modsIDs","getOwnPropertyNames","modsDone","difference","_currentContentValues","previewJQuery","maintainable","getContent","decodeURIComponent","encodeURIComponent","modsToSet","cleanURL","$el","modData","atts","attributes","fallback","cleanClose","uniqueMods","save","__saveTimeout","markSave","parseShortcode","tag","shortcodeAttrs","attrs","isShortcodeContent","$node","isShortcodeEditable","isEditableByTag","getNodeShortcode","isOnCanvasMod","node","reduce","nodeWrapsShortcode","nodeContainsShortcode","$containers","renderNodeShortcodes","$nodes","add","updateNodeShortcode","noRerender","attrShortcode","queryVars","pauseObserver","currentChangeset","deepClone","btoa","ajaxurl","empty","decorateMods","decorateElements","delay","restartObserver","updateNodeFromShortcodeObject","shortcodeObj","targetWindow","contentWindow","currentDevice","__observerFunctionsToPause","__observerOriginalFunctions","previewApi","addSilentExecution","compose","silentCall","refresh","throttle","cpCustomizerPreview","getChangesetURL","changeset","uuid","location","origin","pathname","isPageMaintainable","getSelectionTextInfo","el","selRange","testRange","atStart","atEnd","getSelection","sel","rangeCount","getRangeAt","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","setStart","endContainer","endOffset","createRange","duplicate","moveToElementText","setEndPoint","isCustomFrontPage","isFrontPage","getPageContainerSelector","attrName","getRootNode","getSectionByDataId","getNodeSection","getNodeAbsSelector","relativeSelector","getNodeSectionId","getNodeExportId","getThemeMods","themeModNodesSelector","m","$themeModNodes","getContentNodes","nodes","contents","toArray","nodeType","Node","COMMENT_NODE","textContent","outerHTML","nodesHML","$currentNodes","querySelectorAll","getAttribute","inlineCss","styleProps","propParts","inlineCssText","setAttribute","removeAttribute","innerHTML","parts","cleanNode","item","not","nextSibling","decorateSectionsForGutenberg","__cleanNode","classList","elClass","href","getNodeClasses","$clone","startsWithDoubleSlash","startsWithSlash","queryKeys","removeUrlQueryStrings","fixWronglyWrappedTextNodes","markNode","prefix","addBack","insertNode","removeAttr","replaceNode","$newNode","replaceWith","hideNode","showNode","isNodeVisible","removeNode","skipUpdate","hideMovableOverlays","addOverlay","updateOverlay","insertContentSection","newRow","isNumber","row","prevSection","prev","isPrevTransparent","isPrevWhite","colorize","animate","afterInsert","editContainerData","fields","elements","elem","$elem","field","$fieldContent","classes","ready","popupContainer","getValue","_values","checked","__dataContainers","addDataContainerSelector","registerContainerDataHandler","$item","getContainersSelector","addSelectors","addContentBinds","hasAttribute","assignNode","structureAllowsRemoving","parents","isFixed","overlay","parentsUntil","itemOverlay","rowItemHoverOverlay","section","sectionExports","maintainCropPropotion","src","cachedValue","contentEditableInputEvent","elementsSpecificSelector","elementsOnFocusLeave","$this","editedNode","docFragment","createDocumentFragment","newEle","createTextNode","appendChild","range","deleteContents","setStartAfter","collapse","removeAllRanges","addRange","ctrlKey","metaKey","fromCharCode","placeCursorAtEnd","contentEditableElement","createTextRange","defaultMods","enableSortable","getGutenbergBlockCommentStart","previousSibling","maxDepth","getGutenbergBlockCommentEnd","disableGutenbergBlocks","contentEditableElements","commentNode","setNonEditableNodes","setNode","childNodes","TEXT_NODE","nextNonTextNode","elementsContainers","$toDecorate","addFixedOverlays","stopImmediatePropagation","handlePasteEvent","that","clipboardData","getData","textContainer","queryCommandSupported","execCommand","unwrap","IS_PRO","addEventListener","sortable","sections","getSections","commentOpen","createComment","commentClose","axis","start","ui","helper","display","evt","isSorting","deactivate","cursorAt","showTextElementCUI","mimeType","wpautop","cui","getTextElementCUI","hidden","bodyElement","fire","undoManager","clear","panel","getEl","docWidth","innerWidth","cuiRect","getBoundingClientRect","nodeWidth","nodeOffsetLeft","newLeft","hideTextElementCUI","getBody","getFonts","googleFonts","fonts","font","Arial","Arial Black","Andale Mono","Tahoma","Terminal","Times New Roman","Verdana","toTinyMCEFormat","getNodeFont","fontArray","_fontArray","getFontWeights","_font","family","weights","weight","editorID","editor","tinymce","inline","style_formats_merge","extended_valid_elements","formats","alignment","styles","textAlign","fontweight","fontWeight","fontsize","fontSize","fontcolor","italic","fontStyle","menubar","skin","toolbar","font_formats","paste_as_text","forced_root_block","setup","ed","bm","addButton","icon","onselect","formatter","values","onPostRender","controlIdLookup","items","menu","raw","btn","getNode","tooltip","colorPalette","spectrumEl","arrayChunk","scrollY","scroll","col","moveToBookmark","getBookmark","updateOnEditorBlur","init","overlayOnly","fakeNode","$startNode","__fixedOverlayOptions","registerFixedOverlayOptions","getOverlayOptionButton","getButtonElement","addOptionsToFixedOverlay","typeOptions","_node","nodeOverrider","identity","filteredOptions","getTitleElement","getItemsElements","nodeBinds","hover","relatedTarget","toolbarBinds","cover","positionOnly","updateControls","pointer-events","bounds","pageYOffset","pageXOffset","position","background-color","updateOnlySections","overlaysContainer","isSection","isScrollEvent","update","findControls","sidebarID","shortcodeData","activateHeatZone","moveHandlerCallback","$handle","center","x","$first","first","clientX","clientY","bubbles","cancelable","detail","screenX","screenY","altKey","createEvent","initMouseEvent","dispatchEvent","nodeRect","offsetHeight","docHeight","elementMouseIsOver","elementFromPoint","itemHoverOverlay","addContentItemsTo","insertHandler","__registeredItems","heading","label","lead","paragraph","image","registerItem","contentElementSelector","getItemData","types","_type","_items","getItemAfter","getContentItems","subitems","parentId","$result","toolip","idAttr","_item","subitemsContainer","node_type","insertNewContent","$new","itemAfter","Materialis","previewLoadedMessageCallback","__isCPChangesetPreview","category","itemData","template","$button","data-name","itemsArray","_autop_newline_preservation_helper","matches","pee","br","pre_tags","pee_parts","last_pee","pee_part","allblocks","pees","tinkle","matched","charlist","whitespace","substring","normalizeBackgroundImageValue","htmlDecode","htmlEntityMap","\"","'","/","`","=","htmlUnescape","regExp","schema","normalizeValue","pList","remainingPath","normalizeShortcodeString","getSpectrumColorFormated","$spectrumElement","convertToArray","k","component","Control","Setting","toClone","asArray","cssValueNumber","bigArray","perGroup","groupBy","normalizeClassAttr","asSelector","getFileInfo","filename","extension","file","imageExtensions","isImageFile","fileInfo","parseUrlQuery","bit","second","s_length","stringifyUrlQuery","queryString","parseURL","hash","strings","parsedUrl","nodeMatchingClasses","firstMatchOnly","_class","colorInArray","colorsArray","includeAlpha","_color","valueToBool","_v","convertColor","toRGB","toRGBA","used","toAppend","$activatePageCard","$openPageCard","$makeEditable","$makeProductEditable","canMaintainThis","postType","isArchive","hasFrontPage","__shortcodesPopupControls","registerShortcodePopupControls","controls","cols","has","getShortcodePopupFields","default","getParse","openShortcodePopupEditor","shortcodesAttrs","setParse","$wrapper","$panel","editEscapedShortcodeAtts","shortcodeText","__customPopupControls","registerCustomPopupControls","getCustomPopupFields","active","openCustomPopupEditor","currentPageStyles","styleEL","mediaMap","mobile","tablet","desktop","nomedia","outputOrder","sprintf_style_array","props","propsText","setModAndUpdate","mediaQuery","contentStyle","getStyle","removeSelector","noUpdate","getProp","pseudo","getNodeProp","getNodeProps","manager","isImportant","setProp","handeledModUpdate","removeProp","setProps","merge","recompileScssStyle","setSectionItemColor","colorMapping","colorName","getThemeColor","colorClasses","getColorsObj","cMap","colorClass","oldColorClasses","suffix","newClass","getSectionItemColor","defaultColor","firstCMap","nodeClass","getColorValue","styleUtils","generateCSSLinerGradient","angle","colors","colorsText","generateOneSideLinerGradient","transpacency","startAlpha","getCSSGradientColors","colorAsObject","getRGBAStringTransparency","sectionSettingsContainer","createControl","updater","settingID","controlConstructor","containerType","updaterCallback","onChange","controlContainer","renderControl","renderContent","attachWithSetter","onAttach","colorControl","iris","choices","setPallete","spinner","number","step","sizes","full","canUpload","placeholder","video","onSelect","mejsSettings","_wpmejsSettings","player","MediaElementPlayer","cleanupPlayer","button_label","gradientPro","typography","kirkiConfig","l10n","kirki","global","sectionSeparator","textarea","rows","controlsGroup","free","attach","controlHolder","checkbox","generic","repeater","repeaterContent","buttonOptions","buttonGroup","popup","info","infoPRO","itemTemplate","attachControls","onStop","setItems","afterCreation","itemContainer","handle","controlOptions","thisInput","spacing","sides","kirkiNotifications","dimension","$sectionSettingsContainer","sidebarId","panels","sectionPanel","baseArea","__controls","enabled","_exclude","exclude","include","canInclude","getPrefixed","areaTitle","initAreaTitle","addToControlsList","showAll","getControl","wrapOriginal","originalName","newFunction","wrap","panelBase","_areas","_initialized","registerArea","forceOverride","hasArea","getArea","areas","sort","area","_processExtendAreaQueue","disableArea","enableArea","excludeArea","_areasToExtend","extendCallback","extendArea","panelArea","instantiate","config","containerTemplate","pageContentPanel","itemExists","on_click","tempOptions","optionsList","on_hover","backgroundImage","endsWith","background-image","bgImage","background-size","background-position","content-align-default","content-left-sm","content-center-sm","content-right-sm","contentAligns","$alignHolders","currentTextAlign","frameSeparator","$groupEl","frameType","background","border","frameColor","frameOffsetX","frameOffsetY","frameWidth","frameHeight","frameHideOnMobile","hasFrame","nodeSel","getFrameType","getTranslate","translate","translateX","translateY","setTranslate","itemsListControlTemplate","itemOptionsControl","itemsAlign","items-align-default","start-sm","center-sm","end-sm","listItemsOrder","currentItemsAlign","canAlignRowItemsContent","original","getItemOptions","afterItemCreation","sortableItem","headingText","firstMatch","secondMatch","showInfosInOneColumn","contactFormWrapper","hasInlineInfo","containerID","companion_disable_popup_wpnonce","nonce","listItemTemplate","$contentLi","$sectionsSidebarTogglers","focusContentSection","toFocus","insertSectionFromData","skipEvent","dataId","dataIds","getNextInArray","sectionStyle","$sectionsList","startPosition","prevNode","newPos","startCommentNode","endCommentNode","prevNodeCommentNode","prevNodeEndCommentNode","insertBefore","insertAfter","exportID","anchor","fadeOut","anchorExistsInPrimaryMenu","removeAnchorFromPrimaryMenu","labelChange","slug","found","oldId","updatePrimaryMenuAnchor","contentEditable","getPrimaryMenuID","createPrimaryMenu","addAnchorToPrimaryMenu","customizerSection","focusSection","skipableKeyCodes","gutenbergCounter","isGutenbergSection","openedSectionsCategories","updateSectionsList","sidebar","increments","getListModel","gutenbergId","data-id","data-export-id","data-label","inMenu","availableRowsList","$controlItems","allowMultiple","closeCategory","$category","$items","nextUntil","$categoryTitles","fadeIn","_data","once","itemID","contentSections","$listChildren","templateOptions","evaluate","interpolate","escape","getCPTemplate","contentTemplates","text-with-checkbox","list","linked-icon","getCPScriptTemplate","compile","iconStyles","iconSizes","linkIsShortcode","$control","orig","mediaType","mediaData","currentSrc","mdiIconRegexp","canHide","classValue","$icon","toRemove","toAdd","iconStyle","iconSize","newColumnContent","unwrapComment","addSectionOverlay","addFixedOverlay","toolbarTitle","toolbar_binds","$changerItem","$bgChanger","toMake","$subitemsContainer","$brush","$template","bgColorPalette","$reason","getColorComponent","getFunctionCommentTemplate","getWPLocation","newCols","maxCols","kc","colNr","colsRegexp","$col","_classAttr","itemsNo","transition","column","node_binds","$overlay","disconnect","getGlobalOption","getPrimaryLocationModName","getHomeUrl","siteURL","canSetPrimaryLocation","getPrimaryLocationDefaultLanguageMenu","customizeId","api","placeholderId","Menus","generatePlaceholderAutoIncrementId","settingTransport","defaultSettingValues","nav_menu","menuSection","MenuSection","customizeAction","customizingMenus","menu_id","defaultMenu","icl_translation_of","menuId","getPrimaryMenu","focusPrimaryMenuCustomize","getPrimaryMenuControl","getMenuControl","settingArgs","menuItemControl","menuControl","getMenuItemControls","menu_item_parent","pageURL","nav_menu_item","type_label","custom_label","nav_menu_term_id","original_title","menu_item_id","debouncedReflowMenuItems","itemsControl","oldAnchor","newAnchor","itemControl","$controlsHolder","refreshControls","controls_ids","_c"],"mappings":"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AAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KAKAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,GAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,KAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IAEAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,KAAA,KACAC,KAAA,MACAC,IAAA,IAEAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,OAAA,KACAC,IAAA,KAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,GACAC,IAAA,GACAC,IAAA,GAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,GAIAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,IAIAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,KAAA,KACAC,KAAA,KAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAKAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,GACAC,IAAA,IACAC,IAAA,GACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,GACAC,IAAA,IACAC,IAAA,GACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KAGAC,IAAA,KACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAOAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,OACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,IACAC,IAAA,OACAC,IAAA,MACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGApuC,EAAA,MACAquC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,OACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAA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","file":"customizer.bundle.min.js","sourcesContent":["// Spectrum Colorpicker v1.8.0\n// https://github.com/bgrins/spectrum\n// Author: Brian Grinstead\n// License: MIT\n\n(function (factory) {\n    \"use strict\";\n\n    if (typeof define === 'function' && define.amd) { // AMD\n        define(['jquery'], factory);\n    } else if (typeof exports == \"object\" && typeof module == \"object\") { // CommonJS\n        module.exports = factory(require('jquery'));\n    } else { // Browser\n        factory(jQuery);\n    }\n})(function ($, undefined) {\n    \"use strict\";\n\n    var defaultOpts = {\n\n            // Callbacks\n            beforeShow: noop,\n            move: noop,\n            change: noop,\n            show: noop,\n            hide: noop,\n\n            // Options\n            color: false,\n            flat: false,\n            showInput: false,\n            allowEmpty: false,\n            showButtons: true,\n            clickoutFiresChange: true,\n            showInitial: false,\n            showPalette: false,\n            showPaletteOnly: false,\n            hideAfterPaletteSelect: false,\n            togglePaletteOnly: false,\n            showSelectionPalette: true,\n            localStorageKey: false,\n            appendTo: \"body\",\n            maxSelectionSize: 7,\n            cancelText: \"cancel\",\n            chooseText: \"choose\",\n            togglePaletteMoreText: \"more\",\n            togglePaletteLessText: \"less\",\n            clearText: \"Clear Color Selection\",\n            noColorSelectedText: \"No Color Selected\",\n            preferredFormat: false,\n            className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\n            containerClassName: \"\",\n            replacerClassName: \"\",\n            showAlpha: false,\n            theme: \"sp-light\",\n            palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\n            selectionPalette: [],\n            disabled: false,\n            offset: null\n        },\n        spectrums = [],\n        IE = !!/msie/i.exec(window.navigator.userAgent),\n        rgbaSupport = (function () {\n            function contains(str, substr) {\n                return !!~('' + str).indexOf(substr);\n            }\n\n            var elem = document.createElement('div');\n            var style = elem.style;\n            style.cssText = 'background-color:rgba(0,0,0,.5)';\n            return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');\n        })(),\n        replaceInput = [\n            \"<div class='sp-replacer'>\",\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\n            \"<div class='sp-dd'>&#9660;</div>\",\n            \"</div>\"\n        ].join(''),\n        markup = (function () {\n\n            // IE does not support gradients with multiple stops, so we need to simulate\n            //  that for the rainbow slider with 8 divs that each have a single gradient\n            var gradientFix = \"\";\n            if (IE) {\n                for (var i = 1; i <= 6; i++) {\n                    gradientFix += \"<div class='sp-\" + i + \"'></div>\";\n                }\n            }\n\n            return [\n                \"<div class='sp-container sp-hidden'>\",\n                \"<div class='sp-palette-container'>\",\n                \"<div class='sp-palette sp-thumb sp-cf'></div>\",\n                \"<div class='sp-palette-button-container sp-cf'>\",\n                \"<button type='button' class='sp-palette-toggle'></button>\",\n                \"</div>\",\n                \"</div>\",\n                \"<div class='sp-picker-container'>\",\n                \"<div class='sp-top sp-cf'>\",\n                \"<div class='sp-fill'></div>\",\n                \"<div class='sp-top-inner'>\",\n                \"<div class='sp-color'>\",\n                \"<div class='sp-sat'>\",\n                \"<div class='sp-val'>\",\n                \"<div class='sp-dragger'></div>\",\n                \"</div>\",\n                \"</div>\",\n                \"</div>\",\n                \"<div class='sp-clear sp-clear-display'>\",\n                \"</div>\",\n                \"<div class='sp-hue'>\",\n                \"<div class='sp-slider'></div>\",\n                gradientFix,\n                \"</div>\",\n                \"</div>\",\n                \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\n                \"</div>\",\n                \"<div class='sp-input-container sp-cf'>\",\n                \"<input class='sp-input' type='text' spellcheck='false'  />\",\n                \"</div>\",\n                \"<div class='sp-initial sp-thumb sp-cf'></div>\",\n                \"<div class='sp-button-container sp-cf'>\",\n                \"<a class='sp-cancel' href='#'></a>\",\n                \"<button type='button' class='sp-choose'></button>\",\n                \"</div>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        })();\n\n    function paletteTemplate(p, color, className, opts) {\n        var html = [];\n        for (var i = 0; i < p.length; i++) {\n            var current = p[i];\n            if (current) {\n                var tiny = tinycolor(current);\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\n                c += (tinycolor.equals(color, current)) ? \" sp-thumb-active\" : \"\";\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\n                var swatchStyle = rgbaSupport ? (\"background-color:\" + tiny.toRgbString()) : \"filter:\" + tiny.toFilter();\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" ></span></span>');\n            } else {\n                var cls = 'sp-clear-display';\n                html.push($('<div />')\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\n                        .attr('title', opts.noColorSelectedText)\n                    )\n                    .html()\n                );\n            }\n        }\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\n    }\n\n    function hideAll() {\n        for (var i = 0; i < spectrums.length; i++) {\n            if (spectrums[i]) {\n                spectrums[i].hide();\n            }\n        }\n    }\n\n    function instanceOptions(o, callbackContext) {\n        var opts = $.extend({}, defaultOpts, o);\n        opts.callbacks = {\n            'move': bind(opts.move, callbackContext),\n            'change': bind(opts.change, callbackContext),\n            'show': bind(opts.show, callbackContext),\n            'hide': bind(opts.hide, callbackContext),\n            'beforeShow': bind(opts.beforeShow, callbackContext)\n        };\n\n        return opts;\n    }\n\n    function spectrum(element, o) {\n\n\n        var opts = instanceOptions(o, element),\n            flat = opts.flat,\n            showSelectionPalette = opts.showSelectionPalette,\n            localStorageKey = opts.localStorageKey,\n            theme = opts.theme,\n            callbacks = opts.callbacks,\n            resize = throttle(reflow, 10),\n            visible = false,\n            isDragging = false,\n            dragWidth = 0,\n            dragHeight = 0,\n            dragHelperHeight = 0,\n            slideHeight = 0,\n            slideWidth = 0,\n            alphaWidth = 0,\n            alphaSlideHelperWidth = 0,\n            slideHelperHeight = 0,\n            currentHue = 0,\n            currentSaturation = 0,\n            currentValue = 0,\n            currentAlpha = 1,\n            palette = [],\n            paletteArray = [],\n            paletteLookup = {},\n            selectionPalette = opts.selectionPalette.slice(0),\n            maxSelectionSize = opts.maxSelectionSize,\n            draggingClass = \"sp-dragging\",\n            shiftMovementDirection = null;\n\n        var doc = element.ownerDocument,\n            body = doc.body,\n            boundElement = $(element),\n            disabled = false,\n            container = $(markup, doc).addClass(theme),\n            pickerContainer = container.find(\".sp-picker-container\"),\n            dragger = container.find(\".sp-color\"),\n            dragHelper = container.find(\".sp-dragger\"),\n            slider = container.find(\".sp-hue\"),\n            slideHelper = container.find(\".sp-slider\"),\n            alphaSliderInner = container.find(\".sp-alpha-inner\"),\n            alphaSlider = container.find(\".sp-alpha\"),\n            alphaSlideHelper = container.find(\".sp-alpha-handle\"),\n            textInput = container.find(\".sp-input\"),\n            paletteContainer = container.find(\".sp-palette\"),\n            initialColorContainer = container.find(\".sp-initial\"),\n            cancelButton = container.find(\".sp-cancel\"),\n            clearButton = container.find(\".sp-clear\"),\n            chooseButton = container.find(\".sp-choose\"),\n            toggleButton = container.find(\".sp-palette-toggle\"),\n            isInput = boundElement.is(\"input\"),\n            isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\n            shouldReplace = isInput && !flat,\n            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\n            offsetElement = (shouldReplace) ? replacer : boundElement,\n            previewElement = replacer.find(\".sp-preview-inner\"),\n            initialColor = opts.color || (isInput && boundElement.val()),\n            colorOnShow = false,\n            currentPreferredFormat = opts.preferredFormat,\n            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\n            isEmpty = !initialColor,\n            allowEmpty = opts.allowEmpty && !isInputTypeColor;\n\n        var observer = null;\n\n        function applyOptions() {\n\n            if (opts.showPaletteOnly) {\n                opts.showPalette = true;\n            }\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n\n            if (opts.palette) {\n                palette = opts.palette.slice(0);\n                paletteArray = $.isArray(palette[0]) ? palette : [palette];\n                paletteLookup = {};\n                for (var i = 0; i < paletteArray.length; i++) {\n                    for (var j = 0; j < paletteArray[i].length; j++) {\n                        var rgb = tinycolor(paletteArray[i][j]).toRgbString();\n                        paletteLookup[rgb] = true;\n                    }\n                }\n            }\n\n            container.toggleClass(\"sp-flat\", flat);\n            container.toggleClass(\"sp-input-disabled\", !opts.showInput);\n            container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\n            container.toggleClass(\"sp-clear-enabled\", allowEmpty);\n            container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\n            container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\n            container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\n            container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\n            container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\n            container.addClass(opts.className).addClass(opts.containerClassName);\n\n            reflow();\n        }\n\n        function initialize() {\n\n            if (IE) {\n                container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n            }\n\n            applyOptions();\n\n            if (shouldReplace) {\n                boundElement.after(replacer).hide();\n            }\n\n            if (!allowEmpty) {\n                clearButton.hide();\n            }\n\n            if (flat) {\n                boundElement.after(container).hide();\n            } else {\n\n                var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\n                if (appendTo.length !== 1) {\n                    appendTo = $(\"body\");\n                }\n\n                appendTo.append(container);\n            }\n\n            updateSelectionPaletteFromStorage();\n\n\n            offsetElement.on(\"click.spectrum touchstart.spectrum\", function (e) {\n                if (!disabled) {\n                    toggle();\n                }\n\n                e.stopPropagation();\n\n                if (!$(e.target).is(\"input\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (boundElement.is(\":disabled\") || (opts.disabled === true)) {\n                disable();\n            }\n\n            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\n            container.click(stopPropagation);\n\n            // Handle user typed input\n            textInput.change(setFromTextInput);\n            textInput.on(\"paste\", function () {\n                setTimeout(setFromTextInput, 1);\n            });\n            textInput.keydown(function (e) {\n                if (e.keyCode == 13) {\n                    setFromTextInput();\n                }\n            });\n\n            cancelButton.text(opts.cancelText);\n            cancelButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                revert();\n                hide();\n            });\n\n            clearButton.attr(\"title\", opts.clearText);\n            clearButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                isEmpty = true;\n                move();\n\n                if (flat) {\n                    //for the flat style, this is a change event\n                    updateOriginalInput(true);\n                }\n            });\n\n            chooseButton.text(opts.chooseText);\n            chooseButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                if (IE && textInput.is(\":focus\")) {\n                    textInput.trigger('change');\n                }\n\n                if (isValid()) {\n                    updateOriginalInput(true);\n                    hide();\n                }\n            });\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n            toggleButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                opts.showPaletteOnly = !opts.showPaletteOnly;\n\n                // To make sure the Picker area is drawn on the right, next to the\n                // Palette area (and not below the palette), first move the Palette\n                // to the left to make space for the picker, plus 5px extra.\n                // The 'applyOptions' function puts the whole container back into place\n                // and takes care of the button-text and the sp-palette-only CSS class.\n                if (!opts.showPaletteOnly && !flat) {\n                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\n                }\n                applyOptions();\n            });\n\n            draggable(alphaSlider, function (dragX, dragY, e) {\n                currentAlpha = (dragX / alphaWidth);\n                isEmpty = false;\n                if (e.shiftKey) {\n                    currentAlpha = Math.round(currentAlpha * 10) / 10;\n                }\n\n                move();\n            }, dragStart, dragStop);\n\n            draggable(slider, function (dragX, dragY) {\n                currentHue = parseFloat(dragY / slideHeight);\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n                move();\n            }, dragStart, dragStop);\n\n            draggable(dragger, function (dragX, dragY, e) {\n\n                // shift+drag should snap the movement to either the x or y axis.\n                if (!e.shiftKey) {\n                    shiftMovementDirection = null;\n                } else if (!shiftMovementDirection) {\n                    var oldDragX = currentSaturation * dragWidth;\n                    var oldDragY = dragHeight - (currentValue * dragHeight);\n                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\n\n                    shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\n                }\n\n                var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\n                var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\n\n                if (setSaturation) {\n                    currentSaturation = parseFloat(dragX / dragWidth);\n                }\n                if (setValue) {\n                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);\n                }\n\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n\n                move();\n\n            }, dragStart, dragStop);\n\n            if (!!initialColor) {\n                set(initialColor);\n\n                // In case color was black - update the preview UI and set the format\n                // since the set function will not run (default color is black).\n                updateUI();\n                currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format;\n\n                addColorToSelectionPalette(initialColor);\n            } else {\n                updateUI();\n            }\n\n            if (flat) {\n                show();\n            }\n\n            function paletteElementClick(e) {\n                if (e.data && e.data.ignore) {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n                } else {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n\n                    // If the picker is going to close immediately, a palette selection\n                    // is a change.  Otherwise, it's a move only.\n                    if (opts.hideAfterPaletteSelect) {\n                        updateOriginalInput(true);\n                        hide();\n                    } else {\n                        updateOriginalInput();\n                    }\n                }\n\n                return false;\n            }\n\n            var paletteEvent = IE ? \"mousedown.spectrum\" : \"click.spectrum touchstart.spectrum\";\n            paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\n            initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", {ignore: true}, paletteElementClick);\n        }\n\n        function updateSelectionPaletteFromStorage() {\n\n            if (localStorageKey && window.localStorage) {\n\n                // Migrate old palettes over to new format.  May want to remove this eventually.\n                try {\n                    var oldPalette = window.localStorage[localStorageKey].split(\",#\");\n                    if (oldPalette.length > 1) {\n                        delete window.localStorage[localStorageKey];\n                        $.each(oldPalette, function (i, c) {\n                            addColorToSelectionPalette(c);\n                        });\n                    }\n                } catch (e) {\n                }\n\n                try {\n                    selectionPalette = window.localStorage[localStorageKey].split(\";\");\n                } catch (e) {\n                }\n            }\n        }\n\n        function addColorToSelectionPalette(color) {\n            if (showSelectionPalette) {\n                var rgb = tinycolor(color).toRgbString();\n                if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === -1) {\n                    selectionPalette.push(rgb);\n                    while (selectionPalette.length > maxSelectionSize) {\n                        selectionPalette.shift();\n                    }\n                }\n\n                if (localStorageKey && window.localStorage) {\n                    try {\n                        window.localStorage[localStorageKey] = selectionPalette.join(\";\");\n                    } catch (e) {\n                    }\n                }\n            }\n        }\n\n        function getUniqueSelectionPalette() {\n            var unique = [];\n            if (opts.showPalette) {\n                for (var i = 0; i < selectionPalette.length; i++) {\n                    var rgb = tinycolor(selectionPalette[i]).toRgbString();\n\n                    if (!paletteLookup[rgb]) {\n                        unique.push(selectionPalette[i]);\n                    }\n                }\n            }\n\n            return unique.reverse().slice(0, opts.maxSelectionSize);\n        }\n\n        function drawPalette() {\n\n            var currentColor = get();\n\n            var html = $.map(paletteArray, function (palette, i) {\n                return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\n            });\n\n            updateSelectionPaletteFromStorage();\n\n            if (selectionPalette) {\n                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\n            }\n\n            paletteContainer.html(html.join(\"\"));\n        }\n\n        function drawInitial() {\n            if (opts.showInitial) {\n                var initial = colorOnShow;\n                var current = get();\n                initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\n            }\n        }\n\n        function dragStart() {\n            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\n                reflow();\n            }\n            isDragging = true;\n            container.addClass(draggingClass);\n            shiftMovementDirection = null;\n            boundElement.trigger('dragstart.spectrum', [get()]);\n        }\n\n        function dragStop() {\n            isDragging = false;\n            container.removeClass(draggingClass);\n            boundElement.trigger('dragstop.spectrum', [get()]);\n        }\n\n        function setFromTextInput() {\n\n            var value = textInput.val();\n\n            if ((value === null || value === \"\") && allowEmpty) {\n                set(null);\n                move();\n                updateOriginalInput();\n            } else {\n                var tiny = tinycolor(value);\n                if (tiny.isValid()) {\n                    set(tiny);\n                    move();\n                    updateOriginalInput();\n                } else {\n                    textInput.addClass(\"sp-validation-error\");\n                }\n            }\n        }\n\n        function toggle() {\n            if (visible) {\n                hide();\n            } else {\n                show();\n            }\n        }\n\n        function show() {\n            var event = $.Event('beforeShow.spectrum');\n\n            if (visible) {\n                reflow();\n                return;\n            }\n\n\n            boundElement.trigger(event, [get()]);\n\n            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\n                return;\n            }\n\n            hideAll();\n            visible = true;\n\n            $(doc).on(\"keydown.spectrum\", onkeydown);\n            $(doc).on(\"click.spectrum\", clickout);\n            $(window).on(\"resize.spectrum\", resize);\n            replacer.addClass(\"sp-active\");\n            container.removeClass(\"sp-hidden\");\n\n            reflow();\n            updateUI();\n\n            colorOnShow = get();\n\n            drawInitial();\n            callbacks.show(colorOnShow);\n            boundElement.trigger('show.spectrum', [colorOnShow]);\n\n\n            var observerCallback = function () {\n                var parentEl = boundElement.parent();\n\n                if (!parentEl.is(':visible') || parentEl.css('visibility') === 'hidden'\n                ) {\n                    clearInterval(observer);\n                    hide();\n                }\n            };\n\n            observer = setInterval(observerCallback, 200)\n        }\n\n        function onkeydown(e) {\n            // Close on ESC\n            if (e.keyCode === 27) {\n                hide();\n            }\n        }\n\n        function clickout(e) {\n            // Return on right click.\n            if (e.button == 2) {\n                return;\n            }\n\n            // If a drag event was happening during the mouseup, don't hide\n            // on click.\n            if (isDragging) {\n                return;\n            }\n\n            if (clickoutFiresChange) {\n                updateOriginalInput(true);\n            } else {\n                revert();\n            }\n            hide();\n        }\n\n        function hide() {\n            // Return if hiding is unnecessary\n            if (!visible || flat) {\n                return;\n            }\n            visible = false;\n\n            $(doc).off(\"keydown.spectrum\", onkeydown);\n            $(doc).off(\"click.spectrum\", clickout);\n            $(window).off(\"resize.spectrum\", resize);\n\n            replacer.removeClass(\"sp-active\");\n            container.addClass(\"sp-hidden\");\n\n            callbacks.hide(get());\n            boundElement.trigger('hide.spectrum', [get()]);\n        }\n\n        function revert() {\n            set(colorOnShow, true);\n            updateOriginalInput(true);\n        }\n\n        function set(color, ignoreFormatChange) {\n            if (tinycolor.equals(color, get())) {\n                // Update UI just in case a validation error needs\n                // to be cleared.\n                updateUI();\n                return;\n            }\n\n            var newColor, newHsv;\n            if (!color && allowEmpty) {\n                isEmpty = true;\n            } else {\n                isEmpty = false;\n                newColor = tinycolor(color);\n                newHsv = newColor.toHsv();\n\n                currentHue = (newHsv.h % 360) / 360;\n                currentSaturation = newHsv.s;\n                currentValue = newHsv.v;\n                currentAlpha = newHsv.a;\n            }\n            updateUI();\n\n            if (newColor && newColor.isValid() && !ignoreFormatChange) {\n                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\n            }\n        }\n\n        function get(opts) {\n            opts = opts || {};\n\n            if (allowEmpty && isEmpty) {\n                return null;\n            }\n\n            return tinycolor.fromRatio({\n                h: currentHue,\n                s: currentSaturation,\n                v: currentValue,\n                a: Math.round(currentAlpha * 1000) / 1000\n            }, {format: opts.format || currentPreferredFormat});\n        }\n\n        function isValid() {\n            return !textInput.hasClass(\"sp-validation-error\");\n        }\n\n        function move() {\n            updateUI();\n\n            callbacks.move(get());\n            boundElement.trigger('move.spectrum', [get()]);\n        }\n\n        function updateUI() {\n\n            textInput.removeClass(\"sp-validation-error\");\n\n            updateHelperLocations();\n\n            // Update dragger background color (gradients take care of saturation and value).\n            var flatColor = tinycolor.fromRatio({h: currentHue, s: 1, v: 1});\n            dragger.css(\"background-color\", flatColor.toHexString());\n\n            // Get a format that alpha will be included in (hex and names ignore alpha)\n            var format = currentPreferredFormat;\n            if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\n                if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\n                    format = \"rgb\";\n                }\n            }\n\n            var realColor = get({format: format}),\n                displayColor = '';\n\n            //reset background info for preview element\n            previewElement.removeClass(\"sp-clear-display\");\n            previewElement.css('background-color', 'transparent');\n\n            if (!realColor && allowEmpty) {\n                // Update the replaced elements background with icon indicating no color selection\n                previewElement.addClass(\"sp-clear-display\");\n            } else {\n                var realHex = realColor.toHexString(),\n                    realRgb = realColor.toRgbString();\n\n                // Update the replaced elements background color (with actual selected color)\n                if (rgbaSupport || realColor.alpha === 1) {\n                    previewElement.css(\"background-color\", realRgb);\n                } else {\n                    previewElement.css(\"background-color\", \"transparent\");\n                    previewElement.css(\"filter\", realColor.toFilter());\n                }\n\n                if (opts.showAlpha) {\n                    var rgb = realColor.toRgb();\n                    rgb.a = 0;\n                    var realAlpha = tinycolor(rgb).toRgbString();\n                    var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\n\n                    if (IE) {\n                        alphaSliderInner.css(\"filter\", tinycolor(realAlpha).toFilter({gradientType: 1}, realHex));\n                    } else {\n                        alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\n                        // Use current syntax gradient on unprefixed property.\n                        alphaSliderInner.css(\"background\",\n                            \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\n                    }\n                }\n\n                displayColor = realColor.toString(format);\n            }\n\n            // Update the text entry input as it changes happen\n            if (opts.showInput) {\n                textInput.val(displayColor);\n            }\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            drawInitial();\n        }\n\n        function updateHelperLocations() {\n            var s = currentSaturation;\n            var v = currentValue;\n\n            if (allowEmpty && isEmpty) {\n                //if selected color is empty, hide the helpers\n                alphaSlideHelper.hide();\n                slideHelper.hide();\n                dragHelper.hide();\n            } else {\n                //make sure helpers are visible\n                alphaSlideHelper.show();\n                slideHelper.show();\n                dragHelper.show();\n\n                // Where to show the little circle in that displays your current selected color\n                var dragX = s * dragWidth;\n                var dragY = dragHeight - (v * dragHeight);\n                dragX = Math.max(\n                    -dragHelperHeight,\n                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\n                );\n                dragY = Math.max(\n                    -dragHelperHeight,\n                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\n                );\n                dragHelper.css({\n                    \"top\": dragY + \"px\",\n                    \"left\": dragX + \"px\"\n                });\n\n                var alphaX = currentAlpha * alphaWidth;\n                alphaSlideHelper.css({\n                    \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\n                });\n\n                // Where to show the bar that displays your current selected hue\n                var slideY = (currentHue) * slideHeight;\n                slideHelper.css({\n                    \"top\": (slideY - slideHelperHeight) + \"px\"\n                });\n            }\n        }\n\n        function updateOriginalInput(fireCallback) {\n            var color = get(),\n                displayColor = '',\n                hasChanged = !tinycolor.equals(color, colorOnShow);\n\n            if (color) {\n                displayColor = color.toString(currentPreferredFormat);\n                // Update the selection palette with the current color\n                addColorToSelectionPalette(color);\n            }\n\n            if (isInput) {\n                boundElement.val(displayColor);\n            }\n\n            if (fireCallback && hasChanged) {\n                callbacks.change(color);\n                boundElement.trigger('change', [color]);\n            }\n        }\n\n        function reflow() {\n            if (!visible) {\n                return; // Calculations would be useless and wouldn't be reliable anyways\n            }\n            dragWidth = dragger.width();\n            dragHeight = dragger.height();\n            dragHelperHeight = dragHelper.height();\n            slideWidth = slider.width();\n            slideHeight = slider.height();\n            slideHelperHeight = slideHelper.height();\n            alphaWidth = alphaSlider.width();\n            alphaSlideHelperWidth = alphaSlideHelper.width();\n\n            if (!flat) {\n                container.css(\"position\", \"absolute\");\n                if (opts.offset) {\n                    container.offset(opts.offset);\n                } else {\n                    container.offset(getOffset(container, offsetElement));\n                }\n            }\n\n            updateHelperLocations();\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            boundElement.trigger('reflow.spectrum');\n        }\n\n        function destroy() {\n            boundElement.show();\n            offsetElement.off(\"click.spectrum touchstart.spectrum\");\n            container.remove();\n            replacer.remove();\n            spectrums[spect.id] = null;\n        }\n\n        function option(optionName, optionValue) {\n            if (optionName === undefined) {\n                return $.extend({}, opts);\n            }\n            if (optionValue === undefined) {\n                return opts[optionName];\n            }\n\n            opts[optionName] = optionValue;\n\n            if (optionName === \"preferredFormat\") {\n                currentPreferredFormat = opts.preferredFormat;\n            }\n            applyOptions();\n        }\n\n        function enable() {\n            disabled = false;\n            boundElement.attr(\"disabled\", false);\n            offsetElement.removeClass(\"sp-disabled\");\n        }\n\n        function disable() {\n            hide();\n            disabled = true;\n            boundElement.attr(\"disabled\", true);\n            offsetElement.addClass(\"sp-disabled\");\n        }\n\n        function setOffset(coord) {\n            opts.offset = coord;\n            reflow();\n        }\n\n        initialize();\n\n        var spect = {\n            show: show,\n            hide: hide,\n            toggle: toggle,\n            reflow: reflow,\n            option: option,\n            enable: enable,\n            disable: disable,\n            offset: setOffset,\n            set: function (c) {\n                set(c);\n                updateOriginalInput();\n            },\n            get: get,\n            destroy: destroy,\n            container: container\n        };\n\n        spect.id = spectrums.push(spect) - 1;\n\n        return spect;\n    }\n\n    /**\n     * checkOffset - get the offset below/above and left/right element depending on screen position\n     * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\n     */\n    function getOffset(picker, input) {\n        var extraY = 0;\n        var dpWidth = picker.outerWidth();\n        var dpHeight = picker.outerHeight();\n        var inputHeight = input.outerHeight();\n        var doc = picker[0].ownerDocument;\n        var docElem = doc.documentElement;\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\n        var offset = input.offset();\n        var offsetLeft = offset.left;\n        var offsetTop = offset.top;\n\n        offsetTop += inputHeight;\n\n        offsetLeft -=\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\n                Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\n\n        offsetTop -=\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\n                Math.abs(dpHeight + inputHeight - extraY) : extraY));\n\n        return {\n            top: offsetTop,\n            bottom: offset.bottom,\n            left: offsetLeft,\n            right: offset.right,\n            width: offset.width,\n            height: offset.height\n        };\n    }\n\n    /**\n     * noop - do nothing\n     */\n    function noop() {\n\n    }\n\n    /**\n     * stopPropagation - makes the code only doing this a little easier to read in line\n     */\n    function stopPropagation(e) {\n        e.stopPropagation();\n    }\n\n    /**\n     * Create a function bound to a given object\n     * Thanks to underscore.js\n     */\n    function bind(func, obj) {\n        var slice = Array.prototype.slice;\n        var args = slice.call(arguments, 2);\n        return function () {\n            return func.apply(obj, args.concat(slice.call(arguments)));\n        };\n    }\n\n    /**\n     * Lightweight drag helper.  Handles containment within the element, so that\n     * when dragging, the x is within [0,element.width] and y is within [0,element.height]\n     */\n    function draggable(element, onmove, onstart, onstop) {\n        onmove = onmove || function () {\n        };\n        onstart = onstart || function () {\n        };\n        onstop = onstop || function () {\n        };\n        var doc = document;\n        var dragging = false;\n        var offset = {};\n        var maxHeight = 0;\n        var maxWidth = 0;\n        var hasTouch = ('ontouchstart' in window);\n\n        var duringDragEvents = {};\n        duringDragEvents[\"selectstart\"] = prevent;\n        duringDragEvents[\"dragstart\"] = prevent;\n        duringDragEvents[\"touchmove mousemove\"] = move;\n        duringDragEvents[\"touchend mouseup\"] = stop;\n\n        function prevent(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            e.returnValue = false;\n        }\n\n        function move(e) {\n            if (dragging) {\n                // Mouseup happened outside of window\n                if (IE && doc.documentMode < 9 && !e.button) {\n                    return stop();\n                }\n\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\n                var pageX = t0 && t0.pageX || e.pageX;\n                var pageY = t0 && t0.pageY || e.pageY;\n\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\n\n                if (hasTouch) {\n                    // Stop scrolling in iOS\n                    prevent(e);\n                }\n\n                onmove.apply(element, [dragX, dragY, e]);\n            }\n        }\n\n        function start(e) {\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\n\n            if (!rightclick && !dragging) {\n                if (onstart.apply(element, arguments) !== false) {\n                    dragging = true;\n                    maxHeight = $(element).height();\n                    maxWidth = $(element).width();\n                    offset = $(element).offset();\n\n                    $(doc).on(duringDragEvents);\n                    $(doc.body).addClass(\"sp-dragging\");\n\n                    move(e);\n\n                    prevent(e);\n                }\n            }\n        }\n\n        function stop() {\n            if (dragging) {\n                $(doc).off(duringDragEvents);\n                $(doc.body).removeClass(\"sp-dragging\");\n\n                // Wait a tick before notifying observers to allow the click event\n                // to fire in Chrome.\n                setTimeout(function () {\n                    onstop.apply(element, arguments);\n                }, 0);\n            }\n            dragging = false;\n        }\n\n        $(element).on(\"touchstart mousedown\", start);\n    }\n\n    function throttle(func, wait, debounce) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            var throttler = function () {\n                timeout = null;\n                func.apply(context, args);\n            };\n            if (debounce) clearTimeout(timeout);\n            if (debounce || !timeout) timeout = setTimeout(throttler, wait);\n        };\n    }\n\n    function debounce(func, wait, immediate) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    };\n\n    function inputTypeColorSupport() {\n        return $.fn.spectrum.inputTypeColorSupport();\n    }\n\n    /**\n     * Define a jQuery plugin\n     */\n    var dataID = \"spectrum.id\";\n    $.fn.spectrum = function (opts, extra) {\n\n        if (typeof opts == \"string\") {\n\n            var returnValue = this;\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            this.each(function () {\n                var spect = spectrums[$(this).data(dataID)];\n                if (spect) {\n                    var method = spect[opts];\n                    if (!method) {\n                        throw new Error(\"Spectrum: no such method: '\" + opts + \"'\");\n                    }\n\n                    if (opts == \"get\") {\n                        returnValue = spect.get();\n                    } else if (opts == \"container\") {\n                        returnValue = spect.container;\n                    } else if (opts == \"option\") {\n                        returnValue = spect.option.apply(spect, args);\n                    } else if (opts == \"destroy\") {\n                        spect.destroy();\n                        $(this).removeData(dataID);\n                    } else {\n                        method.apply(spect, args);\n                    }\n                }\n            });\n\n            return returnValue;\n        }\n\n        // Initializing a new instance of spectrum\n        return this.spectrum(\"destroy\").each(function () {\n            var options = $.extend({}, $(this).data(), opts);\n            var spect = spectrum(this, options);\n            $(this).data(dataID, spect.id);\n        });\n    };\n\n    $.fn.spectrum.load = true;\n    $.fn.spectrum.loadOpts = {};\n    $.fn.spectrum.draggable = draggable;\n    $.fn.spectrum.defaults = defaultOpts;\n    $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport() {\n        if (typeof inputTypeColorSupport._cachedResult === \"undefined\") {\n            var colorInput = $(\"<input type='color'/>\")[0]; // if color element is supported, value will default to not null\n            inputTypeColorSupport._cachedResult = colorInput.type === \"color\" && colorInput.value !== \"\";\n        }\n        return inputTypeColorSupport._cachedResult;\n    };\n\n    $.spectrum = {};\n    $.spectrum.localization = {};\n    $.spectrum.palettes = {};\n\n    $.fn.spectrum.processNativeColorInputs = function () {\n        var colorInputs = $(\"input[type=color]\");\n        if (colorInputs.length && !inputTypeColorSupport()) {\n            colorInputs.spectrum({\n                preferredFormat: \"hex6\"\n            });\n        }\n    };\n\n    // TinyColor v1.1.2\n    // https://github.com/bgrins/TinyColor\n    // Brian Grinstead, MIT License\n\n    (function () {\n\n        var trimLeft = /^[\\s,#]+/,\n            trimRight = /\\s+$/,\n            tinyCounter = 0,\n            math = Math,\n            mathRound = math.round,\n            mathMin = math.min,\n            mathMax = math.max,\n            mathRandom = math.random;\n\n        var tinycolor = function (color, opts) {\n\n            color = (color) ? color : '';\n            opts = opts || {};\n\n            // If input is already a tinycolor, return itself\n            if (color instanceof tinycolor) {\n                return color;\n            }\n            // If we are called as a function, call using new instead\n            if (!(this instanceof tinycolor)) {\n                return new tinycolor(color, opts);\n            }\n\n            var rgb = inputToRGB(color);\n            this._originalInput = color,\n                this._r = rgb.r,\n                this._g = rgb.g,\n                this._b = rgb.b,\n                this._a = rgb.a,\n                this._roundA = mathRound(1000 * this._a) / 1000,\n                this._format = opts.format || rgb.format;\n            this._gradientType = opts.gradientType;\n\n            // Don't let the range of [0,255] come back in [0,1].\n            // Potentially lose a little bit of precision here, but will fix issues where\n            // .5 gets interpreted as half of the total, instead of half of 1\n            // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n            if (this._r < 1) {\n                this._r = mathRound(this._r);\n            }\n            if (this._g < 1) {\n                this._g = mathRound(this._g);\n            }\n            if (this._b < 1) {\n                this._b = mathRound(this._b);\n            }\n\n            this._ok = rgb.ok;\n            this._tc_id = tinyCounter++;\n        };\n\n        tinycolor.prototype = {\n            isDark: function () {\n                return this.getBrightness() < 128;\n            },\n            isLight: function () {\n                return !this.isDark();\n            },\n            isValid: function () {\n                return this._ok;\n            },\n            getOriginalInput: function () {\n                return this._originalInput;\n            },\n            getFormat: function () {\n                return this._format;\n            },\n            getAlpha: function () {\n                return this._a;\n            },\n            getBrightness: function () {\n                var rgb = this.toRgb();\n                return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n            },\n            setAlpha: function (value) {\n                this._a = boundAlpha(value);\n                this._roundA = mathRound(1000 * this._a) / 1000;\n                return this;\n            },\n            toHsv: function () {\n                var hsv = rgbToHsv(this._r, this._g, this._b);\n                return {h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a};\n            },\n            toHsvString: function () {\n                var hsv = rgbToHsv(this._r, this._g, this._b);\n                var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n                return (this._a == 1) ?\n                    \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" :\n                    \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n            },\n            toHsl: function () {\n                var hsl = rgbToHsl(this._r, this._g, this._b);\n                return {h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a};\n            },\n            toHslString: function () {\n                var hsl = rgbToHsl(this._r, this._g, this._b);\n                var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n                return (this._a == 1) ?\n                    \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" :\n                    \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n            },\n            toHex: function (allow3Char) {\n                return rgbToHex(this._r, this._g, this._b, allow3Char);\n            },\n            toHexString: function (allow3Char) {\n                return '#' + this.toHex(allow3Char);\n            },\n            toHex8: function () {\n                return rgbaToHex(this._r, this._g, this._b, this._a);\n            },\n            toHex8String: function () {\n                return '#' + this.toHex8();\n            },\n            toRgb: function () {\n                return {r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a};\n            },\n            toRgbString: function () {\n                return (this._a == 1) ?\n                    \"rgb(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n                    \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n            },\n            toPercentageRgb: function () {\n                return {\n                    r: mathRound(bound01(this._r, 255) * 100) + \"%\",\n                    g: mathRound(bound01(this._g, 255) * 100) + \"%\",\n                    b: mathRound(bound01(this._b, 255) * 100) + \"%\",\n                    a: this._a\n                };\n            },\n            toPercentageRgbString: function () {\n                return (this._a == 1) ?\n                    \"rgb(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n                    \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n            },\n            toName: function () {\n                if (this._a === 0) {\n                    return \"transparent\";\n                }\n\n                if (this._a < 1) {\n                    return false;\n                }\n\n                return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n            },\n            toFilter: function (secondColor) {\n                var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\n                var secondHex8String = hex8String;\n                var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n                if (secondColor) {\n                    var s = tinycolor(secondColor);\n                    secondHex8String = s.toHex8String();\n                }\n\n                return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n            },\n            toString: function (format) {\n                var formatSet = !!format;\n                format = format || this._format;\n\n                var formattedString = false;\n                var hasAlpha = this._a < 1 && this._a >= 0;\n                var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\n\n                if (needsAlphaFormat) {\n                    // Special case for \"transparent\", all other non-alpha formats\n                    // will return rgba when there is transparency.\n                    if (format === \"name\" && this._a === 0) {\n                        return this.toName();\n                    }\n                    return this.toRgbString();\n                }\n                if (format === \"rgb\") {\n                    formattedString = this.toRgbString();\n                }\n                if (format === \"prgb\") {\n                    formattedString = this.toPercentageRgbString();\n                }\n                if (format === \"hex\" || format === \"hex6\") {\n                    formattedString = this.toHexString();\n                }\n                if (format === \"hex3\") {\n                    formattedString = this.toHexString(true);\n                }\n                if (format === \"hex8\") {\n                    formattedString = this.toHex8String();\n                }\n                if (format === \"name\") {\n                    formattedString = this.toName();\n                }\n                if (format === \"hsl\") {\n                    formattedString = this.toHslString();\n                }\n                if (format === \"hsv\") {\n                    formattedString = this.toHsvString();\n                }\n\n                return formattedString || this.toHexString();\n            },\n\n            _applyModification: function (fn, args) {\n                var color = fn.apply(null, [this].concat([].slice.call(args)));\n                this._r = color._r;\n                this._g = color._g;\n                this._b = color._b;\n                this.setAlpha(color._a);\n                return this;\n            },\n            lighten: function () {\n                return this._applyModification(lighten, arguments);\n            },\n            brighten: function () {\n                return this._applyModification(brighten, arguments);\n            },\n            darken: function () {\n                return this._applyModification(darken, arguments);\n            },\n            desaturate: function () {\n                return this._applyModification(desaturate, arguments);\n            },\n            saturate: function () {\n                return this._applyModification(saturate, arguments);\n            },\n            greyscale: function () {\n                return this._applyModification(greyscale, arguments);\n            },\n            spin: function () {\n                return this._applyModification(spin, arguments);\n            },\n\n            _applyCombination: function (fn, args) {\n                return fn.apply(null, [this].concat([].slice.call(args)));\n            },\n            analogous: function () {\n                return this._applyCombination(analogous, arguments);\n            },\n            complement: function () {\n                return this._applyCombination(complement, arguments);\n            },\n            monochromatic: function () {\n                return this._applyCombination(monochromatic, arguments);\n            },\n            splitcomplement: function () {\n                return this._applyCombination(splitcomplement, arguments);\n            },\n            triad: function () {\n                return this._applyCombination(triad, arguments);\n            },\n            tetrad: function () {\n                return this._applyCombination(tetrad, arguments);\n            }\n        };\n\n        // If input is an object, force 1 into \"1.0\" to handle ratios properly\n        // String input requires \"1.0\" as input, so 1 will be treated as 1\n        tinycolor.fromRatio = function (color, opts) {\n            if (typeof color == \"object\") {\n                var newColor = {};\n                for (var i in color) {\n                    if (color.hasOwnProperty(i)) {\n                        if (i === \"a\") {\n                            newColor[i] = color[i];\n                        } else {\n                            newColor[i] = convertToPercentage(color[i]);\n                        }\n                    }\n                }\n                color = newColor;\n            }\n\n            return tinycolor(color, opts);\n        };\n\n        // Given a string or object, convert that input to RGB\n        // Possible string inputs:\n        //\n        //     \"red\"\n        //     \"#f00\" or \"f00\"\n        //     \"#ff0000\" or \"ff0000\"\n        //     \"#ff000000\" or \"ff000000\"\n        //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n        //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n        //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n        //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n        //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n        //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n        //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n        //\n        function inputToRGB(color) {\n\n            var rgb = {r: 0, g: 0, b: 0};\n            var a = 1;\n            var ok = false;\n            var format = false;\n\n            if (typeof color == \"string\") {\n                color = stringInputToObject(color);\n            }\n\n            if (typeof color == \"object\") {\n                if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\n                    rgb = rgbToRgb(color.r, color.g, color.b);\n                    ok = true;\n                    format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n                } else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\n                    color.s = convertToPercentage(color.s);\n                    color.v = convertToPercentage(color.v);\n                    rgb = hsvToRgb(color.h, color.s, color.v);\n                    ok = true;\n                    format = \"hsv\";\n                } else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\n                    color.s = convertToPercentage(color.s);\n                    color.l = convertToPercentage(color.l);\n                    rgb = hslToRgb(color.h, color.s, color.l);\n                    ok = true;\n                    format = \"hsl\";\n                }\n\n                if (color.hasOwnProperty(\"a\")) {\n                    a = color.a;\n                }\n            }\n\n            a = boundAlpha(a);\n\n            return {\n                ok: ok,\n                format: color.format || format,\n                r: mathMin(255, mathMax(rgb.r, 0)),\n                g: mathMin(255, mathMax(rgb.g, 0)),\n                b: mathMin(255, mathMax(rgb.b, 0)),\n                a: a\n            };\n        }\n\n\n        // Conversion Functions\n        // --------------------\n\n        // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n        // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n        // `rgbToRgb`\n        // Handle bounds / percentage checking to conform to CSS color spec\n        // <http://www.w3.org/TR/css3-color/>\n        // *Assumes:* r, g, b in [0, 255] or [0, 1]\n        // *Returns:* { r, g, b } in [0, 255]\n        function rgbToRgb(r, g, b) {\n            return {\n                r: bound01(r, 255) * 255,\n                g: bound01(g, 255) * 255,\n                b: bound01(b, 255) * 255\n            };\n        }\n\n        // `rgbToHsl`\n        // Converts an RGB color value to HSL.\n        // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n        // *Returns:* { h, s, l } in [0,1]\n        function rgbToHsl(r, g, b) {\n\n            r = bound01(r, 255);\n            g = bound01(g, 255);\n            b = bound01(b, 255);\n\n            var max = mathMax(r, g, b), min = mathMin(r, g, b);\n            var h, s, l = (max + min) / 2;\n\n            if (max == min) {\n                h = s = 0; // achromatic\n            } else {\n                var d = max - min;\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n\n                h /= 6;\n            }\n\n            return {h: h, s: s, l: l};\n        }\n\n        // `hslToRgb`\n        // Converts an HSL color value to RGB.\n        // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n        // *Returns:* { r, g, b } in the set [0, 255]\n        function hslToRgb(h, s, l) {\n            var r, g, b;\n\n            h = bound01(h, 360);\n            s = bound01(s, 100);\n            l = bound01(l, 100);\n\n            function hue2rgb(p, q, t) {\n                if (t < 0) t += 1;\n                if (t > 1) t -= 1;\n                if (t < 1 / 6) return p + (q - p) * 6 * t;\n                if (t < 1 / 2) return q;\n                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                return p;\n            }\n\n            if (s === 0) {\n                r = g = b = l; // achromatic\n            } else {\n                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                var p = 2 * l - q;\n                r = hue2rgb(p, q, h + 1 / 3);\n                g = hue2rgb(p, q, h);\n                b = hue2rgb(p, q, h - 1 / 3);\n            }\n\n            return {r: r * 255, g: g * 255, b: b * 255};\n        }\n\n        // `rgbToHsv`\n        // Converts an RGB color value to HSV\n        // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n        // *Returns:* { h, s, v } in [0,1]\n        function rgbToHsv(r, g, b) {\n\n            r = bound01(r, 255);\n            g = bound01(g, 255);\n            b = bound01(b, 255);\n\n            var max = mathMax(r, g, b), min = mathMin(r, g, b);\n            var h, s, v = max;\n\n            var d = max - min;\n            s = max === 0 ? 0 : d / max;\n\n            if (max == min) {\n                h = 0; // achromatic\n            } else {\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n                h /= 6;\n            }\n            return {h: h, s: s, v: v};\n        }\n\n        // `hsvToRgb`\n        // Converts an HSV color value to RGB.\n        // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n        // *Returns:* { r, g, b } in the set [0, 255]\n        function hsvToRgb(h, s, v) {\n\n            h = bound01(h, 360) * 6;\n            s = bound01(s, 100);\n            v = bound01(v, 100);\n\n            var i = math.floor(h),\n                f = h - i,\n                p = v * (1 - s),\n                q = v * (1 - f * s),\n                t = v * (1 - (1 - f) * s),\n                mod = i % 6,\n                r = [v, q, p, p, t, v][mod],\n                g = [t, v, v, q, p, p][mod],\n                b = [p, p, t, v, v, q][mod];\n\n            return {r: r * 255, g: g * 255, b: b * 255};\n        }\n\n        // `rgbToHex`\n        // Converts an RGB color to hex\n        // Assumes r, g, and b are contained in the set [0, 255]\n        // Returns a 3 or 6 character hex\n        function rgbToHex(r, g, b, allow3Char) {\n\n            var hex = [\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            // Return a 3 character hex if possible\n            if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n                return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n            }\n\n            return hex.join(\"\");\n        }\n\n        // `rgbaToHex`\n        // Converts an RGBA color plus alpha transparency to hex\n        // Assumes r, g, b and a are contained in the set [0, 255]\n        // Returns an 8 character hex\n        function rgbaToHex(r, g, b, a) {\n\n            var hex = [\n                pad2(convertDecimalToHex(a)),\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            return hex.join(\"\");\n        }\n\n        // `equals`\n        // Can be called with any tinycolor input\n        tinycolor.equals = function (color1, color2) {\n            if (!color1 || !color2) {\n                return false;\n            }\n            return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n        };\n        tinycolor.random = function () {\n            return tinycolor.fromRatio({\n                r: mathRandom(),\n                g: mathRandom(),\n                b: mathRandom()\n            });\n        };\n\n\n        // Modification Functions\n        // ----------------------\n        // Thanks to less.js for some of the basics here\n        // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n        function desaturate(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.s -= amount / 100;\n            hsl.s = clamp01(hsl.s);\n            return tinycolor(hsl);\n        }\n\n        function saturate(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.s += amount / 100;\n            hsl.s = clamp01(hsl.s);\n            return tinycolor(hsl);\n        }\n\n        function greyscale(color) {\n            return tinycolor(color).desaturate(100);\n        }\n\n        function lighten(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.l += amount / 100;\n            hsl.l = clamp01(hsl.l);\n            return tinycolor(hsl);\n        }\n\n        function brighten(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var rgb = tinycolor(color).toRgb();\n            rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\n            rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\n            rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\n            return tinycolor(rgb);\n        }\n\n        function darken(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.l -= amount / 100;\n            hsl.l = clamp01(hsl.l);\n            return tinycolor(hsl);\n        }\n\n        // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n        // Values outside of this range will be wrapped into this range.\n        function spin(color, amount) {\n            var hsl = tinycolor(color).toHsl();\n            var hue = (mathRound(hsl.h) + amount) % 360;\n            hsl.h = hue < 0 ? 360 + hue : hue;\n            return tinycolor(hsl);\n        }\n\n        // Combination Functions\n        // ---------------------\n        // Thanks to jQuery xColor for some of the ideas behind these\n        // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n        function complement(color) {\n            var hsl = tinycolor(color).toHsl();\n            hsl.h = (hsl.h + 180) % 360;\n            return tinycolor(hsl);\n        }\n\n        function triad(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({h: (h + 120) % 360, s: hsl.s, l: hsl.l}),\n                tinycolor({h: (h + 240) % 360, s: hsl.s, l: hsl.l})\n            ];\n        }\n\n        function tetrad(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({h: (h + 90) % 360, s: hsl.s, l: hsl.l}),\n                tinycolor({h: (h + 180) % 360, s: hsl.s, l: hsl.l}),\n                tinycolor({h: (h + 270) % 360, s: hsl.s, l: hsl.l})\n            ];\n        }\n\n        function splitcomplement(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n                tinycolor({h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n            ];\n        }\n\n        function analogous(color, results, slices) {\n            results = results || 6;\n            slices = slices || 30;\n\n            var hsl = tinycolor(color).toHsl();\n            var part = 360 / slices;\n            var ret = [tinycolor(color)];\n\n            for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results;) {\n                hsl.h = (hsl.h + part) % 360;\n                ret.push(tinycolor(hsl));\n            }\n            return ret;\n        }\n\n        function monochromatic(color, results) {\n            results = results || 6;\n            var hsv = tinycolor(color).toHsv();\n            var h = hsv.h, s = hsv.s, v = hsv.v;\n            var ret = [];\n            var modification = 1 / results;\n\n            while (results--) {\n                ret.push(tinycolor({h: h, s: s, v: v}));\n                v = (v + modification) % 1;\n            }\n\n            return ret;\n        }\n\n        // Utility Functions\n        // ---------------------\n\n        tinycolor.mix = function (color1, color2, amount) {\n            amount = (amount === 0) ? 0 : (amount || 50);\n\n            var rgb1 = tinycolor(color1).toRgb();\n            var rgb2 = tinycolor(color2).toRgb();\n\n            var p = amount / 100;\n            var w = p * 2 - 1;\n            var a = rgb2.a - rgb1.a;\n\n            var w1;\n\n            if (w * a == -1) {\n                w1 = w;\n            } else {\n                w1 = (w + a) / (1 + w * a);\n            }\n\n            w1 = (w1 + 1) / 2;\n\n            var w2 = 1 - w1;\n\n            var rgba = {\n                r: rgb2.r * w1 + rgb1.r * w2,\n                g: rgb2.g * w1 + rgb1.g * w2,\n                b: rgb2.b * w1 + rgb1.b * w2,\n                a: rgb2.a * p + rgb1.a * (1 - p)\n            };\n\n            return tinycolor(rgba);\n        };\n\n\n        // Readability Functions\n        // ---------------------\n        // <http://www.w3.org/TR/AERT#color-contrast>\n\n        // `readability`\n        // Analyze the 2 colors and returns an object with the following properties:\n        //    `brightness`: difference in brightness between the two colors\n        //    `color`: difference in color/hue between the two colors\n        tinycolor.readability = function (color1, color2) {\n            var c1 = tinycolor(color1);\n            var c2 = tinycolor(color2);\n            var rgb1 = c1.toRgb();\n            var rgb2 = c2.toRgb();\n            var brightnessA = c1.getBrightness();\n            var brightnessB = c2.getBrightness();\n            var colorDiff = (\n                Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\n                Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\n                Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\n            );\n\n            return {\n                brightness: Math.abs(brightnessA - brightnessB),\n                color: colorDiff\n            };\n        };\n\n        // `readable`\n        // http://www.w3.org/TR/AERT#color-contrast\n        // Ensure that foreground and background color combinations provide sufficient contrast.\n        // *Example*\n        //    tinycolor.isReadable(\"#000\", \"#111\") => false\n        tinycolor.isReadable = function (color1, color2) {\n            var readability = tinycolor.readability(color1, color2);\n            return readability.brightness > 125 && readability.color > 500;\n        };\n\n        // `mostReadable`\n        // Given a base color and a list of possible foreground or background\n        // colors for that base, returns the most readable color.\n        // *Example*\n        //    tinycolor.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\n        tinycolor.mostReadable = function (baseColor, colorList) {\n            var bestColor = null;\n            var bestScore = 0;\n            var bestIsReadable = false;\n            for (var i = 0; i < colorList.length; i++) {\n\n                // We normalize both around the \"acceptable\" breaking point,\n                // but rank brightness constrast higher than hue.\n\n                var readability = tinycolor.readability(baseColor, colorList[i]);\n                var readable = readability.brightness > 125 && readability.color > 500;\n                var score = 3 * (readability.brightness / 125) + (readability.color / 500);\n\n                if ((readable && !bestIsReadable) ||\n                    (readable && bestIsReadable && score > bestScore) ||\n                    ((!readable) && (!bestIsReadable) && score > bestScore)) {\n                    bestIsReadable = readable;\n                    bestScore = score;\n                    bestColor = tinycolor(colorList[i]);\n                }\n            }\n            return bestColor;\n        };\n\n\n        // Big List of Colors\n        // ------------------\n        // <http://www.w3.org/TR/css3-color/#svg-color>\n        var names = tinycolor.names = {\n            aliceblue: \"f0f8ff\",\n            antiquewhite: \"faebd7\",\n            aqua: \"0ff\",\n            aquamarine: \"7fffd4\",\n            azure: \"f0ffff\",\n            beige: \"f5f5dc\",\n            bisque: \"ffe4c4\",\n            black: \"000\",\n            blanchedalmond: \"ffebcd\",\n            blue: \"00f\",\n            blueviolet: \"8a2be2\",\n            brown: \"a52a2a\",\n            burlywood: \"deb887\",\n            burntsienna: \"ea7e5d\",\n            cadetblue: \"5f9ea0\",\n            chartreuse: \"7fff00\",\n            chocolate: \"d2691e\",\n            coral: \"ff7f50\",\n            cornflowerblue: \"6495ed\",\n            cornsilk: \"fff8dc\",\n            crimson: \"dc143c\",\n            cyan: \"0ff\",\n            darkblue: \"00008b\",\n            darkcyan: \"008b8b\",\n            darkgoldenrod: \"b8860b\",\n            darkgray: \"a9a9a9\",\n            darkgreen: \"006400\",\n            darkgrey: \"a9a9a9\",\n            darkkhaki: \"bdb76b\",\n            darkmagenta: \"8b008b\",\n            darkolivegreen: \"556b2f\",\n            darkorange: \"ff8c00\",\n            darkorchid: \"9932cc\",\n            darkred: \"8b0000\",\n            darksalmon: \"e9967a\",\n            darkseagreen: \"8fbc8f\",\n            darkslateblue: \"483d8b\",\n            darkslategray: \"2f4f4f\",\n            darkslategrey: \"2f4f4f\",\n            darkturquoise: \"00ced1\",\n            darkviolet: \"9400d3\",\n            deeppink: \"ff1493\",\n            deepskyblue: \"00bfff\",\n            dimgray: \"696969\",\n            dimgrey: \"696969\",\n            dodgerblue: \"1e90ff\",\n            firebrick: \"b22222\",\n            floralwhite: \"fffaf0\",\n            forestgreen: \"228b22\",\n            fuchsia: \"f0f\",\n            gainsboro: \"dcdcdc\",\n            ghostwhite: \"f8f8ff\",\n            gold: \"ffd700\",\n            goldenrod: \"daa520\",\n            gray: \"808080\",\n            green: \"008000\",\n            greenyellow: \"adff2f\",\n            grey: \"808080\",\n            honeydew: \"f0fff0\",\n            hotpink: \"ff69b4\",\n            indianred: \"cd5c5c\",\n            indigo: \"4b0082\",\n            ivory: \"fffff0\",\n            khaki: \"f0e68c\",\n            lavender: \"e6e6fa\",\n            lavenderblush: \"fff0f5\",\n            lawngreen: \"7cfc00\",\n            lemonchiffon: \"fffacd\",\n            lightblue: \"add8e6\",\n            lightcoral: \"f08080\",\n            lightcyan: \"e0ffff\",\n            lightgoldenrodyellow: \"fafad2\",\n            lightgray: \"d3d3d3\",\n            lightgreen: \"90ee90\",\n            lightgrey: \"d3d3d3\",\n            lightpink: \"ffb6c1\",\n            lightsalmon: \"ffa07a\",\n            lightseagreen: \"20b2aa\",\n            lightskyblue: \"87cefa\",\n            lightslategray: \"789\",\n            lightslategrey: \"789\",\n            lightsteelblue: \"b0c4de\",\n            lightyellow: \"ffffe0\",\n            lime: \"0f0\",\n            limegreen: \"32cd32\",\n            linen: \"faf0e6\",\n            magenta: \"f0f\",\n            maroon: \"800000\",\n            mediumaquamarine: \"66cdaa\",\n            mediumblue: \"0000cd\",\n            mediumorchid: \"ba55d3\",\n            mediumpurple: \"9370db\",\n            mediumseagreen: \"3cb371\",\n            mediumslateblue: \"7b68ee\",\n            mediumspringgreen: \"00fa9a\",\n            mediumturquoise: \"48d1cc\",\n            mediumvioletred: \"c71585\",\n            midnightblue: \"191970\",\n            mintcream: \"f5fffa\",\n            mistyrose: \"ffe4e1\",\n            moccasin: \"ffe4b5\",\n            navajowhite: \"ffdead\",\n            navy: \"000080\",\n            oldlace: \"fdf5e6\",\n            olive: \"808000\",\n            olivedrab: \"6b8e23\",\n            orange: \"ffa500\",\n            orangered: \"ff4500\",\n            orchid: \"da70d6\",\n            palegoldenrod: \"eee8aa\",\n            palegreen: \"98fb98\",\n            paleturquoise: \"afeeee\",\n            palevioletred: \"db7093\",\n            papayawhip: \"ffefd5\",\n            peachpuff: \"ffdab9\",\n            peru: \"cd853f\",\n            pink: \"ffc0cb\",\n            plum: \"dda0dd\",\n            powderblue: \"b0e0e6\",\n            purple: \"800080\",\n            rebeccapurple: \"663399\",\n            red: \"f00\",\n            rosybrown: \"bc8f8f\",\n            royalblue: \"4169e1\",\n            saddlebrown: \"8b4513\",\n            salmon: \"fa8072\",\n            sandybrown: \"f4a460\",\n            seagreen: \"2e8b57\",\n            seashell: \"fff5ee\",\n            sienna: \"a0522d\",\n            silver: \"c0c0c0\",\n            skyblue: \"87ceeb\",\n            slateblue: \"6a5acd\",\n            slategray: \"708090\",\n            slategrey: \"708090\",\n            snow: \"fffafa\",\n            springgreen: \"00ff7f\",\n            steelblue: \"4682b4\",\n            tan: \"d2b48c\",\n            teal: \"008080\",\n            thistle: \"d8bfd8\",\n            tomato: \"ff6347\",\n            turquoise: \"40e0d0\",\n            violet: \"ee82ee\",\n            wheat: \"f5deb3\",\n            white: \"fff\",\n            whitesmoke: \"f5f5f5\",\n            yellow: \"ff0\",\n            yellowgreen: \"9acd32\"\n        };\n\n        // Make it easy to access colors via `hexNames[hex]`\n        var hexNames = tinycolor.hexNames = flip(names);\n\n\n        // Utilities\n        // ---------\n\n        // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n        function flip(o) {\n            var flipped = {};\n            for (var i in o) {\n                if (o.hasOwnProperty(i)) {\n                    flipped[o[i]] = i;\n                }\n            }\n            return flipped;\n        }\n\n        // Return a valid alpha value [0,1] with all invalid values being set to 1\n        function boundAlpha(a) {\n            a = parseFloat(a);\n\n            if (isNaN(a) || a < 0 || a > 1) {\n                a = 1;\n            }\n\n            return a;\n        }\n\n        // Take input from [0, n] and return it as [0, 1]\n        function bound01(n, max) {\n            if (isOnePointZero(n)) {\n                n = \"100%\";\n            }\n\n            var processPercent = isPercentage(n);\n            n = mathMin(max, mathMax(0, parseFloat(n)));\n\n            // Automatically convert percentage into number\n            if (processPercent) {\n                n = parseInt(n * max, 10) / 100;\n            }\n\n            // Handle floating point rounding errors\n            if ((math.abs(n - max) < 0.000001)) {\n                return 1;\n            }\n\n            // Convert into [0, 1] range if it isn't already\n            return (n % max) / parseFloat(max);\n        }\n\n        // Force a number between 0 and 1\n        function clamp01(val) {\n            return mathMin(1, mathMax(0, val));\n        }\n\n        // Parse a base-16 hex value into a base-10 integer\n        function parseIntFromHex(val) {\n            return parseInt(val, 16);\n        }\n\n        // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n        // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n        function isOnePointZero(n) {\n            return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n        }\n\n        // Check to see if string passed in is a percentage\n        function isPercentage(n) {\n            return typeof n === \"string\" && n.indexOf('%') != -1;\n        }\n\n        // Force a hex value to have 2 characters\n        function pad2(c) {\n            return c.length == 1 ? '0' + c : '' + c;\n        }\n\n        // Replace a decimal with it's percentage value\n        function convertToPercentage(n) {\n            if (n <= 1) {\n                n = (n * 100) + \"%\";\n            }\n\n            return n;\n        }\n\n        // Converts a decimal to a hex value\n        function convertDecimalToHex(d) {\n            return Math.round(parseFloat(d) * 255).toString(16);\n        }\n\n        // Converts a hex value to a decimal\n        function convertHexToDecimal(h) {\n            return (parseIntFromHex(h) / 255);\n        }\n\n        var matchers = (function () {\n\n            // <http://www.w3.org/TR/css3-values/#integers>\n            var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n            // <http://www.w3.org/TR/css3-values/#number-value>\n            var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n            // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n            var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n            // Actual matching.\n            // Parentheses and commas are optional, but not required.\n            // Whitespace can take the place of commas or opening paren\n            var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n            var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n            return {\n                rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n                rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n                hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n                hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n                hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n                hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n                hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n                hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n            };\n        })();\n\n        // `stringInputToObject`\n        // Permissive string parsing.  Take in a number of formats, and output an object\n        // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n        function stringInputToObject(color) {\n\n            color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n            var named = false;\n            if (names[color]) {\n                color = names[color];\n                named = true;\n            } else if (color == 'transparent') {\n                return {r: 0, g: 0, b: 0, a: 0, format: \"name\"};\n            }\n\n            // Try to match string input using regular expressions.\n            // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n            // Just return an object and let the conversion functions handle that.\n            // This way the result will be the same whether the tinycolor is initialized with string or object.\n            var match;\n            if ((match = matchers.rgb.exec(color))) {\n                return {r: match[1], g: match[2], b: match[3]};\n            }\n            if ((match = matchers.rgba.exec(color))) {\n                return {r: match[1], g: match[2], b: match[3], a: match[4]};\n            }\n            if ((match = matchers.hsl.exec(color))) {\n                return {h: match[1], s: match[2], l: match[3]};\n            }\n            if ((match = matchers.hsla.exec(color))) {\n                return {h: match[1], s: match[2], l: match[3], a: match[4]};\n            }\n            if ((match = matchers.hsv.exec(color))) {\n                return {h: match[1], s: match[2], v: match[3]};\n            }\n            if ((match = matchers.hsva.exec(color))) {\n                return {h: match[1], s: match[2], v: match[3], a: match[4]};\n            }\n            if ((match = matchers.hex8.exec(color))) {\n                return {\n                    a: convertHexToDecimal(match[1]),\n                    r: parseIntFromHex(match[2]),\n                    g: parseIntFromHex(match[3]),\n                    b: parseIntFromHex(match[4]),\n                    format: named ? \"name\" : \"hex8\"\n                };\n            }\n            if ((match = matchers.hex6.exec(color))) {\n                return {\n                    r: parseIntFromHex(match[1]),\n                    g: parseIntFromHex(match[2]),\n                    b: parseIntFromHex(match[3]),\n                    format: named ? \"name\" : \"hex\"\n                };\n            }\n            if ((match = matchers.hex3.exec(color))) {\n                return {\n                    r: parseIntFromHex(match[1] + '' + match[1]),\n                    g: parseIntFromHex(match[2] + '' + match[2]),\n                    b: parseIntFromHex(match[3] + '' + match[3]),\n                    format: named ? \"name\" : \"hex\"\n                };\n            }\n\n            return false;\n        }\n\n        window.tinycolor = tinycolor;\n    })();\n\n    $(function () {\n        if ($.fn.spectrum.load) {\n            $.fn.spectrum.processNativeColorInputs();\n        }\n    });\n\n\n});","(function (root) {\n    'use strict';\n\n    /**\n     * charMap\n     * @type {Object}\n     */\n    var charMap = {\n\n        // latin\n        'À': 'A',\n        'Á': 'A',\n        'Â': 'A',\n        'Ã': 'A',\n        'Ä': 'Ae',\n        'Å': 'A',\n        'Æ': 'AE',\n        'Ç': 'C',\n        'È': 'E',\n        'É': 'E',\n        'Ê': 'E',\n        'Ë': 'E',\n        'Ì': 'I',\n        'Í': 'I',\n        'Î': 'I',\n        'Ï': 'I',\n        'Ð': 'D',\n        'Ñ': 'N',\n        'Ò': 'O',\n        'Ó': 'O',\n        'Ô': 'O',\n        'Õ': 'O',\n        'Ö': 'Oe',\n        'Ő': 'O',\n        'Ø': 'O',\n        'Ù': 'U',\n        'Ú': 'U',\n        'Û': 'U',\n        'Ü': 'Ue',\n        'Ű': 'U',\n        'Ý': 'Y',\n        'Þ': 'TH',\n        'ß': 'ss',\n        'à': 'a',\n        'á': 'a',\n        'â': 'a',\n        'ã': 'a',\n        'ä': 'ae',\n        'å': 'a',\n        'æ': 'ae',\n        'ç': 'c',\n        'è': 'e',\n        'é': 'e',\n        'ê': 'e',\n        'ë': 'e',\n        'ì': 'i',\n        'í': 'i',\n        'î': 'i',\n        'ï': 'i',\n        'ð': 'd',\n        'ñ': 'n',\n        'ò': 'o',\n        'ó': 'o',\n        'ô': 'o',\n        'õ': 'o',\n        'ö': 'oe',\n        'ő': 'o',\n        'ø': 'o',\n        'ù': 'u',\n        'ú': 'u',\n        'û': 'u',\n        'ü': 'ue',\n        'ű': 'u',\n        'ý': 'y',\n        'þ': 'th',\n        'ÿ': 'y',\n        'ẞ': 'SS',\n\n        // language specific\n\n        // Arabic\n        'ا': 'a',\n        'أ': 'a',\n        'إ': 'i',\n        'آ': 'aa',\n        'ؤ': 'u',\n        'ئ': 'e',\n        'ء': 'a',\n        'ب': 'b',\n        'ت': 't',\n        'ث': 'th',\n        'ج': 'j',\n        'ح': 'h',\n        'خ': 'kh',\n        'د': 'd',\n        'ذ': 'th',\n        'ر': 'r',\n        'ز': 'z',\n        'س': 's',\n        'ش': 'sh',\n        'ص': 's',\n        'ض': 'dh',\n        'ط': 't',\n        'ظ': 'z',\n        'ع': 'a',\n        'غ': 'gh',\n        'ف': 'f',\n        'ق': 'q',\n        'ك': 'k',\n        'ل': 'l',\n        'م': 'm',\n        'ن': 'n',\n        'ه': 'h',\n        'و': 'w',\n        'ي': 'y',\n        'ى': 'a',\n        'ة': 'h',\n        'ﻻ': 'la',\n        'ﻷ': 'laa',\n        'ﻹ': 'lai',\n        'ﻵ': 'laa',\n\n        // Persian additional characters than Arabic\n        'گ': 'g',\n        'چ': 'ch',\n        'پ': 'p',\n        'ژ': 'zh',\n        'ک': 'k',\n        'ی': 'y',\n\n        // Arabic diactrics\n        'َ': 'a',\n        'ً': 'an',\n        'ِ': 'e',\n        'ٍ': 'en',\n        'ُ': 'u',\n        'ٌ': 'on',\n        'ْ': '',\n\n        // Arabic numbers\n        '٠': '0',\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n\n        // Persian numbers\n        '۰': '0',\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n\n        // Burmese consonants\n        'က': 'k',\n        'ခ': 'kh',\n        'ဂ': 'g',\n        'ဃ': 'ga',\n        'င': 'ng',\n        'စ': 's',\n        'ဆ': 'sa',\n        'ဇ': 'z',\n        'စျ': 'za',\n        'ည': 'ny',\n        'ဋ': 't',\n        'ဌ': 'ta',\n        'ဍ': 'd',\n        'ဎ': 'da',\n        'ဏ': 'na',\n        'တ': 't',\n        'ထ': 'ta',\n        'ဒ': 'd',\n        'ဓ': 'da',\n        'န': 'n',\n        'ပ': 'p',\n        'ဖ': 'pa',\n        'ဗ': 'b',\n        'ဘ': 'ba',\n        'မ': 'm',\n        'ယ': 'y',\n        'ရ': 'ya',\n        'လ': 'l',\n        'ဝ': 'w',\n        'သ': 'th',\n        'ဟ': 'h',\n        'ဠ': 'la',\n        'အ': 'a',\n        // consonant character combos\n        'ြ': 'y',\n        'ျ': 'ya',\n        'ွ': 'w',\n        'ြွ': 'yw',\n        'ျွ': 'ywa',\n        'ှ': 'h',\n        // independent vowels\n        'ဧ': 'e',\n        '၏': '-e',\n        'ဣ': 'i',\n        'ဤ': '-i',\n        'ဉ': 'u',\n        'ဦ': '-u',\n        'ဩ': 'aw',\n        'သြော': 'aw',\n        'ဪ': 'aw',\n        // numbers\n        '၀': '0',\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        // virama and tone marks which are silent in transliteration\n        '္': '',\n        '့': '',\n        'း': '',\n\n        // Czech\n        'č': 'c',\n        'ď': 'd',\n        'ě': 'e',\n        'ň': 'n',\n        'ř': 'r',\n        'š': 's',\n        'ť': 't',\n        'ů': 'u',\n        'ž': 'z',\n        'Č': 'C',\n        'Ď': 'D',\n        'Ě': 'E',\n        'Ň': 'N',\n        'Ř': 'R',\n        'Š': 'S',\n        'Ť': 'T',\n        'Ů': 'U',\n        'Ž': 'Z',\n\n        // Dhivehi\n        'ހ': 'h',\n        'ށ': 'sh',\n        'ނ': 'n',\n        'ރ': 'r',\n        'ބ': 'b',\n        'ޅ': 'lh',\n        'ކ': 'k',\n        'އ': 'a',\n        'ވ': 'v',\n        'މ': 'm',\n        'ފ': 'f',\n        'ދ': 'dh',\n        'ތ': 'th',\n        'ލ': 'l',\n        'ގ': 'g',\n        'ޏ': 'gn',\n        'ސ': 's',\n        'ޑ': 'd',\n        'ޒ': 'z',\n        'ޓ': 't',\n        'ޔ': 'y',\n        'ޕ': 'p',\n        'ޖ': 'j',\n        'ޗ': 'ch',\n        'ޘ': 'tt',\n        'ޙ': 'hh',\n        'ޚ': 'kh',\n        'ޛ': 'th',\n        'ޜ': 'z',\n        'ޝ': 'sh',\n        'ޞ': 's',\n        'ޟ': 'd',\n        'ޠ': 't',\n        'ޡ': 'z',\n        'ޢ': 'a',\n        'ޣ': 'gh',\n        'ޤ': 'q',\n        'ޥ': 'w',\n        'ަ': 'a',\n        'ާ': 'aa',\n        'ި': 'i',\n        'ީ': 'ee',\n        'ު': 'u',\n        'ޫ': 'oo',\n        'ެ': 'e',\n        'ޭ': 'ey',\n        'ޮ': 'o',\n        'ޯ': 'oa',\n        'ް': '',\n\n        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n        // National system (2002)\n        'ა': 'a',\n        'ბ': 'b',\n        'გ': 'g',\n        'დ': 'd',\n        'ე': 'e',\n        'ვ': 'v',\n        'ზ': 'z',\n        'თ': 't',\n        'ი': 'i',\n        'კ': 'k',\n        'ლ': 'l',\n        'მ': 'm',\n        'ნ': 'n',\n        'ო': 'o',\n        'პ': 'p',\n        'ჟ': 'zh',\n        'რ': 'r',\n        'ს': 's',\n        'ტ': 't',\n        'უ': 'u',\n        'ფ': 'p',\n        'ქ': 'k',\n        'ღ': 'gh',\n        'ყ': 'q',\n        'შ': 'sh',\n        'ჩ': 'ch',\n        'ც': 'ts',\n        'ძ': 'dz',\n        'წ': 'ts',\n        'ჭ': 'ch',\n        'ხ': 'kh',\n        'ჯ': 'j',\n        'ჰ': 'h',\n\n        // Greek\n        'α': 'a',\n        'β': 'v',\n        'γ': 'g',\n        'δ': 'd',\n        'ε': 'e',\n        'ζ': 'z',\n        'η': 'i',\n        'θ': 'th',\n        'ι': 'i',\n        'κ': 'k',\n        'λ': 'l',\n        'μ': 'm',\n        'ν': 'n',\n        'ξ': 'ks',\n        'ο': 'o',\n        'π': 'p',\n        'ρ': 'r',\n        'σ': 's',\n        'τ': 't',\n        'υ': 'y',\n        'φ': 'f',\n        'χ': 'x',\n        'ψ': 'ps',\n        'ω': 'o',\n        'ά': 'a',\n        'έ': 'e',\n        'ί': 'i',\n        'ό': 'o',\n        'ύ': 'y',\n        'ή': 'i',\n        'ώ': 'o',\n        'ς': 's',\n        'ϊ': 'i',\n        'ΰ': 'y',\n        'ϋ': 'y',\n        'ΐ': 'i',\n        'Α': 'A',\n        'Β': 'B',\n        'Γ': 'G',\n        'Δ': 'D',\n        'Ε': 'E',\n        'Ζ': 'Z',\n        'Η': 'I',\n        'Θ': 'TH',\n        'Ι': 'I',\n        'Κ': 'K',\n        'Λ': 'L',\n        'Μ': 'M',\n        'Ν': 'N',\n        'Ξ': 'KS',\n        'Ο': 'O',\n        'Π': 'P',\n        'Ρ': 'R',\n        'Σ': 'S',\n        'Τ': 'T',\n        'Υ': 'Y',\n        'Φ': 'F',\n        'Χ': 'X',\n        'Ψ': 'PS',\n        'Ω': 'O',\n        'Ά': 'A',\n        'Έ': 'E',\n        'Ί': 'I',\n        'Ό': 'O',\n        'Ύ': 'Y',\n        'Ή': 'I',\n        'Ώ': 'O',\n        'Ϊ': 'I',\n        'Ϋ': 'Y',\n\n        // Latvian\n        'ā': 'a',\n        // 'č': 'c', // duplicate\n        'ē': 'e',\n        'ģ': 'g',\n        'ī': 'i',\n        'ķ': 'k',\n        'ļ': 'l',\n        'ņ': 'n',\n        // 'š': 's', // duplicate\n        'ū': 'u',\n        // 'ž': 'z', // duplicate\n        'Ā': 'A',\n        // 'Č': 'C', // duplicate\n        'Ē': 'E',\n        'Ģ': 'G',\n        'Ī': 'I',\n        'Ķ': 'k',\n        'Ļ': 'L',\n        'Ņ': 'N',\n        // 'Š': 'S', // duplicate\n        'Ū': 'U',\n        // 'Ž': 'Z', // duplicate\n\n        // Macedonian\n        'Ќ': 'Kj',\n        'ќ': 'kj',\n        'Љ': 'Lj',\n        'љ': 'lj',\n        'Њ': 'Nj',\n        'њ': 'nj',\n        'Тс': 'Ts',\n        'тс': 'ts',\n\n        // Polish\n        'ą': 'a',\n        'ć': 'c',\n        'ę': 'e',\n        'ł': 'l',\n        'ń': 'n',\n        // 'ó': 'o', // duplicate\n        'ś': 's',\n        'ź': 'z',\n        'ż': 'z',\n        'Ą': 'A',\n        'Ć': 'C',\n        'Ę': 'E',\n        'Ł': 'L',\n        'Ń': 'N',\n        'Ś': 'S',\n        'Ź': 'Z',\n        'Ż': 'Z',\n\n        // Ukranian\n        'Є': 'Ye',\n        'І': 'I',\n        'Ї': 'Yi',\n        'Ґ': 'G',\n        'є': 'ye',\n        'і': 'i',\n        'ї': 'yi',\n        'ґ': 'g',\n\n        // Romanian\n        'ă': 'a',\n        'Ă': 'A',\n        'ș': 's',\n        'Ș': 'S',\n        // 'ş': 's', // duplicate\n        // 'Ş': 'S', // duplicate\n        'ț': 't',\n        'Ț': 'T',\n        'ţ': 't',\n        'Ţ': 'T',\n\n        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n        // ICAO\n\n        'а': 'a',\n        'б': 'b',\n        'в': 'v',\n        'г': 'g',\n        'д': 'd',\n        'е': 'e',\n        'ё': 'yo',\n        'ж': 'zh',\n        'з': 'z',\n        'и': 'i',\n        'й': 'i',\n        'к': 'k',\n        'л': 'l',\n        'м': 'm',\n        'н': 'n',\n        'о': 'o',\n        'п': 'p',\n        'р': 'r',\n        'с': 's',\n        'т': 't',\n        'у': 'u',\n        'ф': 'f',\n        'х': 'kh',\n        'ц': 'c',\n        'ч': 'ch',\n        'ш': 'sh',\n        'щ': 'sh',\n        'ъ': '',\n        'ы': 'y',\n        'ь': '',\n        'э': 'e',\n        'ю': 'yu',\n        'я': 'ya',\n        'А': 'A',\n        'Б': 'B',\n        'В': 'V',\n        'Г': 'G',\n        'Д': 'D',\n        'Е': 'E',\n        'Ё': 'Yo',\n        'Ж': 'Zh',\n        'З': 'Z',\n        'И': 'I',\n        'Й': 'I',\n        'К': 'K',\n        'Л': 'L',\n        'М': 'M',\n        'Н': 'N',\n        'О': 'O',\n        'П': 'P',\n        'Р': 'R',\n        'С': 'S',\n        'Т': 'T',\n        'У': 'U',\n        'Ф': 'F',\n        'Х': 'Kh',\n        'Ц': 'C',\n        'Ч': 'Ch',\n        'Ш': 'Sh',\n        'Щ': 'Sh',\n        'Ъ': '',\n        'Ы': 'Y',\n        'Ь': '',\n        'Э': 'E',\n        'Ю': 'Yu',\n        'Я': 'Ya',\n\n        // Serbian\n        'ђ': 'dj',\n        'ј': 'j',\n        // 'љ': 'lj',  // duplicate\n        // 'њ': 'nj', // duplicate\n        'ћ': 'c',\n        'џ': 'dz',\n        'Ђ': 'Dj',\n        'Ј': 'j',\n        // 'Љ': 'Lj', // duplicate\n        // 'Њ': 'Nj', // duplicate\n        'Ћ': 'C',\n        'Џ': 'Dz',\n\n        // Slovak\n        'ľ': 'l',\n        'ĺ': 'l',\n        'ŕ': 'r',\n        'Ľ': 'L',\n        'Ĺ': 'L',\n        'Ŕ': 'R',\n\n        // Turkish\n        'ş': 's',\n        'Ş': 'S',\n        'ı': 'i',\n        'İ': 'I',\n        // 'ç': 'c', // duplicate\n        // 'Ç': 'C', // duplicate\n        // 'ü': 'u', // duplicate, see langCharMap\n        // 'Ü': 'U', // duplicate, see langCharMap\n        // 'ö': 'o', // duplicate, see langCharMap\n        // 'Ö': 'O', // duplicate, see langCharMap\n        'ğ': 'g',\n        'Ğ': 'G',\n\n        // Vietnamese\n        'ả': 'a',\n        'Ả': 'A',\n        'ẳ': 'a',\n        'Ẳ': 'A',\n        'ẩ': 'a',\n        'Ẩ': 'A',\n        'đ': 'd',\n        'Đ': 'D',\n        'ẹ': 'e',\n        'Ẹ': 'E',\n        'ẽ': 'e',\n        'Ẽ': 'E',\n        'ẻ': 'e',\n        'Ẻ': 'E',\n        'ế': 'e',\n        'Ế': 'E',\n        'ề': 'e',\n        'Ề': 'E',\n        'ệ': 'e',\n        'Ệ': 'E',\n        'ễ': 'e',\n        'Ễ': 'E',\n        'ể': 'e',\n        'Ể': 'E',\n        'ỏ': 'o',\n        'ọ': 'o',\n        'Ọ': 'o',\n        'ố': 'o',\n        'Ố': 'O',\n        'ồ': 'o',\n        'Ồ': 'O',\n        'ổ': 'o',\n        'Ổ': 'O',\n        'ộ': 'o',\n        'Ộ': 'O',\n        'ỗ': 'o',\n        'Ỗ': 'O',\n        'ơ': 'o',\n        'Ơ': 'O',\n        'ớ': 'o',\n        'Ớ': 'O',\n        'ờ': 'o',\n        'Ờ': 'O',\n        'ợ': 'o',\n        'Ợ': 'O',\n        'ỡ': 'o',\n        'Ỡ': 'O',\n        'Ở': 'o',\n        'ở': 'o',\n        'ị': 'i',\n        'Ị': 'I',\n        'ĩ': 'i',\n        'Ĩ': 'I',\n        'ỉ': 'i',\n        'Ỉ': 'i',\n        'ủ': 'u',\n        'Ủ': 'U',\n        'ụ': 'u',\n        'Ụ': 'U',\n        'ũ': 'u',\n        'Ũ': 'U',\n        'ư': 'u',\n        'Ư': 'U',\n        'ứ': 'u',\n        'Ứ': 'U',\n        'ừ': 'u',\n        'Ừ': 'U',\n        'ự': 'u',\n        'Ự': 'U',\n        'ữ': 'u',\n        'Ữ': 'U',\n        'ử': 'u',\n        'Ử': 'ư',\n        'ỷ': 'y',\n        'Ỷ': 'y',\n        'ỳ': 'y',\n        'Ỳ': 'Y',\n        'ỵ': 'y',\n        'Ỵ': 'Y',\n        'ỹ': 'y',\n        'Ỹ': 'Y',\n        'ạ': 'a',\n        'Ạ': 'A',\n        'ấ': 'a',\n        'Ấ': 'A',\n        'ầ': 'a',\n        'Ầ': 'A',\n        'ậ': 'a',\n        'Ậ': 'A',\n        'ẫ': 'a',\n        'Ẫ': 'A',\n        // 'ă': 'a', // duplicate\n        // 'Ă': 'A', // duplicate\n        'ắ': 'a',\n        'Ắ': 'A',\n        'ằ': 'a',\n        'Ằ': 'A',\n        'ặ': 'a',\n        'Ặ': 'A',\n        'ẵ': 'a',\n        'Ẵ': 'A',\n\n        // symbols\n        '“': '\"',\n        '”': '\"',\n        '‘': \"'\",\n        '’': \"'\",\n        '∂': 'd',\n        'ƒ': 'f',\n        '™': '(TM)',\n        '©': '(C)',\n        'œ': 'oe',\n        'Œ': 'OE',\n        '®': '(R)',\n        '†': '+',\n        '℠': '(SM)',\n        '…': '...',\n        '˚': 'o',\n        'º': 'o',\n        'ª': 'a',\n        '•': '*',\n        '၊': ',',\n        '။': '.',\n\n        // currency\n        '$': 'USD',\n        '€': 'EUR',\n        '₢': 'BRN',\n        '₣': 'FRF',\n        '£': 'GBP',\n        '₤': 'ITL',\n        '₦': 'NGN',\n        '₧': 'ESP',\n        '₩': 'KRW',\n        '₪': 'ILS',\n        '₫': 'VND',\n        '₭': 'LAK',\n        '₮': 'MNT',\n        '₯': 'GRD',\n        '₱': 'ARS',\n        '₲': 'PYG',\n        '₳': 'ARA',\n        '₴': 'UAH',\n        '₵': 'GHS',\n        '¢': 'cent',\n        '¥': 'CNY',\n        '元': 'CNY',\n        '円': 'YEN',\n        '﷼': 'IRR',\n        '₠': 'EWE',\n        '฿': 'THB',\n        '₨': 'INR',\n        '₹': 'INR',\n        '₰': 'PF',\n        '₺': 'TRY',\n        '؋': 'AFN',\n        '₼': 'AZN',\n        'лв': 'BGN',\n        '៛': 'KHR',\n        '₡': 'CRC',\n        '₸': 'KZT',\n        'ден': 'MKD',\n        'zł': 'PLN',\n        '₽': 'RUB',\n        '₾': 'GEL'\n\n    };\n\n    /**\n     * special look ahead character array\n     * These characters form with consonants to become 'single'/consonant combo\n     * @type [Array]\n     */\n    var lookAheadCharArray = [\n        // burmese\n        '်',\n\n        // Dhivehi\n        'ް'\n    ];\n\n    /**\n     * diatricMap for languages where transliteration changes entirely as more diatrics are added\n     * @type {Object}\n     */\n    var diatricMap = {\n        // Burmese\n        // dependent vowels\n        'ာ': 'a',\n        'ါ': 'a',\n        'ေ': 'e',\n        'ဲ': 'e',\n        'ိ': 'i',\n        'ီ': 'i',\n        'ို': 'o',\n        'ု': 'u',\n        'ူ': 'u',\n        'ေါင်': 'aung',\n        'ော': 'aw',\n        'ော်': 'aw',\n        'ေါ': 'aw',\n        'ေါ်': 'aw',\n        '်': '်', // this is special case but the character will be converted to latin in the code\n        'က်': 'et',\n        'ိုက်': 'aik',\n        'ောက်': 'auk',\n        'င်': 'in',\n        'ိုင်': 'aing',\n        'ောင်': 'aung',\n        'စ်': 'it',\n        'ည်': 'i',\n        'တ်': 'at',\n        'ိတ်': 'eik',\n        'ုတ်': 'ok',\n        'ွတ်': 'ut',\n        'ေတ်': 'it',\n        'ဒ်': 'd',\n        'ိုဒ်': 'ok',\n        'ုဒ်': 'ait',\n        'န်': 'an',\n        'ာန်': 'an',\n        'ိန်': 'ein',\n        'ုန်': 'on',\n        'ွန်': 'un',\n        'ပ်': 'at',\n        'ိပ်': 'eik',\n        'ုပ်': 'ok',\n        'ွပ်': 'ut',\n        'န်ုပ်': 'nub',\n        'မ်': 'an',\n        'ိမ်': 'ein',\n        'ုမ်': 'on',\n        'ွမ်': 'un',\n        'ယ်': 'e',\n        'ိုလ်': 'ol',\n        'ဉ်': 'in',\n        'ံ': 'an',\n        'ိံ': 'ein',\n        'ုံ': 'on',\n\n        // Dhivehi\n        'ައް': 'ah',\n        'ަށް': 'ah'\n    };\n\n    /**\n     * langCharMap language specific characters translations\n     * @type   {Object}\n     */\n    var langCharMap = {\n        'en': {}, // default language\n\n        'az': { // Azerbaijani\n            'ç': 'c',\n            'ə': 'e',\n            'ğ': 'g',\n            'ı': 'i',\n            'ö': 'o',\n            'ş': 's',\n            'ü': 'u',\n            'Ç': 'C',\n            'Ə': 'E',\n            'Ğ': 'G',\n            'İ': 'I',\n            'Ö': 'O',\n            'Ş': 'S',\n            'Ü': 'U'\n        },\n\n        'cs': { // Czech\n            'č': 'c',\n            'ď': 'd',\n            'ě': 'e',\n            'ň': 'n',\n            'ř': 'r',\n            'š': 's',\n            'ť': 't',\n            'ů': 'u',\n            'ž': 'z',\n            'Č': 'C',\n            'Ď': 'D',\n            'Ě': 'E',\n            'Ň': 'N',\n            'Ř': 'R',\n            'Š': 'S',\n            'Ť': 'T',\n            'Ů': 'U',\n            'Ž': 'Z'\n        },\n\n        'fi': { // Finnish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'hu': { // Hungarian\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            // 'á': 'a', duplicate see charMap/latin\n            // 'Á': 'A', duplicate see charMap/latin\n            'ö': 'o', // ok\n            'Ö': 'O', // ok\n            // 'ő': 'o', duplicate see charMap/latin\n            // 'Ő': 'O', duplicate see charMap/latin\n            'ü': 'u',\n            'Ü': 'U',\n            'ű': 'u',\n            'Ű': 'U'\n        },\n\n        'lt': { // Lithuanian\n            'ą': 'a',\n            'č': 'c',\n            'ę': 'e',\n            'ė': 'e',\n            'į': 'i',\n            'š': 's',\n            'ų': 'u',\n            'ū': 'u',\n            'ž': 'z',\n            'Ą': 'A',\n            'Č': 'C',\n            'Ę': 'E',\n            'Ė': 'E',\n            'Į': 'I',\n            'Š': 'S',\n            'Ų': 'U',\n            'Ū': 'U'\n        },\n\n        'lv': { // Latvian\n            'ā': 'a',\n            'č': 'c',\n            'ē': 'e',\n            'ģ': 'g',\n            'ī': 'i',\n            'ķ': 'k',\n            'ļ': 'l',\n            'ņ': 'n',\n            'š': 's',\n            'ū': 'u',\n            'ž': 'z',\n            'Ā': 'A',\n            'Č': 'C',\n            'Ē': 'E',\n            'Ģ': 'G',\n            'Ī': 'i',\n            'Ķ': 'k',\n            'Ļ': 'L',\n            'Ņ': 'N',\n            'Š': 'S',\n            'Ū': 'u',\n            'Ž': 'Z'\n        },\n\n        'pl': { // Polish\n            'ą': 'a',\n            'ć': 'c',\n            'ę': 'e',\n            'ł': 'l',\n            'ń': 'n',\n            'ó': 'o',\n            'ś': 's',\n            'ź': 'z',\n            'ż': 'z',\n            'Ą': 'A',\n            'Ć': 'C',\n            'Ę': 'e',\n            'Ł': 'L',\n            'Ń': 'N',\n            'Ó': 'O',\n            'Ś': 'S',\n            'Ź': 'Z',\n            'Ż': 'Z'\n        },\n\n        'sk': { // Slovak\n            'ä': 'a',\n            'Ä': 'A'\n        },\n\n        'sr': { // Serbian\n            'љ': 'lj',\n            'њ': 'nj',\n            'Љ': 'Lj',\n            'Њ': 'Nj',\n            'đ': 'dj',\n            'Đ': 'Dj'\n        },\n\n        'tr': { // Turkish\n            'Ü': 'U',\n            'Ö': 'O',\n            'ü': 'u',\n            'ö': 'o'\n        }\n    };\n\n    /**\n     * symbolMap language specific symbol translations\n     * translations must be transliterated already\n     * @type   {Object}\n     */\n    var symbolMap = {\n        'ar': {\n            '∆': 'delta',\n            '∞': 'la-nihaya',\n            '♥': 'hob',\n            '&': 'wa',\n            '|': 'aw',\n            '<': 'aqal-men',\n            '>': 'akbar-men',\n            '∑': 'majmou',\n            '¤': 'omla'\n        },\n\n        'az': {},\n\n        'ca': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'amor',\n            '&': 'i',\n            '|': 'o',\n            '<': 'menys que',\n            '>': 'mes que',\n            '∑': 'suma dels',\n            '¤': 'moneda'\n        },\n\n        'cs': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'nebo',\n            '<': 'mensi nez',\n            '>': 'vetsi nez',\n            '∑': 'soucet',\n            '¤': 'mena'\n        },\n\n        'de': {\n            '∆': 'delta',\n            '∞': 'unendlich',\n            '♥': 'Liebe',\n            '&': 'und',\n            '|': 'oder',\n            '<': 'kleiner als',\n            '>': 'groesser als',\n            '∑': 'Summe von',\n            '¤': 'Waehrung'\n        },\n\n        'dv': {\n            '∆': 'delta',\n            '∞': 'kolunulaa',\n            '♥': 'loabi',\n            '&': 'aai',\n            '|': 'noonee',\n            '<': 'ah vure kuda',\n            '>': 'ah vure bodu',\n            '∑': 'jumula',\n            '¤': 'faisaa'\n        },\n\n        'en': {\n            '∆': 'delta',\n            '∞': 'infinity',\n            '♥': 'love',\n            '&': 'and',\n            '|': 'or',\n            '<': 'less than',\n            '>': 'greater than',\n            '∑': 'sum',\n            '¤': 'currency'\n        },\n\n        'es': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'y',\n            '|': 'u',\n            '<': 'menos que',\n            '>': 'mas que',\n            '∑': 'suma de los',\n            '¤': 'moneda'\n        },\n\n        'fa': {\n            '∆': 'delta',\n            '∞': 'bi-nahayat',\n            '♥': 'eshgh',\n            '&': 'va',\n            '|': 'ya',\n            '<': 'kamtar-az',\n            '>': 'bishtar-az',\n            '∑': 'majmooe',\n            '¤': 'vahed'\n        },\n\n        'fi': {\n            '∆': 'delta',\n            '∞': 'aarettomyys',\n            '♥': 'rakkaus',\n            '&': 'ja',\n            '|': 'tai',\n            '<': 'pienempi kuin',\n            '>': 'suurempi kuin',\n            '∑': 'summa',\n            '¤': 'valuutta'\n        },\n\n        'fr': {\n            '∆': 'delta',\n            '∞': 'infiniment',\n            '♥': 'Amour',\n            '&': 'et',\n            '|': 'ou',\n            '<': 'moins que',\n            '>': 'superieure a',\n            '∑': 'somme des',\n            '¤': 'monnaie'\n        },\n\n        'ge': {\n            '∆': 'delta',\n            '∞': 'usasruloba',\n            '♥': 'siqvaruli',\n            '&': 'da',\n            '|': 'an',\n            '<': 'naklebi',\n            '>': 'meti',\n            '∑': 'jami',\n            '¤': 'valuta'\n        },\n\n        'gr': {},\n\n        'hu': {\n            '∆': 'delta',\n            '∞': 'vegtelen',\n            '♥': 'szerelem',\n            '&': 'es',\n            '|': 'vagy',\n            '<': 'kisebb mint',\n            '>': 'nagyobb mint',\n            '∑': 'szumma',\n            '¤': 'penznem'\n        },\n\n        'it': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amore',\n            '&': 'e',\n            '|': 'o',\n            '<': 'minore di',\n            '>': 'maggiore di',\n            '∑': 'somma',\n            '¤': 'moneta'\n        },\n\n        'lt': {\n            '∆': 'delta',\n            '∞': 'begalybe',\n            '♥': 'meile',\n            '&': 'ir',\n            '|': 'ar',\n            '<': 'maziau nei',\n            '>': 'daugiau nei',\n            '∑': 'suma',\n            '¤': 'valiuta'\n        },\n\n        'lv': {\n            '∆': 'delta',\n            '∞': 'bezgaliba',\n            '♥': 'milestiba',\n            '&': 'un',\n            '|': 'vai',\n            '<': 'mazak neka',\n            '>': 'lielaks neka',\n            '∑': 'summa',\n            '¤': 'valuta'\n        },\n\n        'my': {\n            '∆': 'kwahkhyaet',\n            '∞': 'asaonasme',\n            '♥': 'akhyait',\n            '&': 'nhin',\n            '|': 'tho',\n            '<': 'ngethaw',\n            '>': 'kyithaw',\n            '∑': 'paungld',\n            '¤': 'ngwekye'\n        },\n\n        'mk': {},\n\n        'nl': {\n            '∆': 'delta',\n            '∞': 'oneindig',\n            '♥': 'liefde',\n            '&': 'en',\n            '|': 'of',\n            '<': 'kleiner dan',\n            '>': 'groter dan',\n            '∑': 'som',\n            '¤': 'valuta'\n        },\n\n        'pl': {\n            '∆': 'delta',\n            '∞': 'nieskonczonosc',\n            '♥': 'milosc',\n            '&': 'i',\n            '|': 'lub',\n            '<': 'mniejsze niz',\n            '>': 'wieksze niz',\n            '∑': 'suma',\n            '¤': 'waluta'\n        },\n\n        'pt': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'e',\n            '|': 'ou',\n            '<': 'menor que',\n            '>': 'maior que',\n            '∑': 'soma',\n            '¤': 'moeda'\n        },\n\n        'ro': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'dragoste',\n            '&': 'si',\n            '|': 'sau',\n            '<': 'mai mic ca',\n            '>': 'mai mare ca',\n            '∑': 'suma',\n            '¤': 'valuta'\n        },\n\n        'ru': {\n            '∆': 'delta',\n            '∞': 'beskonechno',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'ili',\n            '<': 'menshe',\n            '>': 'bolshe',\n            '∑': 'summa',\n            '¤': 'valjuta'\n        },\n\n        'sk': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'alebo',\n            '<': 'menej ako',\n            '>': 'viac ako',\n            '∑': 'sucet',\n            '¤': 'mena'\n        },\n\n        'sr': {},\n\n        'tr': {\n            '∆': 'delta',\n            '∞': 'sonsuzluk',\n            '♥': 'ask',\n            '&': 've',\n            '|': 'veya',\n            '<': 'kucuktur',\n            '>': 'buyuktur',\n            '∑': 'toplam',\n            '¤': 'para birimi'\n        },\n\n        'uk': {\n            '∆': 'delta',\n            '∞': 'bezkinechnist',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'abo',\n            '<': 'menshe',\n            '>': 'bilshe',\n            '∑': 'suma',\n            '¤': 'valjuta'\n        },\n\n        'vn': {\n            '∆': 'delta',\n            '∞': 'vo cuc',\n            '♥': 'yeu',\n            '&': 'va',\n            '|': 'hoac',\n            '<': 'nho hon',\n            '>': 'lon hon',\n            '∑': 'tong',\n            '¤': 'tien te'\n        }\n    };\n\n    var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n\n    var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n\n    var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n\n    /**\n     * getSlug\n     * @param  {string} input input string\n     * @param  {object|string} opts config object or separator string/char\n     * @api    public\n     * @return {string}  sluggified string\n     */\n    var getSlug = function getSlug(input, opts) {\n        var separator = '-';\n        var result = '';\n        var diatricString = '';\n        var convertSymbols = true;\n        var customReplacements = {};\n        var maintainCase;\n        var titleCase;\n        var truncate;\n        var uricFlag;\n        var uricNoSlashFlag;\n        var markFlag;\n        var symbol;\n        var langChar;\n        var lucky;\n        var i;\n        var ch;\n        var l;\n        var lastCharWasSymbol;\n        var lastCharWasDiatric;\n        var allowedChars = '';\n\n        if (typeof input !== 'string') {\n            return '';\n        }\n\n        if (typeof opts === 'string') {\n            separator = opts;\n        }\n\n        symbol = symbolMap.en;\n        langChar = langCharMap.en;\n\n        if (typeof opts === 'object') {\n            maintainCase = opts.maintainCase || false;\n            customReplacements = (opts.custom && typeof opts.custom === 'object') ? opts.custom : customReplacements;\n            truncate = (+opts.truncate > 1 && opts.truncate) || false;\n            uricFlag = opts.uric || false;\n            uricNoSlashFlag = opts.uricNoSlash || false;\n            markFlag = opts.mark || false;\n            convertSymbols = (opts.symbols === false || opts.lang === false) ? false : true;\n            separator = opts.separator || separator;\n\n            if (uricFlag) {\n                allowedChars += uricChars;\n            }\n\n            if (uricNoSlashFlag) {\n                allowedChars += uricNoSlashChars;\n            }\n\n            if (markFlag) {\n                allowedChars += markChars;\n            }\n\n            symbol = (opts.lang && symbolMap[opts.lang] && convertSymbols) ?\n                symbolMap[opts.lang] : (convertSymbols ? symbolMap.en : {});\n\n            langChar = (opts.lang && langCharMap[opts.lang]) ?\n                langCharMap[opts.lang] :\n                opts.lang === false || opts.lang === true ? {} : langCharMap.en;\n\n            // if titleCase config is an Array, rewrite to object format\n            if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n                opts.titleCase.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n\n                titleCase = true;\n            } else {\n                titleCase = !!opts.titleCase;\n            }\n\n            // if custom config is an Array, rewrite to object format\n            if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n                opts.custom.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n            }\n\n            // custom replacements\n            Object.keys(customReplacements).forEach(function (v) {\n                var r;\n\n                if (v.length > 1) {\n                    r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n                } else {\n                    r = new RegExp(escapeChars(v), 'gi');\n                }\n\n                input = input.replace(r, customReplacements[v]);\n            });\n\n            // add all custom replacement to allowed charlist\n            for (ch in customReplacements) {\n                allowedChars += ch;\n            }\n        }\n\n        allowedChars += separator;\n\n        // escape all necessary chars\n        allowedChars = escapeChars(allowedChars);\n\n        // trim whitespaces\n        input = input.replace(/(^\\s+|\\s+$)/g, '');\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n\n        for (i = 0, l = input.length; i < l; i++) {\n            ch = input[i];\n\n            if (isReplacedCustomChar(ch, customReplacements)) {\n                // don't convert a already converted char\n                lastCharWasSymbol = false;\n            } else if (langChar[ch]) {\n                // process language specific diactrics chars conversion\n                ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n\n                lastCharWasSymbol = false;\n            } else if (ch in charMap) {\n                // the transliteration changes entirely when some special characters are added\n                if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n                    diatricString += ch;\n                    ch = '';\n                } else if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + charMap[ch];\n                    diatricString = '';\n                } else {\n                    // process diactrics chars\n                    ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n                }\n\n                lastCharWasSymbol = false;\n                lastCharWasDiatric = false;\n            } else if (ch in diatricMap) {\n                diatricString += ch;\n                ch = '';\n                // end of string, put the whole meaningful word\n                if (i === l - 1) {\n                    ch = diatricMap[diatricString];\n                }\n                lastCharWasDiatric = true;\n            } else if (\n                // process symbol chars\n                symbol[ch] && !(uricFlag && uricChars\n                    .indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars\n                    // .indexOf(ch) !== -1) && !(markFlag && markChars\n                    .indexOf(ch) !== -1)) {\n                ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n                ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n\n                lastCharWasSymbol = true;\n            } else {\n                if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + ch;\n                    diatricString = '';\n                    lastCharWasDiatric = false;\n                } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n                    // process latin chars\n                    ch = ' ' + ch;\n                }\n                lastCharWasSymbol = false;\n            }\n\n            // add allowed chars\n            result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n        }\n\n        if (titleCase) {\n            result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n                var j = i.toUpperCase() + (r !== null ? r : '');\n                return (Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0) ? j : j.toLowerCase();\n            });\n        }\n\n        // eliminate duplicate separators\n        // add separator\n        // trim separators from start and end\n        result = result.replace(/\\s+/g, separator)\n            .replace(new RegExp('\\\\' + separator + '+', 'g'), separator)\n            .replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n        if (truncate && result.length > truncate) {\n            lucky = result.charAt(truncate) === separator;\n            result = result.slice(0, truncate);\n\n            if (!lucky) {\n                result = result.slice(0, result.lastIndexOf(separator));\n            }\n        }\n\n        if (!maintainCase && !titleCase) {\n            result = result.toLowerCase();\n        }\n\n        return result;\n    };\n\n    /**\n     * createSlug curried(opts)(input)\n     * @param   {object|string} opts config object or input string\n     * @return  {Function} function getSlugWithConfig()\n     **/\n    var createSlug = function createSlug(opts) {\n\n        /**\n         * getSlugWithConfig\n         * @param   {string} input string\n         * @return  {string} slug string\n         */\n        return function getSlugWithConfig(input) {\n            return getSlug(input, opts);\n        };\n    };\n\n    /**\n     * escape Chars\n     * @param   {string} input string\n     */\n    var escapeChars = function escapeChars(input) {\n        return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n    };\n\n    /**\n     * check if the char is an already converted char from custom list\n     * @param   {char} ch character to check\n     * @param   {object} customReplacements custom translation map\n     */\n    var isReplacedCustomChar = function (ch, customReplacements) {\n        for (var c in customReplacements) {\n            if (customReplacements[c] === ch) {\n                return true;\n            }\n        }\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n\n        // export functions for use in Node\n        module.exports = getSlug;\n        module.exports.createSlug = createSlug;\n    } else if (typeof define !== 'undefined' && define.amd) {\n\n        // export function for use in AMD\n        define([], function () {\n            return getSlug;\n        });\n    } else {\n\n        // don't overwrite global if exists\n        try {\n            if (root.getSlug || root.createSlug) {\n                throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n            } else {\n                root.getSlug = getSlug;\n                root.createSlug = createSlug;\n            }\n        } catch (e) {}\n    }\n})(this);","( function( window, undefined ) {\n\t'use strict';\n\n\t/**\n\t * Handles managing all events for whatever you plug it into. Priorities for hooks are based on lowest to highest in\n\t * that, lowest priority hooks are fired first.\n\t */\n\tvar EventManager = function() {\n\t\tvar slice = Array.prototype.slice;\n\t\t\n\t\t/**\n\t\t * Maintain a reference to the object scope so our public methods never get confusing.\n\t\t */\n\t\tvar MethodsAvailable = {\n\t\t\tremoveFilter : removeFilter,\n\t\t\tapplyFilters : applyFilters,\n\t\t\taddFilter : addFilter,\n\t\t\tremoveAction : removeAction,\n\t\t\tdoAction : doAction,\n\t\t\taddAction : addAction\n\t\t};\n\n\t\t/**\n\t\t * Contains the hooks that get registered with this EventManager. The array for storage utilizes a \"flat\"\n\t\t * object literal such that looking up the hook utilizes the native object literal hash.\n\t\t */\n\t\tvar STORAGE = {\n\t\t\tactions : {},\n\t\t\tfilters : {}\n\t\t};\n\n\t\t/**\n\t\t * Adds an action to the event manager.\n\t\t *\n\t\t * @param action Must contain namespace.identifier\n\t\t * @param callback Must be a valid callback function before this action is added\n\t\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\n\t\t * @param [context] Supply a value to be used for this\n\t\t */\n\t\tfunction addAction( action, callback, priority, context ) {\n\t\t\tif( typeof action === 'string' && typeof callback === 'function' ) {\n\t\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\n\t\t\t\t_addHook( 'actions', action, callback, priority, context );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Performs an action if it exists. You can pass as many arguments as you want to this function; the only rule is\n\t\t * that the first argument must always be the action.\n\t\t */\n\t\tfunction doAction( /* action, arg1, arg2, ... */ ) {\n\t\t\tvar args = slice.call( arguments );\n\t\t\tvar action = args.shift();\n\n\t\t\tif( typeof action === 'string' ) {\n\t\t\t\t_runHook( 'actions', action, args );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Removes the specified action if it contains a namespace.identifier & exists.\n\t\t *\n\t\t * @param action The action to remove\n\t\t * @param [callback] Callback function to remove\n\t\t */\n\t\tfunction removeAction( action, callback ) {\n\t\t\tif( typeof action === 'string' ) {\n\t\t\t\t_removeHook( 'actions', action, callback );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Adds a filter to the event manager.\n\t\t *\n\t\t * @param filter Must contain namespace.identifier\n\t\t * @param callback Must be a valid callback function before this action is added\n\t\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\n\t\t * @param [context] Supply a value to be used for this\n\t\t */\n\t\tfunction addFilter( filter, callback, priority, context ) {\n\t\t\tif( typeof filter === 'string' && typeof callback === 'function' ) {\n\t\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\n\t\t\t\t_addHook( 'filters', filter, callback, priority, context );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Performs a filter if it exists. You should only ever pass 1 argument to be filtered. The only rule is that\n\t\t * the first argument must always be the filter.\n\t\t */\n\t\tfunction applyFilters( /* filter, filtered arg, arg2, ... */ ) {\n\t\t\tvar args = slice.call( arguments );\n\t\t\tvar filter = args.shift();\n\n\t\t\tif( typeof filter === 'string' ) {\n\t\t\t\treturn _runHook( 'filters', filter, args );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Removes the specified filter if it contains a namespace.identifier & exists.\n\t\t *\n\t\t * @param filter The action to remove\n\t\t * @param [callback] Callback function to remove\n\t\t */\n\t\tfunction removeFilter( filter, callback ) {\n\t\t\tif( typeof filter === 'string') {\n\t\t\t\t_removeHook( 'filters', filter, callback );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Removes the specified hook by resetting the value of it.\n\t\t *\n\t\t * @param type Type of hook, either 'actions' or 'filters'\n\t\t * @param hook The hook (namespace.identifier) to remove\n\t\t * @private\n\t\t */\n\t\tfunction _removeHook( type, hook, callback, context ) {\n\t\t\tvar handlers, handler, i;\n\t\t\t\n\t\t\tif ( !STORAGE[ type ][ hook ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( !callback ) {\n\t\t\t\tSTORAGE[ type ][ hook ] = [];\n\t\t\t} else {\n\t\t\t\thandlers = STORAGE[ type ][ hook ];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\tfor ( i = handlers.length; i--; ) {\n\t\t\t\t\t\tif ( handlers[i].callback === callback ) {\n\t\t\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i = handlers.length; i--; ) {\n\t\t\t\t\t\thandler = handlers[i];\n\t\t\t\t\t\tif ( handler.callback === callback && handler.context === context) {\n\t\t\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adds the hook to the appropriate storage container\n\t\t *\n\t\t * @param type 'actions' or 'filters'\n\t\t * @param hook The hook (namespace.identifier) to add to our event manager\n\t\t * @param callback The function that will be called when the hook is executed.\n\t\t * @param priority The priority of this hook. Must be an integer.\n\t\t * @param [context] A value to be used for this\n\t\t * @private\n\t\t */\n\t\tfunction _addHook( type, hook, callback, priority, context ) {\n\t\t\tvar hookObject = {\n\t\t\t\tcallback : callback,\n\t\t\t\tpriority : priority,\n\t\t\t\tcontext : context\n\t\t\t};\n\n\t\t\t// Utilize 'prop itself' : http://jsperf.com/hasownproperty-vs-in-vs-undefined/19\n\t\t\tvar hooks = STORAGE[ type ][ hook ];\n\t\t\tif( hooks ) {\n\t\t\t\thooks.push( hookObject );\n\t\t\t\thooks = _hookInsertSort( hooks );\n\t\t\t}\n\t\t\telse {\n\t\t\t\thooks = [ hookObject ];\n\t\t\t}\n\n\t\t\tSTORAGE[ type ][ hook ] = hooks;\n\t\t}\n\n\t\t/**\n\t\t * Use an insert sort for keeping our hooks organized based on priority. This function is ridiculously faster\n\t\t * than bubble sort, etc: http://jsperf.com/javascript-sort\n\t\t *\n\t\t * @param hooks The custom array containing all of the appropriate hooks to perform an insert sort on.\n\t\t * @private\n\t\t */\n\t\tfunction _hookInsertSort( hooks ) {\n\t\t\tvar tmpHook, j, prevHook;\n\t\t\tfor( var i = 1, len = hooks.length; i < len; i++ ) {\n\t\t\t\ttmpHook = hooks[ i ];\n\t\t\t\tj = i;\n\t\t\t\twhile( ( prevHook = hooks[ j - 1 ] ) &&  prevHook.priority > tmpHook.priority ) {\n\t\t\t\t\thooks[ j ] = hooks[ j - 1 ];\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t\thooks[ j ] = tmpHook;\n\t\t\t}\n\n\t\t\treturn hooks;\n\t\t}\n\n\t\t/**\n\t\t * Runs the specified hook. If it is an action, the value is not modified but if it is a filter, it is.\n\t\t *\n\t\t * @param type 'actions' or 'filters'\n\t\t * @param hook The hook ( namespace.identifier ) to be ran.\n\t\t * @param args Arguments to pass to the action/filter. If it's a filter, args is actually a single parameter.\n\t\t * @private\n\t\t */\n\t\tfunction _runHook( type, hook, args ) {\n\t\t\tvar handlers = STORAGE[ type ][ hook ], i, len;\n\t\t\t\n\t\t\tif ( !handlers ) {\n\t\t\t\treturn (type === 'filters') ? args[0] : false;\n\t\t\t}\n\n\t\t\tlen = handlers.length;\n\t\t\tif ( type === 'filters' ) {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\targs[ 0 ] = handlers[ i ].callback.apply( handlers[ i ].context, args );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\thandlers[ i ].callback.apply( handlers[ i ].context, args );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ( type === 'filters' ) ? args[ 0 ] : true;\n\t\t}\n\n\t\t// return all of the publicly available methods\n\t\treturn MethodsAvailable;\n\n\t};\n\t\n\t\n\twindow.hooksManager = window.hooksManager || new EventManager();\n\n} )( window );","(function ($) {\n    if (!Element.prototype.scrollIntoViewIfNeeded) {\n        Element.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded) {\n            centerIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;\n\n            var parent = this.parentNode,\n                parentComputedStyle = window.getComputedStyle(parent, null),\n                parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width')),\n                parentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue('border-left-width')),\n                overTop = this.offsetTop - parent.offsetTop < parent.scrollTop,\n                overBottom = (this.offsetTop - parent.offsetTop + this.clientHeight - parentBorderTopWidth) > (parent.scrollTop + parent.clientHeight),\n                overLeft = this.offsetLeft - parent.offsetLeft < parent.scrollLeft,\n                overRight = (this.offsetLeft - parent.offsetLeft + this.clientWidth - parentBorderLeftWidth) > (parent.scrollLeft + parent.clientWidth),\n                alignWithTop = overTop && !overBottom;\n\n            if ((overTop || overBottom) && centerIfNeeded) {\n                parent.scrollTop = this.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + this.clientHeight / 2;\n            }\n\n            if ((overLeft || overRight) && centerIfNeeded) {\n                parent.scrollLeft = this.offsetLeft - parent.offsetLeft - parent.clientWidth / 2 - parentBorderLeftWidth + this.clientWidth / 2;\n            }\n\n            if ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {\n                this.scrollIntoView(alignWithTop);\n            }\n        };\n    }\n\n    $.fn.tagName = function () {\n        if (!this[0])\n            return null;\n        if (this[0] && this[0].nodeName) {\n            return this[0].nodeName.toLowerCase();\n        }\n        return null;\n    };\n\n    $.fn.insertAt = function (index, $parent) {\n        return this.each(function () {\n            if ($(this).parent().is($parent)) {\n                var siblings = $(this).siblings();\n                if (index < siblings.length) {\n                    siblings.eq(index).before(this);\n                } else {\n                    siblings.last().after(this);\n                }\n            } else {\n                if (index === 0 || !$parent.children().length) {\n                    $parent.prepend(this);\n                } else {\n                    if (index >= $parent.children().length) {\n                        $parent.append(this);\n                    } else {\n                        $parent.children().eq(index - 1).after(this);\n                    }\n                }\n            }\n        });\n    };\n\n\n    if (!NodeList.prototype.forEach) {\n        NodeList.prototype.forEach = Array.prototype.forEach;\n        HTMLCollection.prototype.forEach = Array.prototype.forEach; // Because of https://bugzilla.mozilla.org/show_bug.cgi?id=14869\n\n    }\n\n    if (!Array.from) {\n        Array.from = function (object) {\n            return [].slice.call(object);\n        };\n    }\n\n\n})(jQuery);\n\n(function ($, root) {\n\n    wp.customize.bind(\"save-request-params\", function (query) {\n        query.customize_post_id = CP_Customizer.preview.data().pageID;\n        if (CP_Customizer && CP_Customizer.hooks) {\n            query = CP_Customizer.hooks.applyFilters('save-request-params', query);\n        }\n        return query;\n    });\n\n    function translateCompanionString(text) {\n\n        if (!text || !_.isString(text)) {\n            return text;\n        }\n\n        if (root.__materialisCustomizerStrings[text] !== undefined) {\n            return root.__materialisCustomizerStrings[text];\n        } else {\n            //in debug mode\n            if (CP_Customizer.options('SCRIPT_DEBUG')) {\n                console.warn(\"[Not translated] \" + text);\n            }\n            return text;\n        }\n    }\n\n    var CP_Customizer = {\n            events: {\n                \"PREVIEW_LOADED\": \"PREVIEW_LOADED\",\n                \"ADD_FIXED_OVERLAYS\": \"ADD_FIXED_OVERLAYS\",\n                \"RIGHT_SECTION_CLOSED\": \"RIGHT_SECTION_CLOSED\",\n                \"ELEMENT_DECORATED\": \"ELEMENT_DECORATED\",\n                \"CONTENT_ROW_REMOVED\": \"CONTENT_ROW_REMOVED\",\n                \"DOCUMENT_READY\": \"DOCUMENT_READY\",\n                \"STATE_UPDATED\": \"STATE_UPDATED\",\n                \"FOCUS_CONTROL\": \"FOCUS_CONTROL\"\n            },\n\n            getSlug: window.getSlug,\n\n            wpApi: wp.customize,\n\n            MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : 9007199254740991,\n\n            hooks: window.hooksManager,\n\n            CONTENT_ELEMENTS: 'p,h1,h2,h3,h4,h5,h6,a,span,i,hr,img,ul,div.spacer',\n            TEXT_ELEMENTS: \"p,h1,h2,h3,h4,h5,h6,span\",\n            THEME_MOD_NODES: '[data-theme],[data-theme-src],[data-theme-mdi]',\n\n            translateCompanionString: translateCompanionString,\n\n            data: function () {\n                return root.cpCustomizerGlobal.pluginOptions.data;\n            },\n\n            addContentElementsSelectors: function (selectors) {\n                if (!_.isArray(selectors)) {\n                    selectors = [selectors]\n                }\n\n                this.CONTENT_ELEMENTS = this.CONTENT_ELEMENTS.split(',').concat(selectors).join(',')\n            },\n\n            IO: {\n                get: function (action, data) {\n                    return this.send({\n                        data: _.isObject(action) ? action : _.extend(data || {}, {action: action}),\n                        type: 'GET'\n                    });\n                },\n                post: function (action, data) {\n                    return this.send({\n                        data: _.isObject(action) ? action : _.extend(data || {}, {action: action})\n                    });\n                },\n\n\n                customGet: function (url, data) {\n                    data = _.isObject(data) ? data : {};\n                    var options = {\n                        type: \"GET\",\n                        data: data\n                    };\n\n\n                    return CP_Customizer.IO.customSend(url, options);\n                },\n                customPost: function (url, data) {\n                    data = _.isObject(data) ? data : {};\n                    var options = {\n                        type: \"POST\",\n                        data: data\n                    };\n\n                    return CP_Customizer.IO.customSend(url, options);\n                },\n\n                customSend: function (url, options) {\n\n                    options = _.defaults(options || {}, {\n                        type: 'POST',\n                        url: url\n                    });\n\n                    return CP_Customizer.IO.send(options);\n                },\n\n                rest: {\n                    get: function (route, data) {\n                        data = _.isObject(data) ? data : {};\n                        var options = {\n                            type: \"GET\",\n                            data: data\n                        };\n\n\n                        return CP_Customizer.IO.rest.send(route, options);\n                    },\n                    post: function (route, data) {\n                        data = _.isObject(data) ? data : {};\n                        var options = {\n                            type: \"POST\",\n                            data: data\n                        };\n\n                        return CP_Customizer.IO.rest.send(route, options);\n                    },\n\n                    send: function (route, options) {\n                        var url = CP_Customizer.options('restURL');\n\n                        options = _.defaults(options || {}, {\n                            type: 'POST',\n                            url: CP_Customizer.utils.phpTrim(url, '/') + \"/\" + CP_Customizer.utils.phpTrim(route, '/')\n                        });\n\n                        return CP_Customizer.IO.send(options);\n                    }\n                },\n\n                send: function (action, options) {\n                    var promise, deferred;\n                    if (_.isObject(action)) {\n                        options = action;\n                    } else {\n                        options = options || {};\n                        options.data = _.extend(options.data || {}, {action: action});\n                    }\n\n                    options = _.defaults(options || {}, {\n                        type: 'POST',\n                        url: wp.ajax.settings.url,\n                        context: this,\n                        _: Date.now(),\n                        xhrFields: {\n                            withCredentials: true\n                        }\n                    });\n\n                    deferred = $.Deferred(function (deferred) {\n                        // Transfer success/error callbacks.\n                        if (options.success)\n                            deferred.done(options.success);\n                        if (options.error)\n                            deferred.fail(options.error);\n\n                        delete options.success;\n                        delete options.error;\n\n                        deferred.jqXHR = $.ajax(options).done(function (response) {\n                            deferred.resolveWith(this, [response, deferred.jqXHR]);\n                        }).fail(function () {\n                            deferred.rejectWith(this, arguments);\n                        });\n                    });\n\n                    promise = deferred.promise();\n                    promise.abort = function () {\n                        deferred.jqXHR.abort();\n                        return this;\n                    };\n\n                    return promise;\n                }\n            },\n\n\n            options: function (key, defaultValue) {\n                var result = root.cpCustomizerGlobal.pluginOptions;\n\n                if (key) {\n                    var keyParts = key.split(':');\n                    for (var i = 0; i < keyParts.length; i++) {\n                        var part = keyParts[i];\n\n                        if (!_.isUndefined(result[part])) {\n                            result = result[part];\n                        } else {\n                            result = defaultValue;\n                            break;\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            __exportsCache: {},\n            getSectionExports: function (sectionId) {\n\n                if (sectionId.jquery) {\n                    sectionId = sectionId.attr('data-export-id');\n                }\n\n                if (this.__exportsCache[sectionId]) {\n                    return this.__exportsCache[sectionId];\n                }\n\n                var sectionData = CP_Customizer.options('data:sections', []).filter(function (s) {\n                    return s.id === sectionId\n                }).pop();\n\n                var modules = {},\n                    module = {},\n                    exports = {};\n\n                if (sectionData && sectionData.export) {\n                    try {\n                        eval(sectionData.export);\n\n                        if (!_.isUndefined(modules.export)) {\n                            exports = modules.export;\n                        } else {\n                            if (!_.isUndefined(module.exports)) {\n                                exports = module.exports;\n                            }\n                        }\n                    } catch (e) {\n                        console.warn('invalid section ' + sectionId + ' exports');\n                    }\n\n                }\n\n                this.__exportsCache[sectionId] = exports;\n                return exports || {};\n            },\n\n\n            slugPrefix: function () {\n                return root.cpCustomizerGlobal.pluginOptions.slugPrefix;\n            },\n\n\n            log: function (name, data, type) {\n\n                if (!CP_Customizer.options('SCRIPT_DEBUG', false) && !top.SCRIPT_DEBUG) {\n                    return;\n                }\n\n                type = type || 'log';\n\n                var colors = {\n                    'log': 'background-color:#03a9f4; color:#ffffff',\n                    'error': 'background-color:#ff0000; color:#ffffff'\n                };\n\n                if (!data) {\n                    data = 'NO DATA';\n                }\n\n                console.groupCollapsed('%c  ' + name + '  ', colors[type]);\n                console[type](data);\n                console.groupEnd();\n            },\n\n\n            logError: function (name, data) {\n                this.log(name, data, 'error');\n            },\n\n\n            bind: function (event, callback) {\n                this.on(event, callback, false);\n            },\n            unbind: function (event, callback) {\n                this.off(event, callback);\n            },\n\n            on: function (event, callback, async) {\n\n                event = event.split(' ').map(function (ev) {\n                    return 'cp_customizer.' + ev;\n                }).join(' ');\n\n                if (async) {\n                    var originalCallback = callback;\n\n                    callback = function () {\n                        var args = Array.from(arguments);\n                        var cb = this.callback;\n\n                        setTimeout(function () {\n                            cb.apply(this, args);\n                        }, 0);\n\n                    }.bind({\n                        callback: originalCallback\n                    });\n                }\n\n                $(window).bind(event, callback);\n            },\n\n            off: function (event, callback) {\n                event = event.split(' ').map(function (ev) {\n                    return 'cp_customizer.' + ev;\n                }).join(' ');\n                $(window).unbind(event, callback);\n            },\n\n            one: function (event, callback) {\n                event = event.split(' ').map(function (ev) {\n                    return 'cp_customizer.' + ev;\n                }).join(' ');\n                $(window).one(event, callback);\n            },\n\n\n            trigger: function (event, data) {\n                $(window).trigger('cp_customizer.' + event, data);\n            },\n\n            showLoader: function () {\n                $('div#cp-full-screen-loader').addClass('active');\n                jQuery('select').each(function () {\n                    var $select = $(this);\n                    if ($select.data() && $select.data().selectize) {\n                        $select.data().selectize.blur();\n                    }\n                });\n            },\n\n            hideLoader: function () {\n                $('div#cp-full-screen-loader').removeClass('active');\n            },\n\n            jsTPL: {},\n\n            __containerDataHandlers: {},\n\n            addContainerDataHandler: function (selector, getter, setter) {\n                this.__containerDataHandlers[selector] = {\n                    getter: getter,\n                    setter: setter\n                };\n            },\n\n            __containerDataFilters: [],\n\n            addContainerDataFilter: function (callback) {\n                this.__containerDataFilters.push(callback);\n            },\n\n\n            __modules: [],\n            __modulesLoaded: false,\n            addModule: function (callback) {\n                var self = this;\n\n                if (this.__modulesLoaded) {\n                    callback(this);\n                } else {\n                    this.__modules.push(callback);\n                }\n            },\n\n            popUp: function (title, elementID, data) {\n                var selector = \"#TB_inline?inlineId=\" + elementID;\n                var query = [];\n\n\n                $.each(data || {}, function (key, value) {\n                    query.push(key + \"=\" + value);\n                });\n\n                selector = query.length ? selector + \"&\" : selector + \"\";\n                selector += query.join(\"&\");\n\n                root.tb_show(title, selector);\n\n                root.jQuery('#TB_window').css({\n                    'z-index': '5000001',\n                    'transform': 'opacity .4s',\n                    'opacity': 0\n                });\n\n                root.jQuery('#TB_overlay').css({\n                    'z-index': '5000000'\n                });\n\n\n                setTimeout(function () {\n                    root.jQuery('#TB_window').css({\n                        'margin-top': -1 * ((root.jQuery('#TB_window').outerHeight() + 50) / 2),\n                        'opacity': 1\n                    });\n                    root.jQuery('#TB_window').find('#cp-item-ok').focus();\n                }, 0);\n\n                if (data && data.class) {\n                    root.jQuery('#TB_window').addClass(data.class);\n                }\n\n                return root.jQuery('#TB_window');\n            },\n\n\n            popUpInfo: function (title, content, data) {\n                var id = _.uniqueId('temp-popup-text');\n\n                var tempContainer = $('<div id=\"' + id + '\" />').hide();\n                tempContainer.appendTo($('body'));\n                tempContainer.append('<div>' + content + '</div>');\n\n                return this.popUp(title, id, data);\n\n            },\n\n            popupPrompt: function (title, text, value, callback, extraHTML) {\n\n                if (extraHTML) {\n                    extraHTML = '<div class=\"prompt-extra\">' + extraHTML + '</div>';\n                } else {\n                    extraHTML = '';\n                }\n\n                var content = '' +\n                    '<div class=\"prompt-wrapper\">' +\n                    '   <h4 class=\"prompt-title\">' + text + '</h4>' +\n                    '   <div class=\"prompt-content\">' +\n                    '      <input value=\"' + CP_Customizer.utils.htmlEscape(value) + '\" type=\"text\">' +\n                    '   </div>' +\n                    '   ' + extraHTML +\n                    '   <div class=\"prompt-footer\">' +\n                    '      <button class=\"submit button button-primary\"> ' + root.CP_Customizer.translateCompanionString(\"OK\") + '</button>' +\n                    '      <button class=\"cancel button button-secondary\">' + root.CP_Customizer.translateCompanionString(\"Cancel\") + '</button>' +\n                    '   </div>' +\n                    '</div>';\n\n                var data = {\n                    width: \"400\",\n                    class: \"popup-400\"\n                };\n\n                var $content = this.popUpInfo(title, content, data);\n\n                function onClose(canceled) {\n                    var newValue = $content.find('input').val().trim();\n\n                    if (canceled) {\n                        newValue = null;\n                    }\n\n                    if (_.isFunction(callback)) {\n                        callback(newValue, value)\n                    }\n                    CP_Customizer.closePopUps();\n                }\n\n                $content.on('keypress', 'input', function () {\n                    if (event.which !== 13) {\n                        return true;\n                    }\n                    onClose();\n                });\n\n                $content.on('click', 'button.submit', function () {\n                    onClose();\n                });\n\n\n                $content.on('click', 'button.cancel', function () {\n                    onClose(true);\n                });\n\n            },\n\n            popupSelectPrompt: function (title, text, value, options, callback, emptySelection, extraHTML) {\n                var select = '<select>';\n\n\n                if (emptySelection) {\n                    select += \"<option value='' >\" + emptySelection + \"</option>\";\n                }\n\n                for (var i in options) {\n                    var selectedAttr = (i === value) ? \"selected\" : \"\";\n                    select += \"<option \" + CP_Customizer.utils.htmlEscape(selectedAttr) + \" value='\" + i + \"' >\" + options[i] + \"</option>\";\n                }\n\n                select += '</select>';\n                if (extraHTML) {\n                    extraHTML = '<div class=\"prompt-extra\">' + extraHTML + '</div>';\n                } else {\n                    extraHTML = '';\n                }\n\n                var content = '' +\n                    '<div class=\"prompt-wrapper\">' +\n                    '   <h4 class=\"prompt-title\">' + text + '</h4>' +\n                    '   <div class=\"prompt-content\">' +\n                    '       ' + select +\n                    '   </div>' +\n                    '   ' + extraHTML +\n                    '   <div class=\"prompt-footer\">' +\n                    '      <button class=\"submit button button-primary\"> ' + root.CP_Customizer.translateCompanionString(\"OK\") + '</button>' +\n                    '      <button class=\"cancel button button-secondary\">' + root.CP_Customizer.translateCompanionString(\"Cancel\") + '</button>' +\n                    '   </div>' +\n                    '</div>';\n\n                var data = {\n                    width: \"400\",\n                    class: \"popup-400\"\n                };\n\n                var $content = this.popUpInfo(title, content, data);\n\n                function onClose(canceled) {\n                    var newValue = $content.find('select').val();\n\n                    if (canceled) {\n                        newValue = null;\n                    }\n\n                    if (_.isFunction(callback)) {\n                        callback(newValue, value)\n                    }\n                    CP_Customizer.closePopUps();\n                }\n\n                $content.on('click', 'button.submit', function () {\n                    onClose();\n                });\n\n\n                $content.on('click', 'button.cancel', function () {\n                    onClose(true);\n                });\n\n                return $content;\n\n            },\n\n            closePopUps: function () {\n                root.tb_remove();\n                root.jQuery('#TB_overlay').css({\n                    'z-index': '-1'\n                });\n            },\n\n            openMultiImageManager: function (title, callback, single) {\n                var node = false;\n                var interestWindow = root;\n                custom_uploader = interestWindow.wp.media.frames.file_frame = interestWindow.wp.media({\n                    title: title,\n                    button: {\n                        text: root.CP_Customizer.translateCompanionString('Choose Images')\n                    },\n                    multiple: !single\n                });\n                //When a file is selected, grab the URL and set it as the text field's value\n                custom_uploader.on('select', function () {\n                    var attachment = custom_uploader.state().get('selection').toJSON();\n                    callback(attachment);\n                });\n                custom_uploader.off('close.cp').on('close.cp', function () {\n                    callback(false);\n                });\n                //Open the uploader dialog\n                custom_uploader.open();\n\n                custom_uploader.content.mode('browse');\n                // Show Dialog over layouts frame\n                interestWindow.jQuery(interestWindow.wp.media.frame.views.selector).parent().css({\n                    'z-index': '16000000'\n                });\n            },\n\n            openImageManager: function (callback, multi) {\n                this.openMultiImageManager('Image Manager', function (obj) {\n                    if ($('iframe').length) {\n                        $('iframe').get(0).focus();\n                    }\n                    if (!obj) {\n                        return;\n                    }\n                    for (var i = 0; i < obj.length; i++) {\n                        var link = obj[i].url;\n                        callback(link);\n                    }\n                }, !multi);\n            },\n\n            openMediaCustomFrame: function (extender, mode, title, single, callback) {\n                var interestWindow = root;\n\n                var frame = extender(interestWindow.wp.media.view.MediaFrame.Select);\n\n                var custom_uploader = new frame({\n                    title: title,\n                    button: {\n                        text: title\n                    },\n                    multiple: !single\n                });\n\n\n                //When a file is selected, grab the URL and set it as the text field's value\n                custom_uploader.on('select', function () {\n                    attachment = custom_uploader.state().get('selection').toJSON();\n                    custom_uploader.content.mode('browse');\n                    callback(attachment);\n                });\n\n\n                custom_uploader.on('close', function () {\n                    custom_uploader.content.mode('browse');\n                    callback(false);\n                });\n\n                //Open the uploader dialog\n                custom_uploader.open();\n                custom_uploader.content.mode(mode);\n                // Show Dialog over layouts frame\n                interestWindow.jQuery(custom_uploader.views.selector).parent().css({\n                    'z-index': '16000000'\n                });\n\n            },\n\n            openMIManager: function (title, callback, single) {\n                var node = false;\n                var interestWindow = root;\n\n                // if (!interestWindow.wp.media.cp.FAFrame) {\n                var frame = interestWindow.wp.media.cp.extendFrameWithMDI(interestWindow.wp.media.view.MediaFrame.Select);\n                var custom_uploader = new frame({\n                    title: title,\n                    button: {\n                        text: root.CP_Customizer.translateCompanionString('Choose Icon')\n                    },\n                    multiple: !single\n                });\n                interestWindow.wp.media.cp.MIFrame = custom_uploader;\n\n                // }\n\n\n                //When a file is selected, grab the URL and set it as the text field's value\n                interestWindow.wp.media.cp.MIFrame.on('select', function () {\n                    attachment = custom_uploader.state().get('selection').toJSON();\n                    interestWindow.wp.media.cp.MIFrame.content.mode('browse');\n                    callback(attachment);\n                });\n                interestWindow.wp.media.cp.MIFrame.on('close', function () {\n                    interestWindow.wp.media.cp.MIFrame.content.mode('browse');\n                    callback(false);\n                });\n\n                //Open the uploader dialog\n                interestWindow.wp.media.cp.MIFrame.open();\n                interestWindow.wp.media.cp.MIFrame.content.mode('cp_material_icons');\n                // Show Dialog over layouts frame\n                interestWindow.jQuery(custom_uploader.views.selector).parent().css({\n                    'z-index': '16000000'\n                });\n\n            },\n\n            openCropableImageManager: function (width, height, flexible, callback) {\n                var control = new root.wp.customize.CroppedImageControl('custom_image_cropper[' + Date.now() + ']',\n                    {params: {}});\n\n                control.params = {\n                    button_labels: {\n                        frame_title: root.CP_Customizer.translateCompanionString(\"Select Image\")\n                    },\n                    height: height,\n                    width: width\n\n                };\n\n                flexible = _.isUndefined(flexible) ? true : flexible;\n\n                if (flexible) {\n                    control.params = _.extend(control.params, {\n                        flex_width: width,\n                        flex_height: height\n                    });\n                }\n\n                control.initFrame();\n                control.frame.setState('library').open();\n                control.frame.content.mode('browse');\n\n                function fixCropKeyPressBug() {\n                    setTimeout(function () {\n                        root.jQuery(top.document).unbind(root.jQuery.imgAreaSelect.keyPress);\n                    }, 100);\n                }\n\n                control.setImageFromAttachment = function (attachment) {\n                    callback([attachment]);\n                    fixCropKeyPressBug();\n                };\n\n                control.frame.on('close', function () {\n                    fixCropKeyPressBug();\n                });\n\n\n                root.jQuery(control.frame.views.selector).parent().css({\n                    'z-index': '16000000'\n                });\n\n                root.jQuery(control.frame.views.selector).find('.instructions').remove();\n\n\n                control.frame.on('content:create:crop', function () {\n                    var c = control;\n                    var state = c.frame.state();\n                    var __createCropToolbar = state.createCropToolbar;\n                    state.createCropToolbar = function () {\n                        state.set('canSkipCrop', true);\n                        __createCropToolbar.apply(state, arguments);\n                    };\n\n                });\n            },\n\n            openGalleryImageManager: function (options, callback) {\n                var interestWindow = root;\n                options = _.extend({\n                    \"shortocode\": false,\n                    \"ids\": [],\n                    \"columns\": \"5\",\n                    \"state\": 'gallery-edit',\n                    \"size\": \"medium\",\n                    \"link\": \"file\"\n                }, options);\n\n\n                if (_.isArray(options.ids)) {\n                    options.ids = options.ids.join(\",\");\n                }\n\n                if (_.isEmpty(options.ids.trim())) {\n                    options.ids = 'fake-' + Date.now();\n                }\n\n                var shortcode = \"[gallery\";\n                $.each(options, function (index, val) {\n                    shortcode += \" \" + index + '=\"' + val + '\"';\n                });\n                shortcode += \"]\";\n\n                var gallery = interestWindow.wp.media.gallery;\n                var frame = gallery.edit(shortcode);\n\n\n                frame.state(options.state).on('update', function (selection) {\n                    var ids = selection.map(function (model) {\n                        return model.id\n                    });\n                    callback(selection, ids);\n                });\n\n\n                // if (options.mediaSidebar === false) {\n                //     frame.$el.find('.media-sidebar').hide();\n                //     frame.$el.find('.media-sidebar').siblings('.media-toolbar ul').css('right', '0px');\n                // } else {\n                //     frame.$el.find('.media-sidebar').siblings('.media-toolbar ul').css('right', '');\n                //     frame.$el.find('.media-sidebar').show();\n                // }\n\n                interestWindow.jQuery(frame.views.selector).parent().css({\n                    'z-index': '16000000'\n                });\n\n                if (options.ids.match(/fake-\\d+/)) {\n                    frame.setState('gallery-library')\n                }\n            },\n\n            openMediaBrowser: function (type, callback, data) {\n                var cb;\n                if (callback instanceof jQuery) {\n                    cb = function (response) {\n\n                        if (!response) {\n                            return;\n                        }\n\n                        var value = response[0].url;\n                        if (data !== \"multiple\") {\n                            if (type == \"icon\") {\n                                value = response[0].mdi;\n                            }\n                            callback.val(value).trigger('change');\n                        }\n                    };\n                } else {\n                    cb = function () {\n                        callback.apply(this, arguments);\n                        CP_Customizer.preview.blur();\n                    }\n                }\n\n                switch (type) {\n                    case \"image\":\n                        // this.openMultiImageManager('Change image', cb, data);\n                        this.openCropableImageManager(data.width || this.MAX_SAFE_INTEGER, data.height || this.MAX_SAFE_INTEGER, true, cb);\n                        break;\n                    case \"cropable\":\n                        this.openCropableImageManager(data.width, data.height, data.flexible, cb);\n                        break;\n                    case \"icon\":\n                        this.openMIManager(root.CP_Customizer.translateCompanionString('Change Material Icon'), cb);\n                        break;\n                    case \"gallery\":\n                        this.openGalleryImageManager(data, cb);\n                        break;\n                }\n            },\n\n            getCustomizerRootEl: function () {\n                return root.jQuery(root.document.body).find('form#customize-controls');\n            },\n\n            openRightSidebar: function (elementId, options) {\n                options = options || {};\n                this.hideRightSidebar();\n                var $form = this.getCustomizerRootEl();\n                var $container = $form.find('#' + elementId + '-popup');\n\n                $('body').addClass('cp-right-section-opened');\n                if ($container.length) {\n                    $container.addClass('active');\n\n                    if (options.floating && !_(options.y).isUndefined()) {\n                        $container.css({\n                            top: options.y\n                        });\n                    }\n                } else {\n                    $container = $('<li id=\"' + elementId + '-popup\" class=\"customizer-right-section active\"> <span data-close-right-sidebar=\"true\" title=\"' + root.CP_Customizer.translateCompanionString(\"Close Panel\") + '\" class=\"close-panel\"></span> </li>');\n\n                    if (options.floating) {\n                        $container.addClass('floating');\n                    }\n\n                    $toAppend = $form.find('li#accordion-section-' + elementId + ' > ul');\n\n                    if ($toAppend.length === 0) {\n                        $toAppend = $form.find('#sub-accordion-section-' + elementId);\n                    }\n\n\n                    if ($toAppend.length === 0) {\n                        $toAppend = $('<div class=\"control-wrapper\" />');\n                        $toAppend.append($form.find('#customize-control-' + elementId).children());\n                    }\n\n                    $form.append($container);\n                    $container.append($toAppend);\n\n                    if (options.floating && !_(options.y).isUndefined()) {\n                        $container.css({\n                            top: options.y\n                        });\n                    }\n\n\n                    $container.find('span.close-panel').click(CP_Customizer.hideRightSidebar);\n\n                }\n\n                if (options.focus) {\n                    $container.find(options.focus)[0].scrollIntoViewIfNeeded();\n                }\n\n                $container.css('left', jQuery('#customize-header-actions')[0].offsetWidth + 1);\n\n                CP_Customizer.hooks.doAction('right_sidebar_opened', elementId, options, $container);\n\n                $form.find('span[data-close-right-sidebar=\"true\"]').click(function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    CP_Customizer.hideRightSidebar();\n                });\n\n                $form.find('li.accordion-section').unbind('click.right-section').bind('click.right-section', function (event) {\n                    if ($(event.target).is('li') || $(event.target).is('.accordion-section-title')) {\n                        if ($(event.target).closest('.customizer-right-section').length === 0) {\n                            CP_Customizer.hideRightSidebar();\n                        }\n                    }\n                });\n\n            },\n\n            hideRightSidebar: function () {\n                var $form = root.jQuery(root.document.body).find('#customize-controls');\n                var $visibleSection = $form.find('.customizer-right-section.active');\n                if ($visibleSection.length) {\n                    $visibleSection.removeClass('active');\n                    root.CP_Customizer.trigger(root.CP_Customizer.events.RIGHT_SECTION_CLOSED, [$visibleSection]);\n                }\n\n            },\n\n            isRightSidebarVisible: function (sectionID) {\n                var $form = root.jQuery(root.document.body).find('#customize-controls');\n                return $form.find('#' + sectionID + '-popup').hasClass('active');\n            },\n\n            updateState: function (force, forceOverlays) {\n\n                function callback() {\n                    CP_Customizer.trigger('STATE_UPDATED');\n                }\n\n                if (force) {\n                    this._setContent(callback);\n                } else {\n                    this.setContent(callback);\n                }\n\n                this.overlays.hoverOverlay().hide();\n                this.overlays.updateAllOverlays(forceOverlays);\n            },\n\n\n            __changesetUpdate: _.debounce(function (callback) {\n                var changeSet = root.CP_Customizer.wpApi.requestChangesetUpdate.apply(root.CP_Customizer.wpApi);\n                if (_.isFunction(callback)) {\n                    changeSet.then(callback);\n                }\n            }, 10),\n\n            __requestCachedCbs: [],\n            requestChangesetUpdate: function (cb) {\n                if (_.isFunction(cb)) {\n                    this.__requestCachedCbs.push(cb);\n                }\n                var self = this;\n                this.__changesetUpdate(function () {\n                    while (self.__requestCachedCbs.length) {\n                        var cb = self.__requestCachedCbs.shift();\n                        cb.call(self);\n                    }\n                });\n            },\n\n            // if the mod is not set create a dirty one\n            __onSetForcedTransport: {},\n            setMod: function (mod, value, transport, reqCB) {\n\n                mod = CP_Customizer.utils.phpTrim(mod, \"|\");\n\n                var initialMod = mod;\n                var modParts = mod.split('|');\n                mod = modParts.shift();\n\n                var setting = root.wp.customize(mod);\n                value = _.clone(value);\n                if (!setting) {\n                    mod = \"CP_AUTO_SETTING[\" + mod + \"]\";\n                    setting = root.wp.customize(mod);\n                    if (!setting) {\n                        setting = wp.customize.create(mod, mod, {}, {\n                            type: 'theme_mod',\n                            transport: (transport || 'postMessage'),\n                            previewer: wp.customize.previewer\n                        });\n                    }\n                }\n\n                var oldTransport = setting.transport;\n                if (!this.__onSetForcedTransport[setting.id]) {\n                    this.__onSetForcedTransport[setting.id] = oldTransport;\n                }\n\n                if (transport) {\n                    setting.transport = transport;\n                }\n\n                var oldValue = _.clone(setting._value);\n\n                var jsonEncoded = false;\n                try {\n                    var parsed = decodeURI(oldValue);\n                    parsed = JSON.parse(parsed);\n\n                    if (_.isObject(parsed) || _.isArray(parsed)) {\n                        oldValue = parsed;\n                        jsonEncoded = true;\n                    }\n                } catch (e) {\n\n                }\n\n                if (_.isObject(oldValue)) {\n                    setting._value = undefined; // force no value before set( forces the setting to set the value )\n                }\n\n                if (modParts.length) {\n\n                    if (!oldValue || _.isEmpty(oldValue)) {\n                        oldValue = CP_Customizer.preview.data('mod_defaults')[mod];\n                    }\n\n                    var path = modParts.join('.');\n                    value = CP_Customizer.utils.setToPath(oldValue, path, value);\n                }\n\n                var control = wp.customize.control(mod);\n\n\n                if (jsonEncoded) {\n                    value = encodeURI(JSON.stringify(value));\n                }\n\n                if (_.isBoolean(oldValue)) {\n                    try {\n                        value = JSON.parse(value);\n                    } catch (e) {\n\n                    }\n                }\n\n                setting.set(value);\n\n                // update control\n\n                if (control) {\n                    var type = control.params.type;\n                    if (type === \"radio-html\") {\n                        jQuery(control.container.find('input[value=\"' + value + '\"]')).prop('checked', true);\n                    } else {\n                        if (type === \"kirki-spacing\") {\n                            for (var prop in value) {\n                                if (value.hasOwnProperty(prop)) {\n                                    jQuery(control.container.find('.' + prop + ' input')).prop('value', value[prop]);\n                                }\n                            }\n                        } else {\n                            if (type.match('kirki')) {\n                                kirkiSetSettingValue(mod, value);\n                            } else {\n                                if (type == \"gradient-control-pro\") {\n                                    control.setValue(value);\n                                } else {\n                                    if (type == \"repeater\") {\n                                        control.setValue(value);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                var self = this;\n                var changeSetCB = function () {\n                    if (self.__onSetForcedTransport[setting.id]) {\n                        setting.transport = self.__onSetForcedTransport[setting.id];\n                        self.__onSetForcedTransport[setting.id] = null;\n                    }\n\n                    if (_.isFunction(reqCB)) {\n                        reqCB(initialMod, setting.id);\n                    }\n\n                };\n\n                if (_.isFunction(reqCB)) {\n                    this.requestChangesetUpdate(changeSetCB);\n                } else {\n                    setting.transport = oldTransport;\n                }\n\n            },\n\n            getMod: function (mod, defaultValue) {\n                var setting = root.wp.customize(mod);\n                if (!setting) {\n                    mod = \"CP_AUTO_SETTING[\" + mod + \"]\";\n                    setting = root.wp.customize(mod);\n                }\n\n                if (!setting) {\n                    return defaultValue;\n                }\n\n                return _.clone(setting.get());\n            },\n\n            cleanModValue: function (value) {\n\n                if (_.isString(value)) {\n\n                    // remove extra mdi classes ( e.g. \"mdi mdi mdi\" )\n                    value = value.replace(/(mdi\\s(mdi\\s)+)/ig, 'mdi ');\n\n                    // trim all spaces\n                    value = value.trim();\n                }\n\n                return value;\n            },\n\n            onModChange: function (mod, callback) {\n                var autoMod = \"CP_AUTO_SETTING[\" + mod + \"]\";\n                var modCallback = _.debounce(function (value) {\n                    if (_.isFunction(callback)) {\n                        value.bind(callback);\n                    }\n                }, 100);\n\n\n                CP_Customizer.wpApi(mod, modCallback);\n                CP_Customizer.wpApi(autoMod, modCallback);\n\n            },\n\n            setMultipleMods: function (mods, transport, finishCb) {\n\n                CP_Customizer.log('Set Multiple Mods', mods);\n\n                if (_.isEmpty(mods)) {\n                    if (finishCb) finishCb();\n                    return;\n                }\n\n                $(root).off('blur.wp-customize-changeset-update');\n                var modsIDs = Object.getOwnPropertyNames(mods);\n                var modsDone = [];\n\n                var reqCB = function (mod) {\n                    if (modsDone.indexOf(mod) === -1) {\n                        modsDone.push(mod);\n                    }\n\n                    if (_.difference(modsIDs, modsDone).length === 0) {\n                        if (_.isFunction(finishCb)) {\n                            finishCb();\n                        }\n                    }\n                };\n\n\n                _.each(mods, function (value, mod) {\n                    CP_Customizer.setMod(mod, value, transport, reqCB);\n                });\n            },\n\n            _currentContentValues: {},\n            _setContent: function (callback) {\n                var previewJQuery = CP_Customizer.preview.jQuery();\n\n                if (root.CP_Customizer.preview.data().maintainable) {\n                    var content = root.CP_Customizer.preview.getContent().trim();\n                    var setting = root.wp.customize('page_content');\n                    if (!setting) {\n                        return;\n                    }\n\n                    var value = setting.get();\n                    if (_.isString(value)) {\n                        value = JSON.parse(decodeURIComponent(value));\n                    }\n\n                    if (_.isArray(value) && _.isEmpty(value)) {\n                        value = {};\n                    }\n\n                    if (!value) {\n                        value = {};\n                    }\n\n                    value[root.CP_Customizer.preview.data().pageID] = content;\n\n                    setting.set(encodeURIComponent(JSON.stringify(value)));\n                }\n\n                var modsToSet = {};\n\n                this.preview.find(\"[data-theme-href]\").each(function () {\n                    var prop = jQuery(this).attr('data-theme-href');\n                    var val = jQuery(this).attr('href').trim();\n\n                    modsToSet[prop] = CP_Customizer.preview.cleanURL(val);\n                });\n\n                this.preview.find(\"[data-theme-target]\").each(function () {\n                    var prop = jQuery(this).attr('data-theme-target');\n                    var val = jQuery(this).attr('target') || \"_self\";\n\n                    modsToSet[prop] = val.trim();\n                });\n\n\n                this.preview.find(\"[data-theme-src]\").each(function () {\n                    var prop = jQuery(this).attr('data-theme-src');\n                    var val = jQuery(this).attr('src');\n                    // root.CP_Customizer.setMod(prop, val.trim());\n                    modsToSet[prop] = val.trim();\n                });\n\n                this.preview.find(\"[data-theme-mdi]\").each(function () {\n                    var prop = jQuery(this).attr('data-theme-mdi');\n                    var val = jQuery(this).attr('class').match(/mdi\\-[a-z\\-]+/ig).pop();\n                    // root.CP_Customizer.setMod(prop, val.trim());\n                    modsToSet[prop] = val.trim();\n                });\n\n                if (root.CP_Customizer.options().mods) {\n                    for (var selector in root.CP_Customizer.options().mods) {\n                        var $el = this.preview.find(selector);\n                        var modData = root.CP_Customizer.options().mods[selector];\n                        if (modData.atts) {\n                            for (var attr in modData.atts) {\n                                // $el.attr('data-theme-' + attr, modData.atts[attr]);\n                                var prop = $el.attr('data-theme-' + attr);\n                                var val = root.CP_Customizer.hooks.applyFilters('temp_attr_mod_value', $el.attr(attr) || \"\", attr, $el);\n                                // root.CP_Customizer.setMod(prop, val.trim());\n                                modsToSet[prop] = val.trim();\n                            }\n                        }\n\n\n                    }\n                }\n\n                this.preview.find(\"[data-dynamic-mod='true'],[data-dynamic-mod='true'] *\").each(function () {\n                    var atts = Array.from(this.attributes),\n                        $el = root.CP_Customizer.preview.find(this);\n\n                    for (var i = 0; i < atts.length; i++) {\n                        var attr = atts[i].name,\n                            prop = atts[i].value;\n\n                        if (attr.indexOf('data-theme-') === 0) {\n                            attr = attr.replace('data-theme-', '');\n                            var fallback = \"\";\n\n                            var value = $el.attr(attr);\n\n                            // logica inversa aici false daca exista, true daca nu\n                            if (attr === 'data-reiki-hidden') {\n                                fallback = \"true\";\n\n                                if (value) {\n                                    value = 'false';\n                                }\n\n                            }\n\n                            if (attr.trim() === 'href') {\n                                value = CP_Customizer.preview.cleanURL(value);\n                            }\n\n                            var val = root.CP_Customizer.hooks.applyFilters('temp_attr_mod_value', _.isUndefined(value) ? fallback : value, attr, $el);\n\n                            modsToSet[prop] = CP_Customizer.cleanModValue(val);\n                        }\n\n                    }\n                });\n\n                this.preview.find(\"[data-theme]\").each(function () {\n\n                    var prop = jQuery(this).attr('data-theme');\n\n                    if (!previewJQuery(this).data('was-changed')) {\n                        if (previewJQuery('[data-theme=\"' + prop + '\"]').length > 1) {\n                            return;\n                        }\n                    }\n\n                    // root.CP_Customizer.preview.cleanNode(toSave);\n                    // var toSave = jQuery(this).clone();\n\n                    var toSave = jQuery(this).clone();\n                    var val = root.CP_Customizer.preview.getContent($(this));\n                    // root.CP_Customizer.setMod(prop, val);\n                    modsToSet[prop] = val.trim();\n                    previewJQuery(this).data('was-changed', false);\n                });\n\n                root.CP_Customizer.cleanClose();\n\n                // update only when you find a change\n                var uniqueMods = {};\n                var self = this;\n                _.each(modsToSet, function (value, mod) {\n                    if (self._currentContentValues[mod] !== value) {\n                        uniqueMods[mod] = value;\n                        self._currentContentValues[mod] = value;\n                    }\n                });\n\n                CP_Customizer.setMultipleMods(uniqueMods, 'postMessage', callback);\n\n            },\n\n            setContent: _.debounce(function (callback) {\n                this._setContent(callback);\n            }, 200),\n\n            save: function () {\n\n                CP_Customizer.preview.blur();\n\n                $(root.document).find('body').addClass('saving');\n                $(root.document).find('input#save').prop('disabled', true);\n\n                var self = this;\n                var callback = function () {\n                    wp.customize.previewer.save();\n                };\n                self._setContent(callback);\n\n            },\n\n            cleanClose: function () {\n\n            },\n\n            __saveTimeout: false,\n\n            markSave: _.debounce(function () {\n                var self = this;\n                clearTimeout(self.__saveTimeout);\n\n                self.__saveTimeout = setTimeout(function () {\n                    self.setContent();\n                }, 500);\n            }, 200),\n\n\n            parseShortcode: function (shortcode) {\n                shortcode = shortcode.replace('[', '').replace(']', '');\n\n                var tag = shortcode.split(' ')[0].trim();\n                var shortcodeAttrs = shortcode.match(/(\\s(.*?)=\")(.*?)(\")/ig);\n                var response = {\n                    tag: tag,\n                    attrs: {}\n                };\n                if (!shortcodeAttrs) {\n                    return response;\n                }\n                for (var i = 0; i < shortcodeAttrs.length; i++) {\n                    var attr = shortcodeAttrs[i].trim();\n                    response.attrs[attr.split('=')[0]] = attr.split('=\"')[1].slice(0, -1)\n                }\n                return response;\n\n            },\n\n            isShortcodeContent: function ($node) {\n                return root.jQuery($node).closest('[data-content-shortcode]').length > 0;\n            },\n\n            isShortcodeEditable: function ($node) {\n                var isEditableByTag = root.jQuery($node).closest('[data-content-shortcode][data-editable=\"true\"]').length > 0;\n                var tag = CP_Customizer.getNodeShortcode(root.jQuery($node).closest('[data-content-shortcode]'));\n\n                return CP_Customizer.hooks.applyFilters('is_shortcode_editable', isEditableByTag, tag);\n            },\n\n            isOnCanvasMod: function (node) {\n                node = $(node)[0];\n                var hasThemeModAtt = Array.from(node.attributes).map(function (a) {\n\n                    return (a.name.toLowerCase().indexOf('data-theme') !== -1);\n\n                }).reduce(function (a, b) {\n                    return a || b;\n                });\n\n                return hasThemeModAtt;\n            },\n\n            nodeWrapsShortcode: function ($node, tag) {\n                var shortcode = this.getNodeShortcode($node);\n\n                if (shortcode) {\n                    return (shortcode.tag === tag.trim());\n                }\n\n                return false;\n            },\n\n            getNodeShortcode: function ($node) {\n                if (!$node.attr('data-content-shortcode')) {\n                    return undefined;\n                }\n\n                return this.parseShortcode($node.attr('data-content-shortcode'));\n            },\n\n            nodeContainsShortcode: function ($node, tag) {\n                var $containers = $node.find('[data-content-shortcode]');\n\n                for (var i = 0; i < $containers.length; i++) {\n                    if (CP_Customizer.nodeWrapsShortcode($containers.eq(i), tag)) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n\n            renderNodeShortcodes: function ($node) {\n                $node = $($node); // make sure the node is wrapped with jqury\n                var $nodes = $node.find('[data-content-shortcode]');\n                if ($node.is('[data-content-shortcode]')) {\n                    $nodes = $nodes.add($node);\n                }\n                var self = this;\n                $nodes.each(function () {\n                    self.updateNodeShortcode($(this), \"[\" + $(this).attr('data-content-shortcode') + \"]\");\n                })\n            },\n            updateNodeShortcode: function ($node, shortcode, noRerender, context) {\n                if (!$node.attr('data-content-shortcode')) {\n                    return undefined;\n                }\n\n                var attrShortcode = CP_Customizer.utils.phpTrim(shortcode, '[]');\n                $node.attr('data-content-shortcode', attrShortcode);\n\n                if (noRerender !== true) {\n                    if (!context) {\n                        context = {\n                            query: CP_Customizer.preview.data().queryVars\n                        }\n                    }\n\n                    (function ($node) {\n                        CP_Customizer.preview.pauseObserver();\n                        CP_Customizer.preview.blur();\n\n                        var currentChangeset = CP_Customizer.utils.deepClone(wp.customize.previewer.query());\n\n                        var data = _.extend(currentChangeset, {\n                            action: 'cp_shortcode_refresh',\n                            shortcode: btoa(shortcode),\n                            context: context,\n                            _: Date.now()\n                        });\n\n                        $node.html('<div class=\"shortcode-temp-placeholder\"></div>');\n                        jQuery.ajax({\n                            url: ajaxurl,\n                            method: 'POST',\n                            data: data\n                        }).done(function (response) {\n                            $node.empty();\n                            $node.html(response);\n\n                            CP_Customizer.hideLoader();\n                            CP_Customizer.preview.decorateMods($node);\n                            CP_Customizer.preview.decorateElements($node);\n\n                            _.delay(function () {\n                                root.CP_Customizer.hooks.doAction(\"shortcode_updated\", $node, shortcode);\n                                root.CP_Customizer.updateState();\n                            }, 0);\n                        });\n                        CP_Customizer.preview.restartObserver();\n                    })($node);\n                }\n\n                CP_Customizer.updateState();\n                return true;\n            },\n\n            updateNodeFromShortcodeObject: function ($node, shortcodeObj, noRerender, context) {\n                var shortcode = '[' + shortcodeObj.tag + ' ';\n\n                for (var a in shortcodeObj.attrs) {\n                    shortcode += a + '=\"' + shortcodeObj.attrs[a] + '\" ';\n                }\n\n                shortcode += ']';\n\n                return this.updateNodeShortcode($node, shortcode, noRerender, context);\n            },\n\n            preview: {\n                frame: function () {\n                    var frame = wp.customize.previewer.targetWindow.get();\n\n                    if (!frame) {\n                        frame = wp.customize.previewer.container.find('iframe')[0];\n\n                        if (frame) {\n                            frame = frame.contentWindow;\n                        } else {\n                            frame = null;\n                        }\n                    }\n\n                    return frame;\n                },\n\n                currentDevice: function () {\n                    return jQuery('.active[data-device]').data('device');\n                },\n\n\n                __observerFunctionsToPause: [\"prepareFormPreview\", \"prepareLinkPreview\"],\n                __observerOriginalFunctions: {},\n\n                pauseObserver: function () {\n                    var previewApi = CP_Customizer.preview.frame().wp.customize;\n\n                    this.__observerOriginalFunctions = {};\n                    var self = CP_Customizer.preview;\n                    _.each(self.__observerFunctionsToPause, function (fn) {\n                        if (_.isFunction(previewApi[fn])) {\n                            self.__observerOriginalFunctions[fn] = previewApi[fn];\n                            previewApi[fn] = function () {\n                            };\n                        }\n                    });\n                },\n\n                restartObserver: _.debounce(function () {\n                    var previewApi = CP_Customizer.preview.frame().wp.customize;\n\n                    var self = CP_Customizer.preview;\n                    _.each(self.__observerFunctionsToPause, function (fn) {\n                        if (_.isFunction(previewApi[fn]) && _.isFunction(self.__observerOriginalFunctions[fn])) {\n                            previewApi[fn] = self.__observerOriginalFunctions[fn];\n                        }\n                    });\n                }, 100),\n\n\n                addSilentExecution: function (callback) {\n                    return _.compose(this.pauseObserver, callback, this.restartObserver);\n                },\n\n                silentCall: function (callback) {\n                    var args = arguments.length > 1 ? arguments[1] : undefined;\n                    var context = arguments.length > 2 ? arguments[2] : this;\n\n                    callback = this.addSilentExecution(callback);\n\n                    return callback.apply(context, arguments);\n                },\n\n\n                refresh: _.throttle(function () {\n                    CP_Customizer.wpApi.previewer.refresh();\n                }, 100),\n\n                data: function (key, defaultValue) {\n\n                    if (!this.frame()) {\n                        return {};\n                    }\n\n                    var result = this.frame().cpCustomizerPreview || {};\n\n                    if (key) {\n                        var keyParts = key.split(':');\n                        for (var i = 0; i < keyParts.length; i++) {\n                            var part = keyParts[i];\n\n                            if (!_.isUndefined(result[part])) {\n                                result = result[part];\n                            } else {\n                                result = defaultValue;\n                                break;\n                            }\n                        }\n                    }\n\n                    return result;\n                },\n\n                getChangesetURL: function () {\n                    var changeset = wp.customize.settings.changeset.uuid ? \"?changeset_uuid=\" + wp.customize.settings.changeset.uuid : \"\";\n\n                    if (changeset) {\n                        changeset += \"&cp__changeset__preview=\" + Date.now();\n                    }\n\n                    return window.location.origin + window.location.pathname + changeset;\n                },\n\n                isPageMaintainable: function () {\n                    return this.data.maintainable;\n                },\n\n                // http://stackoverflow.com/questions/7451468/contenteditable-div-how-can-i-determine-if-the-cursor-is-at-the-start-or-end-o/7478420#7478420\n                getSelectionTextInfo: function (el) {\n                    var atStart = false, atEnd = false;\n                    var window = this.frame();\n                    var document = this.frame().document;\n                    var selRange, testRange;\n                    if (window.getSelection) {\n                        var sel = window.getSelection();\n                        if (sel.rangeCount) {\n                            selRange = sel.getRangeAt(0);\n                            testRange = selRange.cloneRange();\n\n                            testRange.selectNodeContents(el);\n                            testRange.setEnd(selRange.startContainer, selRange.startOffset);\n                            atStart = (testRange.toString() == \"\");\n\n                            testRange.selectNodeContents(el);\n                            testRange.setStart(selRange.endContainer, selRange.endOffset);\n                            atEnd = (testRange.toString() == \"\");\n                        }\n                    } else if (document.selection && document.selection.type != \"Control\") {\n                        selRange = document.selection.createRange();\n                        testRange = selRange.duplicate();\n\n                        testRange.moveToElementText(el);\n                        testRange.setEndPoint(\"EndToStart\", selRange);\n                        atStart = (testRange.text == \"\");\n\n                        testRange.moveToElementText(el);\n                        testRange.setEndPoint(\"StartToEnd\", selRange);\n                        atEnd = (testRange.text == \"\");\n                    }\n\n                    return {atStart: atStart, atEnd: atEnd};\n                },\n\n                isCustomFrontPage: function () {\n                    return this.data.isFrontPage;\n                },\n\n                jQuery: function (data) {\n                    if (data) {\n                        return this.frame().jQuery(data);\n                    }\n                    return this.frame().jQuery;\n                },\n\n                getPageContainerSelector: function () {\n\n                    if (!root.CP_Customizer.preview.data().maintainable) {\n                        '';\n                    }\n\n                    var startSelector = \"#cp_customizer_content_area_start\";\n\n                    var attrName = 'data-cp-content-container-' + top.CP_Customizer.slugPrefix();\n                    var $parent = this.jQuery(startSelector).parent();\n                    if (!$parent.attr(attrName)) {\n                        $parent.attr(attrName, _.uniqueId(\"page-content-container-\"));\n                    }\n\n                    selector = \"[\" + attrName + \"='\" + $parent.attr(attrName) + \"']\";\n\n                    selector = CP_Customizer.hooks.applyFilters('page_content_container_selector', selector);\n\n                    return selector;\n                },\n\n                getRootNode: function () {\n                    if (!wp.customize('page_content')) {\n                        return this.jQuery(\"<div/>\");\n                    }\n\n                    return this.find(this.getPageContainerSelector());\n                },\n\n                find: function (query) {\n                    var $ = this.jQuery();\n                    return $(query);\n                },\n\n                getSectionByDataId: function (id) {\n                    return this.find('[data-id=\"' + id + '\"]');\n                },\n\n                getNodeSection: function (node) {\n                    var $node = CP_Customizer.preview.jQuery(node);\n                    if ($node.is('[data-id]')) {\n                        return $node;\n                    } else {\n                        return $node.closest('[data-id]');\n                    }\n                },\n\n                getNodeAbsSelector: function (node, relativeSelector) {\n                    var section = this.getNodeSection(node),\n                        sectionId = \"[data-id='\" + section.attr('data-id') + \"']\",\n                        absSelector = sectionId + ' ' + relativeSelector;\n\n                    return absSelector.replace(/\\s\\s?/, ' ').trim();\n                },\n\n                getNodeSectionId: function (node) {\n                    var section = this.getNodeSection(node);\n                    return section.attr('data-id');\n                },\n\n                getNodeExportId: function (node) {\n                    var section = this.getNodeSection(node);\n                    return section.attr('data-export-id');\n                },\n\n                getThemeMods: function ($container) {\n                    if (!$container || $container.is(this.getRootNode())) {\n                        $container = this.jQuery('body');\n                    }\n\n                    var themeModNodesSelector = root.CP_Customizer.hooks.applyFilters('theme_mod_nodes_selector', root.CP_Customizer.THEME_MOD_NODES);\n\n                    if (root.CP_Customizer.options().mods) {\n                        for (var m in root.CP_Customizer.options().mods) {\n                            themeModNodesSelector += ',' + m;\n                        }\n                    }\n\n                    $themeModNodes = $container.find(themeModNodesSelector);\n\n                    if ($container.is(themeModNodesSelector)) {\n                        $themeModNodes.add($container);\n                    }\n\n                    return $themeModNodes;\n                },\n\n                getContentNodes: function (filter) {\n                //replaced children() with contents() to also get html comments for gutenberg blocks\n                var nodes = this.getRootNode().contents().toArray();\n                    nodes.html = function () {\n                        return this.map(function (node) {\n                        if (node.nodeType == Node.COMMENT_NODE) {\n                            return \"<!--\" + node.textContent + \"-->\";\n                        } else {\n                            return node.outerHTML;\n                        }\n                        }).join('');\n                    };\n\n                    return nodes;\n                },\n\n                getContent: function ($node) {\n\n                    $node = $node || this.getContentNodes();\n                    var nodesHML = $node.html().//remove all gutenberg block comments they will be added back by decorate\n                    replace(/<!-- \\/?wp:extendstudio\\/materialis -->/gi, '').\n                    replace(/[\\w-]+=\"gutenberg-section-\\d+\"/gi, '').\n                    replace(/[\\w-]+=\"Gutenberg\"/gi, '');\n                                        \n                    var $currentNodes = $('<div/>').append(nodesHML);\n\n                    $currentNodes.find('.reiki-customizer-ordering-overlay').remove();\n\n                    // cleanup inline styling, leaving only background properties and typography\n                    $currentNodes[0].querySelectorAll('[style]').forEach(function (el) {\n                        var style = el.getAttribute('style'),\n                            whitelistedProps = root.CP_Customizer.options('cssAllowedProperties'),\n                            inlineCss = {},\n                            styleProps = style.split(';');\n\n                        for (var i = 0; i < styleProps.length; i++) {\n                            var propParts = styleProps[i].split(':'),\n                                prop = (propParts.shift() || \"\").trim(),\n                                value = (propParts || []).join(':').trim();\n\n                            if (prop && value) {\n                                inlineCss[prop] = value;\n                            }\n\n                        }\n\n                        var inlineCssText = \"\";\n\n                        for (var prop in inlineCss) {\n                            inlineCssText += prop + ': ' + inlineCss[prop] + '; ';\n                        }\n\n                        if (inlineCssText.trim()) {\n                            el.setAttribute('style', inlineCssText.trim());\n                        } else {\n                            el.removeAttribute('style');\n                        }\n\n                        el.removeAttribute('data-mce-style');\n\n                    });\n\n\n                    $currentNodes[0].querySelectorAll('[data-content-shortcode]').forEach(function (el) {\n                        el.innerHTML = '[' + CP_Customizer.utils.phpTrim(el.getAttribute('data-content-shortcode')) + ']';\n                    });\n\n\n                    $currentNodes[0].querySelectorAll('[data-attr-shortcode]').forEach(function (el) {\n                        var attr = el.getAttribute('data-attr-shortcode');\n                        var parts = attr.split(',');\n\n                        for (var i = 0; i < parts.length; i++) {\n                            var part = parts[i].trim();\n                            part = part.split(':');\n                            el.setAttribute(part[0].trim(), '[' + part[1].trim() + ']');\n                        }\n                    });\n\n\n                    this.cleanNode($currentNodes);\n\n                    CP_Customizer.hooks.doAction('clean_nodes', $currentNodes);\n\n                    $currentNodes[0].querySelectorAll('*').forEach(function (el) {\n                        var attributes = el.attributes;\n                        for (var i = 0; i < attributes.length; i++) {\n                            var attrName = attributes.item(i).name;\n                            if (attrName.match(/scrollreveal/)) {\n                                el.removeAttribute(attrName);\n                            }\n                        }\n                    });\n\n                    $currentNodes.find('*').not('[data-cpid]').remove();\n\n                    // $currentNodes.find('*').not('[data-cpid]').each(function () {\n                    //     var $el = $(this);\n\n                    //     if ($el.attr('data-cp-remove-this')) {\n                    //         $el.remove();\n                    //     }\n\n                    //     if (this.previousSibling && this.previousSibling.nodeType === 8) {\n                    //         var commentText = this.previousSibling.textContent,\n                    //             shortcode = \"\",\n                    //             startComment = \"\";\n\n                    //         this.previousSibling.parentNode.removeChild(this.previousSibling);\n                    //         if (commentText.match(/cp-shortcode:(.*?):(.*)/)) {\n                    //             shortcode = commentText.match(/cp-shortcode:(.*?):(.*)/).pop();\n                    //             startComment = commentText;\n                    //         }\n\n                    //         var nextSibling = this.nextSibling;\n\n                    //         while (nextSibling) {\n                    //             if (nextSibling.nodeType === 8) {\n                    //                 var commentText = nextSibling.textContent;\n\n                    //                 if (commentText.trim() === startComment.trim()) {\n                    //                     nextSibling.parentNode.removeChild(nextSibling);\n                    //                     break;\n                    //                 }\n                    //             }\n\n                    //             $(nextSibling).attr('data-cp-remove-this', '1');\n                    //             nextSibling = nextSibling.nextSibling;\n                    //         }\n\n                    //         this.outerHTML = shortcode;\n                    //     } else {\n                    //         $el.remove();\n                    //     }\n                    // });\n\n                    $currentNodes.find('br').each(function () {\n                        if (!this.nextSibling) {\n                            $(this).remove();\n                        }\n                    });\n\n                    CP_Customizer.hooks.applyFilters('get_content', $currentNodes);\n                \n\t                //gutenberg\n                    this.decorateSectionsForGutenberg($currentNodes.find('[data-id][data-export-id]'));\n                    return $currentNodes.html().replace(/data-cpid=\"[^\"]+\"/gi, '');                    ;\n                },\n\n                __cleanNode: function (el) {\n                    el.removeAttribute('data-content-editable');\n                    el.removeAttribute('data-content-code-editable');\n                    el.removeAttribute('data-container-editable');\n\t                el.removeAttribute('data-non-editable');\n                    el.removeAttribute('contenteditable');\n                    el.removeAttribute('spellcheck');\n\n                    el.classList.remove('ui-sortable');\n                    el.classList.remove('ui-sortable-disabled');\n                    el.classList.remove('ui-sortable-handle');\n                    el.classList.remove('customize-unpreviewable');\n\n                    var elClass = el.getAttribute('class');\n                    if (elClass) {\n                        // remove the tinymce (mce-*) classes;\n                        elClass = elClass.replace(/mce\\-[a-z\\-]+/ig, \"\").trim();\n\n                        // remove multiple spaces in class names\n                        elClass = elClass.replace(/\\s\\s+/g, ' ');\n\n                        el.setAttribute('class', elClass);\n                    }\n\n                    if (el.id && el.id.indexOf('mce_') === 0) {\n                        el.removeAttribute('id');\n                    }\n\n                    // preview styles\n                    el.removeAttribute('data-preview-empty');\n\n                    // clean node url\n\n                    if (el.getAttribute('href')) {\n                        var href = CP_Customizer.preview.cleanURL(el.getAttribute('href'));\n                        el.setAttribute('href', href)\n                    }\n                },\n\n\n                getNodeClasses: function (node) {\n                    var $clone = $(node).clone();\n                    this.__cleanNode($clone[0]);\n                    return Array.from($clone[0].classList);\n                },\n\n                cleanNode: function ($node) {\n\n                $node[0].querySelectorAll('[data-content-editable], [data-content-code-editable], [data-container-editable], [data-non-editable]').forEach(function (el) {\n                        root.CP_Customizer.preview.__cleanNode(el);\n                    });\n\n                    $node[0].querySelectorAll('.ui-sortable,.ui-sortable-disabled,.ui-sortable-handle').forEach(function (el) {\n                        root.CP_Customizer.preview.__cleanNode(el);\n                    });\n\n                    root.CP_Customizer.preview.__cleanNode($node[0]);\n\n                    return $node;\n                },\n\n                cleanURL: function (url) {\n\n                    var startsWithDoubleSlash = (url.indexOf('//') === 0);\n                    var startsWithSlash = (url.indexOf('/') === 0);\n\n                    var queryKeys = Object.getOwnPropertyNames(CP_Customizer.wpApi.previewer.query());\n                    queryKeys = _.unique(queryKeys.concat([\n                        'customize_theme',\n                        'customize_changeset_uuid',\n                        'customize_messenger_channel',\n                        'customize_autosaved'\n                    ]));\n\n                    url = CP_Customizer.utils.removeUrlQueryStrings(url, queryKeys);\n\n                    // clean url\n                    url = CP_Customizer.utils.phpTrim(url, '/').trim() || \"#\";\n\n                    // add // or / depending on how url received\n                    if (startsWithDoubleSlash) {\n                        url = '//' + url;\n                    } else {\n                        if (startsWithSlash) {\n                            url = '/' + url;\n                        }\n                    }\n\n                    return url;\n                },\n\n                fixWronglyWrappedTextNodes: function ($node) {\n                    $($node).find('div').each(function () {\n                        var hasOnlyTextInside = Array.from(this).map(function (item) {\n                            return ([8, 3].indexOf(item.nodeType) !== -1)\n                        }).reduce(function (a, b) {\n                            return a && b\n                        }, true);\n\n                        if (hasOnlyTextInside) {\n                            if (this.innerHTML.trim().length) {\n                                this.outerHTML = this.innerHTML + '<br/>';\n                            } else {\n                                $(this).remove();\n                            }\n                        }\n                    });\n                },\n\n                markNode: function ($node, prefix) {\n\n                    CP_Customizer.preview.pauseObserver();\n                    prefix = prefix || 'new_cp_node_';\n\n                    $($node).find(\"*\").addBack().each(function () {\n                        $(this).attr('data-cpid', _.uniqueId(prefix));\n                    });\n\n                    CP_Customizer.preview.restartObserver();\n                },\n\n                insertNode: function ($node, $parent, index) {\n\n                    CP_Customizer.preview.silentCall(function () {\n                        index = (index !== undefined) ? index : $parent.children().length;\n                        jQuery($node).insertAt(index, $parent);\n\n                        this.decorateElements($node);\n                        this.markNode($node);\n\n                        root.CP_Customizer.updateState();\n\n                        $parent.removeAttr('data-preview-empty');\n\n                        CP_Customizer.hooks.doAction('after_node_insert', $node);\n                    });\n                },\n\n                replaceNode: function ($node, $newNode) {\n\n                    CP_Customizer.preview.silentCall(function () {\n                        jQuery($node).replaceWith($newNode);\n\n                        this.decorateElements($newNode);\n                        this.markNode($newNode);\n\n                        root.CP_Customizer.updateState();\n\n                    });\n                },\n\n                hideNode: function ($node) {\n                    $node.attr('data-reiki-hidden', 'true');\n\n                    var $parent = $node.parent();\n                    if ($parent.children(':visible').length === 0) {\n                        $parent.attr('data-preview-empty', 1);\n                    } else {\n                        $parent.removeAttr('data-preview-empty');\n                    }\n                },\n\n                showNode: function ($node) {\n                    $node.removeAttr('data-reiki-hidden');\n\n                    var $parent = $node.parent();\n                    if ($parent.children(':visible').length === 0) {\n                        $parent.attr('data-preview-empty', 1);\n                    } else {\n                        $parent.removeAttr('data-preview-empty');\n                    }\n                },\n\n                isNodeVisible: function ($node) {\n                    return !($node.is('[data-reiki-hidden]'));\n                },\n\n                removeNode: function ($node, skipUpdate) {\n                    CP_Customizer.preview.pauseObserver();\n                    var $parent = $node.parent();\n                    $node.remove();\n\n                    if (!skipUpdate) {\n                        root.CP_Customizer.updateState();\n                    }\n\n                    if ($parent.children().length === 0) {\n                        $parent.attr('data-preview-empty', 1);\n                    } else {\n                        $parent.removeAttr('data-preview-empty');\n                    }\n\n                    _.delay(function () {\n                        root.CP_Customizer.overlays.hideMovableOverlays();\n                        var addOverlay = root.CP_Customizer.overlays.addOverlay();\n                        root.CP_Customizer.overlays.updateOverlay(addOverlay, addOverlay.data().node, false, true);\n                    }, 10);\n\n                    CP_Customizer.preview.restartObserver();\n                },\n\n\n                insertContentSection: function (newRow, index) {\n                    index = _.isNumber(index) ? index : undefined;\n\n                    if (_.isUndefined(index) && this.getRootNode().children('[data-id][data-label]').length) {\n                        index = this.getRootNode().children('[data-id][data-label]').last().index() + 1;\n                    }\n\n                    this.insertNode(newRow, this.getRootNode(), index);\n                \t//this.decorateSectionsForGutenberg(newRow);\n                    this.decorateElements(newRow);\n\n\n                    function colorize(row) {\n                        var hasColor = (tinycolor(row.css('background-color')).getAlpha() !== 0);\n\n                        if (!hasColor && !row.is('[data-bg=\"transparent\"]')) {\n                            var prevSection = row.prev('[data-id][data-label]');\n\n                            if (!prevSection.length) {\n                                row.css('background-color', '#ffffff');\n                                return;\n                            }\n\n                            var isPrevTransparent = (tinycolor(prevSection.css('background-color')).getAlpha() === 0);\n                            var isPrevWhite = (tinycolor(prevSection.css('background-color')).toHex().toUpperCase() === \"FFFFFF\" || tinycolor(prevSection.css('background-color')).toHex().toUpperCase() === \"FFF\");\n\n                            if (isPrevTransparent || isPrevWhite) {\n                                row.css('background-color', '#F5FAFD');\n                            } else {\n                                row.css('background-color', '#ffffff');\n                            }\n                        }\n                    }\n\n                    colorize(newRow);\n\n\n                    CP_Customizer.renderNodeShortcodes(newRow);\n                    // CP_Customizer.hooks.doAction('after_node_insert', newRow);\n                    this.jQuery('html, body').animate({\n                        'scrollTop': newRow.offset().top\n                    });\n\n                    var exports = CP_Customizer.getSectionExports(newRow.attr('data-export-id'));\n                    if (exports.afterInsert && _.isFunction(exports.afterInsert)) {\n                        CP_Customizer.one(CP_Customizer.events.STATE_UPDATED, function () {\n                            exports.afterInsert(newRow);\n                        });\n                    }\n\n                    CP_Customizer.updateState();\n\n                },\n\n                editContainerData: function () {\n                    var item = $(this),\n                        fields = [],\n                        elements = item.find('[data-content-code-editable],[data-theme-href],[data-theme],[data-theme-mdi]');\n\n\n                    item.blur();\n\n                    if (CP_Customizer.hooks.applyFilters('custom_container_data_handle', false, item)) {\n                        CP_Customizer.hooks.doAction('custom_container_data_handle', item);\n                        CP_Customizer.preview.blur();\n                        return;\n                    }\n\n                    if (!elements.length) {\n                        elements = item.filter('.mdi');\n                    }\n\n                    CP_Customizer.overlays.updateOverlay(CP_Customizer.overlays.hoverOverlay(), item);\n\n                    if (item.is('[data-content-code-editable]') || item.is('[data-bg=\"image\"]')) {\n                        elements = elements.add(item);\n                    }\n\n                    elements = elements.filter(function (index, elem) {\n                        var result = true;\n                        elem = $(elem);\n\n                        for (var i = 0; i < CP_Customizer.__containerDataFilters.length; i++) {\n                            var filter = CP_Customizer.__containerDataFilters[i];\n                            if (false === filter.call(elem, elem)) {\n                                result = false;\n                                break;\n                            }\n                        }\n                        return result;\n\n                    });\n\n                    elements.each(function (index, elem) {\n                        var result = false,\n                            setter = false,\n                            $elem = $(this);\n\n                        for (var selector in CP_Customizer.__containerDataHandlers) {\n                            if ($elem.is(selector)) {\n                                result = CP_Customizer.__containerDataHandlers[selector].getter.call($elem, $elem);\n                                setter = CP_Customizer.__containerDataHandlers[selector].setter;\n                                break;\n                            }\n                        }\n\n                        result = root.CP_Customizer.hooks.applyFilters('container_data_element', result, $elem);\n                        if (result !== false) {\n                            if (!_.isArray(result)) {\n                                result = [result];\n                            }\n\n                            for (var i = 0; i < result.length; i++) {\n                                result[i].id = 'item_no_' + index + '_' + i;\n                                result[i].setter = setter;\n                                result[i].node = $elem;\n                            }\n\n                            fields = fields.concat(result);\n                        }\n\n                    });\n\n                    var content = '';\n                    for (var i = 0; i < fields.length; i++) {\n                        var field = fields[i],\n                            type = field.type || 'text';\n\n                        var $fieldContent = $(CP_Customizer.jsTPL[type] ? CP_Customizer.jsTPL[type](field) : '');\n\n                        if (field.classes) {\n                            $fieldContent.addClass(field.classes);\n                        }\n\n                        if (field.ready && _.isFunction(field.ready)) {\n                            field.ready($fieldContent);\n                        }\n\n                        $fieldContent.addClass(type);\n\n                        content += $('<div />').append($fieldContent).html();\n                    }\n\n                    var popupContainer = $('#cp-container-editor');\n\n\n                    function setContent() {\n                        for (var i = 0; i < fields.length; i++) {\n                            var field = fields[i],\n                                value = {},\n                                node = field.node\n                            if (field.getValue) {\n                                value = field.getValue($('[id=\"' + field.id + '\"]'));\n                            } else {\n                                var _values = $('[id^=\"' + field.id + '\"]').filter('input,textarea,select').map(function (index, elem) {\n                                    return {\n                                        key: $(this).attr('id').replace(field.id + \"__\", ''),\n                                        value: $(this).is('[type=checkbox]') ? this.checked : $(this).val()\n                                    };\n                                }).toArray();\n\n                                _(_values).each(function (v) {\n                                    value[v.key] = v.value;\n                                });\n\n                                if (_values.length === 1 && value.hasOwnProperty(field.id)) {\n                                    value = value[field.id];\n                                }\n                            }\n\n                            if (field.setter) {\n                                field.setter.call(node, node, value, field.type, field);\n                                root.CP_Customizer.hooks.doAction('container_data_element_setter', node, value, field);\n                            }\n                        }\n\n                        if (node.is('[data-theme]')) {\n                            CP_Customizer.preview.jQuery(node).data('was-changed', true);\n                        }\n\n\n                        if (node.closest('[data-theme]').length) {\n                            CP_Customizer.preview.jQuery(node.closest('[data-theme]')).data('was-changed', true);\n                        }\n\n\n                        CP_Customizer.closePopUps();\n                        CP_Customizer.updateState();\n                    }\n\n\n                    setContent = CP_Customizer.preview.addSilentExecution(setContent);\n\n                    popupContainer.find('[id=\"cp-item-ok\"]').off().click(setContent);\n\n                    popupContainer.find('[id=\"cp-item-cancel\"]').off().click(function () {\n                        CP_Customizer.closePopUps();\n                    });\n\n                    popupContainer.find('#cp-items').html(content);\n\n                    CP_Customizer.popUp(root.CP_Customizer.translateCompanionString('Manage Content'), \"cp-container-editor\", {\n                        class: \"data-edit-popup\"\n                    });\n\n                    CP_Customizer.preview.blur(true);\n\n                },\n\n                __dataContainers: ['[data-container-editable]', '[data-type=group]'],\n\n                addDataContainerSelector: function (selector) {\n                    this.__dataContainers.push(selector);\n                },\n\n                registerContainerDataHandler: function (selector, handler) {\n                    CP_Customizer.preview.addDataContainerSelector(selector);\n                    var context = {\n                        selector: selector,\n                        handler: handler\n                    };\n\n                    CP_Customizer.hooks.addFilter('custom_container_data_handle', function (value, $item) {\n                        if ($item.is(this.selector)) {\n                            value = true;\n                        }\n                        return value;\n\n                    }.bind(context));\n\n                    CP_Customizer.hooks.addAction('custom_container_data_handle', function ($item) {\n                        if ($item.is(this.selector)) {\n                            this.handler($item);\n                        }\n                    }.bind(context));\n                },\n\n\n                getContainersSelector: function (addSelectors) {\n                    var result = _.clone(this.__dataContainers);\n\n                    if (_.isArray(addSelectors)) {\n                        result = result.concat(addSelectors);\n                    } else {\n                        if (_.isString(addSelectors)) {\n                            result.push(addSelectors);\n                        }\n                    }\n\n                    return result.join(',');\n                },\n\n\n                addContentBinds: function () {\n                    var $ = this.jQuery(),\n                        document = this.frame().document,\n                        window = this.frame();\n\n                    $(document).on('mouseover.hoveroverlay', this.getContainersSelector('[data-widgets-area],[data-bg=\"image\"]'), _.debounce(function () {\n                   \t\tif (this.hasAttribute(\"data-non-editable\")) return false;\n                        var node = $(this);\n                        var hoverOverlay = root.CP_Customizer.overlays.hoverOverlay();\n\n                        if (node.closest('[data-type=group]').length) {\n                            node = $(this).closest('[data-type=group]');\n                        }\n\n                        if (node.closest('[data-content-shortcode]').length) {\n                            node = node.closest('[data-content-shortcode]');\n                        }\n\n                        root.CP_Customizer.overlays.assignNode(hoverOverlay, node, true);\n                        hoverOverlay.show();\n\n                        var structureAllowsRemoving = (node.parents('[data-type=row]').length || node.parents('[data-type=column]').length)/* && node.siblings().length*/;\n                        var isFixed = (node.is('[data-fixed]') || node.parents('[data-fixed]').length);\n\n                        isFixed = CP_Customizer.hooks.applyFilters('is_fixed_element', isFixed, node);\n\n                        if (structureAllowsRemoving && !isFixed && node.is(root.CP_Customizer.CONTENT_ELEMENTS)) {\n                            hoverOverlay.find('.remove').show();\n                        } else {\n                            hoverOverlay.find('.remove').hide();\n                        }\n                    }, 1));\n\n\n                    $(document).on('mouseover.hoveroverlay', '[data-content-editable], .page-content i.mdi, body [data-content-item-container=\"true\"]', _.debounce(function () {\n\t\t\t\t\t\tif (this.hasAttribute(\"data-non-editable\")) return false;\n                        var node = $(this);\n\n                        if (node.parent().is('[data-content-item-container=\"true\"]')) {\n                            return;\n                        }\n\n                        var hoverOverlay = root.CP_Customizer.overlays.hoverOverlay();\n\n                        if (node.closest('[data-type=group]').length) {\n                            node = $(this).closest('[data-type=group]');\n                        }\n\n                        root.CP_Customizer.overlays.assignNode(hoverOverlay, node);\n                        hoverOverlay.show();\n\n                        if (CP_Customizer.isShortcodeContent(node)) {\n                            hoverOverlay.find('.remove').hide();\n\n                            if (!CP_Customizer.isOnCanvasMod(node)) {\n                                hoverOverlay.hide();\n                            }\n                        } else {\n                            var inRow = node.parents('[data-type=row]').length || node.parents('[data-type=column]').length;\n                            if (inRow && !node.is('[data-fixed]') && !node.closest('[data-fixed]').length) {\n                                hoverOverlay.find('.remove').show();\n                            } else {\n                                hoverOverlay.find('.remove').hide();\n                            }\n                        }\n\n\n                    }, 1));\n\n                    $(document).on('mouseover.hoveroverlay', '.page-content [data-content-shortcode]', function () {\n\n                        if (CP_Customizer.isShortcodeEditable($(this))) {\n                            var overlay = root.CP_Customizer.overlays.hoverOverlay();\n                            root.CP_Customizer.overlays.assignNode(overlay, $(this));\n                            overlay.show();\n                        }\n                    });\n\n\n                    $(document).on('mouseover', root.CP_Customizer.preview.getPageContainerSelector() + ' > div', function () {\n                        root.CP_Customizer.trigger('content.section.hovered', [$(this)]);\n                    });\n\n\n                    $(document).on('mouseover', '[data-type=\"richtext\"]', function () {\n                        var hoverOverlay = root.CP_Customizer.overlays.hoverOverlay();\n                        root.CP_Customizer.overlays.assignNode(hoverOverlay, $(this), true);\n\n                    });\n\n\n                    $(document).on('mouseover.addoverlay', '.page-content [data-type=\"row\"] > div, [data-theme] [data-type=\"row\"] > div, .page-content [data-type=\"column\"]', function () {\n\n                        if ($(this).closest(\"[data-type=\\\"row\\\"]\").is('[data-fixed]')) {\n                            return;\n                        }\n\n                        if ($(this).find('[data-type=column]').length) {\n                            return;\n                        }\n\n                        if ($(this).closest('[data-content-shortcode]').length) {\n                            return;\n                        }\n\n                        var addOverlay = root.CP_Customizer.overlays.addOverlay();\n                        root.CP_Customizer.overlays.assignNode(addOverlay, $(this));\n                        addOverlay.show();\n                    });\n\n\n                    $(document).on('mouseover.rowitemoverlay', '.page-content [data-type=\"row\"] > div, [data-theme] [data-type=\"row\"] > div, .page-content [data-type=\"row\"] > div, [data-theme] [data-type=\"row\"] > div * ', function () {\n                            var node = $(this);\n\n                            if (!node.parent().is('[data-type=\"row\"]')) {\n                                var parents = node.parentsUntil('[data-type=\"row\"]');\n                                node = parents.last();\n                            }\n\n                            if (CP_Customizer.isShortcodeContent(node)) {\n                                return;\n                            }\n\n\n                            var itemOverlay = root.CP_Customizer.overlays.rowItemHoverOverlay();\n                            root.CP_Customizer.overlays.assignNode(itemOverlay, node);\n                            itemOverlay.show();\n                        }\n                    );\n\n                    $(window).on('scroll', root.CP_Customizer.overlays.updateAllOverlays);\n                    $(window).on('resize', _(root.CP_Customizer.overlays.updateAllOverlays).debounce(50));\n\n                    $(document).on('click', this.getContainersSelector(), root.CP_Customizer.preview.editContainerData);\n\n                    $(document).on('click', 'body [data-content-editable]', function () {\n                        $(this).focus();\n                    });\n\n                    $(document).on('click', 'img[data-content-editable], [data-bg=\"image\"]', function () {\n\n\n                        var self = $(this),\n                            type = \"image\",\n                            data = {};\n\n                        if (self.is(CP_Customizer.preview.getContainersSelector())) {\n                            return;\n                        }\n\n                        var section = CP_Customizer.preview.getNodeSection(self);\n                        var sectionExports = CP_Customizer.getSectionExports(section);\n\n                        var flexible = _.isUndefined(sectionExports.maintainCropPropotion) ? true : sectionExports.maintainCropPropotion;\n\n                        if (self.is('[data-size-flexible=false]')) {\n                            flexible = false;\n                        }\n\n                        if (self.attr('data-size')) {\n                            var size = self.attr('data-size').split('x');\n                            type = \"cropable\";\n                            data = {\n                                width: size[0],\n                                height: size[1] ? size[1] : size[0],\n                                flexible: flexible\n                            };\n                        } else {\n                            data = {\n                                width: self.width(),\n                                height: self.height(),\n                                flexible: true\n                            };\n                        }\n\n                        root.CP_Customizer.openMediaBrowser(type, setterCB, data);\n\n                        function setterCB(src) {\n                            if (!src) {\n                                return;\n                            }\n                            if (self.is('img')) {\n                                self.attr('src', src[0].url);\n\n                                // remove attributes added by other plugins like JetPack\n                                self.removeAttr('srcset');\n                                self.removeAttr('src-orig');\n                                self.removeAttr('width');\n                                self.removeAttr('height');\n\n                            } else {\n                                self.css('background-image', 'url(' + src[0].url + ')');\n                            }\n\n                            root.CP_Customizer.markSave();\n                        }\n                    });\n\n                    $(document).on('click', 'i.mdi', function () {\n                        if (CP_Customizer.hooks.applyFilters('can_edit_icon', true, $(this))) {\n                            CP_Customizer.preview.editContainerData.apply(this);\n                        }\n                    });\n\n                    var cachedValue = \"\";\n                    $(document).on('mousedown', '.page-content [data-content-editable]', function (event) {\n                        cachedValue = $(this).text();\n                    });\n\n\n                    $(document).on('mouseup', '.page-content [data-content-editable]', function () {\n                        if ($(this).text() !== cachedValue) {\n                            root.CP_Customizer.markSave();\n                            cachedValue = $(this).text();\n                        } else {\n                            cachedValue = \"\";\n                        }\n                    });\n\n                    //Check for IE ('Trident')\n                    var contentEditableInputEvent = /Trident/.test(navigator.userAgent) ? 'textinput' : 'input';\n\n\n                    $(document).on(contentEditableInputEvent, 'body [data-content-editable]', function () {\n                        if ($(this).is('[data-theme]')) {\n                            $(this).data('was-changed', true);\n                            return;\n                        }\n\n                        root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(this), false, true);\n                        root.CP_Customizer.markSave();\n                    });\n\n\n                    $(document).on('blur', 'body [data-theme]', function () {\n                        if ($(this).data('was-changed')) {\n                            root.CP_Customizer.markSave();\n                        }\n                    });\n\n                    var elementsSpecificSelector = CP_Customizer.TEXT_ELEMENTS.split(',').map(function (item) {\n                        var result = CP_Customizer.preview.getPageContainerSelector() + ' ' + item;\n\n                        result += \", [data-theme] \" + item;\n                        return result;\n                    });\n\n                    elementsSpecificSelector.push('[data-theme]');\n\n                    elementsSpecificSelector = elementsSpecificSelector.join(',');\n\n                    var elementsOnFocusLeave = _.debounce(function () {\n                        var $this = $(this);\n                        root.CP_Customizer.preview.markNode($this);\n\n                        if ($this.is(root.CP_Customizer.CONTENT_ELEMENTS) && $this.html().trim().length === 0) {\n                            $this.attr('data-preview-empty', 1);\n                        }\n                    }, 10);\n\n                    $(document).on('blur focusout', elementsSpecificSelector, elementsOnFocusLeave);\n\n                    $(document).on('focus', elementsSpecificSelector, function (event) {\n                        var $this = $(this);\n                        $this.removeAttr('data-preview-empty');\n\n                        if ($this.is('.mdi')) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            return false;\n                        }\n                    });\n\n\n                    $(document).on('keydown.cp', '[contenteditable=true]', function (event) {\n\n                        var editedNode = this;\n\n                        _.delay(function () {\n                            root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(editedNode), false, true);\n                            $(editedNode).removeAttr('data-preview-empty');\n                        }, 20);\n\n                    });\n\n                    $(document).on('keypress.cp', '[contenteditable=true]', function (event) {\n\n                        if (event.which !== 13)\n                            return true;\n\n                        var document = CP_Customizer.preview.frame().document;\n\n                        var docFragment = document.createDocumentFragment();\n                        //add a new line\n                        var newEle = document.createTextNode('\\n');\n                        docFragment.appendChild(newEle);\n                        //add the br, or p, or something else\n                        newEle = document.createElement('br');\n                        docFragment.appendChild(newEle);\n\n                        var caretPosition = root.CP_Customizer.preview.getSelectionTextInfo(this);\n\n                        //make the br replace selection\n                        var range = window.getSelection().getRangeAt(0);\n                        range.deleteContents();\n                        range.insertNode(docFragment);\n                        //create a new range\n                        range = document.createRange();\n                        range.setStartAfter(newEle);\n                        range.collapse(true);\n                        //make the cursor there\n                        var sel = window.getSelection();\n                        sel.removeAllRanges();\n                        sel.addRange(range);\n\n                        event.preventDefault();\n\n                        $(this).trim();\n\n                        root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(this), false, true);\n\n                        return false;\n\n                    });\n\n                    $(document).on('blur.cpmarksave', '[contenteditable=true]', _.debounce(function (event) {\n\n                        if (!$(this).data('cpFocused')) {\n                            return;\n                        }\n\n                        $(this).data('cpFocused', false);\n\n                        root.CP_Customizer.preview.markNode($(this));\n                        root.CP_Customizer.markSave();\n                    }, 800));\n\n                    $(window).bind('keydown', function (event) {\n                        if (event.ctrlKey || event.metaKey) {\n                            var key = String.fromCharCode(event.which).toLowerCase();\n                            if (key === \"s\") {\n                                event.preventDefault();\n                                event.stopPropagation();\n                                root.CP_Customizer.save();\n                            }\n                        }\n                    });\n\n\n                },\n                // http://stackoverflow.com/questions/1125292/how-to-move-cursor-to-end-of-contenteditable-entity\n                placeCursorAtEnd: function (contentEditableElement) {\n                    try {\n                        var range, selection,\n                            document = this.frame().document,\n                            window = this.frame();\n                        if (document.createRange) //Firefox, Chrome, Opera, Safari, IE 9+\n                        {\n                            range = document.createRange(); //Create a range (a range is a like the selection but invisible)\n                            range.selectNodeContents(contentEditableElement); //Select the entire contents of the element with the range\n                            range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\n                            selection = window.getSelection(); //get the selection object (allows you to change selection)\n                            selection.removeAllRanges(); //remove any selections already made\n                            selection.addRange(range); //make the range you have just created the visible selection\n                        } else if (document.selection) //IE 8 and lower\n                        {\n                            range = document.body.createTextRange(); //Create a range (a range is a like the selection but invisible)\n                            range.moveToElementText(contentEditableElement); //Select the entire contents of the element with the range\n                            range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\n                            range.select(); //Select the range (make it the visible selection\n                        }\n                    } catch (e) {\n\n                    }\n                },\n\n\n                decorateMods: function ($container) {\n\n                    // decorate default mods\n                    CP_Customizer.preview.pauseObserver();\n                    $container = $container ? this.jQuery($container) : this.find('body');\n                    var defaultMods = root.CP_Customizer.preview.getThemeMods($container);\n                    var preview = this;\n                    defaultMods.each(function () {\n                        var $el = $(this);\n                        if ($el.is('[data-theme]')) {\n                            preview.markNode($el);\n                            $el.find('[data-type=\"row\"] > div').each(preview.enableSortable);\n                        }\n                    });\n\n                    if (root.CP_Customizer.options().mods) {\n                        for (var selector in root.CP_Customizer.options().mods) {\n                            var $el = this.find(selector);\n                            var modData = root.CP_Customizer.options().mods[selector];\n                            if (modData.type) {\n                                $el.attr(modData.type, modData.mod);\n\n                                if (modData.type === \"data-theme\") {\n                                    preview.markNode($el);\n                                    $el.find('[data-type=\"row\"] > div').each(this.enableSortable);\n                                }\n                            }\n\n                            if (modData.atts) {\n                                for (var attr in modData.atts) {\n                                    $el.attr('data-theme-' + attr, modData.atts[attr]);\n                                }\n                            }\n\n                        }\n                    }\n\n                    CP_Customizer.preview.restartObserver();\n                },\n\n                //scan siblings and parent siblings until a comment node is found\n                getGutenbergBlockCommentStart:function (node)\n                {\n                    if (!node || (node && node.tagName == \"body\")) return false;\n                    if (node.nodeType == Node.COMMENT_NODE) return node;\n\n                    var previousSibling = node.previousSibling;\n                    var maxDepth = 10;\n                    while (previousSibling && \n                        previousSibling.nodeType != Node.COMMENT_NODE &&\n                        maxDepth-- > 0)\n                    {\n                        previousSibling = previousSibling.previousSibling;\n                    }\n\n                    if (!previousSibling || previousSibling.nodeType != Node.COMMENT_NODE) \n                        previousSibling = this.getGutenbergBlockCommentStart(node.parentNode);\n                    \n                    if (previousSibling.nodeType == Node.COMMENT_NODE)\n                    return previousSibling;\n                    \n                    return false;\n                },\n\n                getGutenbergBlockCommentEnd:function (node)\n                {\n                    if (!node || (node && node.tagName == \"body\")) return false;\n                    if (node.nodeType == Node.COMMENT_NODE) return node;\n\n                    var nextSibling = node.nextSibling;\n                    var maxDepth = 10;\n                    while (nextSibling && \n                        nextSibling.nodeType != Node.COMMENT_NODE &&\n                        maxDepth-- > 0)\n                    {\n                        nextSibling = nextSibling.nextSibling;\n                    }\n\n                    if (!nextSibling || nextSibling.nodeType != Node.COMMENT_NODE) \n                        nextSibling =  this.getGutenbergBlockCommentEnd(node.parentNode);\n                    \n                    if (nextSibling.nodeType == Node.COMMENT_NODE)\n                    return nextSibling;\n                    \n                    return false;\n                },\n\n\t            disableGutenbergBlocks: function (contentEditableElements)\n\t            {\n                    var self = this;\n                    var dataIdCounter = 1;\n\t                contentEditableElements.each(function (i, node) {\n\n\t                    //add data-non-editable also for node children for gutenberg figure > img case    \n\t                    function setNonEditableNodes(node, parent)\n\t                    {\n\t                        function setNode(node, parent)\n\t                        {\n\t                            $(node).removeAttr(\"data-content-editable data-container-editable data-content-code-editable contenteditable srcset sizes data-category data-label data-export-id\");\n                                if (parent === true) \n                                {\n                                    $(node).attr(\"data-non-editable\", true);\n                                }\n\t                        }\n\t                        \n\n\t                        setNode(node, parent);\n\t                        for (var i = 0; i < node.childNodes.length; i++) {\n\t                            var child = node.childNodes[i];\n\t                            setNonEditableNodes(child);\n\t                             //delete srcset andsizes attributes so that Gutenberg does not say invalid content\n\t                             setNode(node);\n\t                          }\n\t                    }\n\t                    \n\n\t                    \n\t                    //check previous sibling nodes until reaching comment node to skip eventual text nodes\n\t                    function nextNonTextNode(node)\n\t                    {\n\t                        var nextSibling = node;\n\t                        var maxDepth = 10;\n\t                        while (nextSibling && \n\t                            (nextSibling.nodeType == Node.COMMENT_NODE ||\n\t                            nextSibling.nodeType == Node.TEXT_NODE) &&\n\t                            maxDepth-- > 0)\n\t                        {\n\t                            nextSibling = nextSibling.nextSibling;\n\t                        }\n\n\t                        return nextSibling;\n\t                    }\n\n\t                    var commentNode = self.getGutenbergBlockCommentStart(node);\n\t                    var sectionNode;\n\t                    \n\t                    if ((commentNode && commentNode.nodeType == Node.COMMENT_NODE) && //check if section has wp:comment\n\t                    commentNode.textContent.indexOf(\"wp:\") != -1 && //check if gutenberg block\n                        commentNode.textContent.indexOf(\"wp:extendstudio/materialis\") == -1 && //check if not materialis block\n                        commentNode.textContent.indexOf(\"wp:extendstudio/mesmerize\") == -1) //check if not mesmerize block\n\t                    {\n\t                        //set gutenberg block as non editable\n\t                        sectionNode = nextNonTextNode(commentNode);\n\t                        setNonEditableNodes(sectionNode, true);\n\t                    }\n\t                });                \n\t            },\n\t            \n                decorateElements: function ($container) {\n\n\n                    CP_Customizer.preview.pauseObserver();\n\n                    var $ = root.CP_Customizer.preview.jQuery(),\n                        self = this;\n\n                    var elementsContainers = root.CP_Customizer.hooks.applyFilters('decorable_elements_containers', [root.CP_Customizer.preview.getPageContainerSelector(), '[data-dynamic-mod-container]']);\n                    $container = $container ? $($container) : root.CP_Customizer.preview.find(elementsContainers.join(','));\n\n\n                    $(function () {\n                        var $toDecorate = $(\"\");\n                        $toDecorate = $toDecorate.add($container);\n                        // $toDecorate = $toDecorate.add($('[data-theme]'));\n                        CP_Customizer.overlays.addFixedOverlays($toDecorate);\n                    });\n\n\n                    $container.find('a').unbind('click').click(function (event) {\n                        event.preventDefault();\n                        event.stopImmediatePropagation();\n                        event.stopPropagation();\n\n                        if ($(this).is('[data-container-editable]') || $(this).is('[data-type=group]')) {\n                            self.editContainerData.apply(this);\n                        }\n\n                        return false;\n                    });\n                    var elements = $container.find(root.CP_Customizer.CONTENT_ELEMENTS).filter(function () {\n                        return root.CP_Customizer.preview.data().maintainable;\n                    });\n\n                    if ($container.is(root.CP_Customizer.CONTENT_ELEMENTS)) {\n                        if (elements.length) {\n                            elements.add($container);\n                        } else {\n                            elements = $container;\n                        }\n                    }\n\n\n                    elements = elements.filter(function (item) {\n                        if ($(this).closest('[data-content-shortcode]').length) {\n                            return false;\n                        }\n                        return true;\n                    });\n                    elements = elements.add(root.CP_Customizer.preview.getThemeMods($container).filter(root.CP_Customizer.CONTENT_ELEMENTS));\n                    elements.filter('a').each(function () {\n                        var $el = $(this);\n\n                        if ($el.closest(root.CP_Customizer.preview.getPageContainerSelector()).length) {\n                            $el.attr('data-container-editable', true);\n                        }\n\n                        if ($el.is('[data-theme]')) {\n                            $el.attr('data-container-editable', true);\n                        }\n\n                    });\n                    elements.filter('ul').attr('data-container-editable', true);\n                    elements = elements.filter(function (item) {\n                        if (this.tagName === \"SPAN\" && $(this).parents(CP_Customizer.TEXT_ELEMENTS).length) {\n                            return false;\n                        }\n\n                        if ($(this).parents(root.CP_Customizer.preview.getContainersSelector()).length) {\n                            $(this).attr('data-content-code-editable', true);\n                            return false;\n                        }\n\n                        if ($(this).is(root.CP_Customizer.preview.getContainersSelector())) {\n                            $(this).attr('data-content-code-editable', true);\n                            return false;\n                        }\n\n                        return true;\n                    });\n\n                    elements.not('i.mdi,a').attr('data-content-editable', true);\n                    elements.not('i.mdi,hr,a').attr('contenteditable', true);\n\n                    elements.filter('i.mdi').each(function () {\n                        if ($(this).parent().is(root.CP_Customizer.CONTENT_ELEMENTS)) {\n                            return;\n                        }\n\n                        $(this).attr('data-content-editable', true);\n                        $(this).attr('contenteditable', true);\n                    });\n\n                    var contentEditableElements = $container.find('[contenteditable=\"true\"]');\n\n                    if ($container.is('[contentededitable=true]')) {\n                        contentEditableElements.add($container);\n                    }\n\n                    contentEditableElements = contentEditableElements.add(root.CP_Customizer.preview.getThemeMods($container).filter('[contenteditable=\"true\"]'));\n\n\n                    var handlePasteEvent = function (e) {\n                        var $ = CP_Customizer.preview.jQuery();\n\n                        var text = '';\n                        var that = $(this);\n                        var document = CP_Customizer.preview.frame().document;\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        if (e.clipboardData) {\n                            text = e.clipboardData.getData('text/plain');\n                        } else if (window.clipboardData) {\n                            text = window.clipboardData.getData('Text');\n                        } else if (e.originalEvent.clipboardData) {\n                            text = $('<div></div>').text(e.originalEvent.clipboardData.getData('text'));\n                        }\n\n                        var textContainer = $('<div/>').append(text);\n\n                        CP_Customizer.preview.fixWronglyWrappedTextNodes(textContainer);\n\n                        text = textContainer[0].innerHTML.replace(/\\r\\n/g, '<br/>').replace(/\\r/g, '<br/>').replace(/\\n/g, '<br/>');\n\n                        if (document.queryCommandSupported('insertText')) {\n                            document.execCommand('insertHTML', false, text);\n                            return false;\n                        }\n                        else { // IE > 7\n                            that.find('*').each(function () {\n                                $(this).addClass('within');\n                            });\n\n                            setTimeout(function () {\n                                // nochmal alle durchlaufen\n                                that.find('*').each(function () {\n                                    // wenn das element keine klasse 'within' hat, dann unwrap\n                                    // http://api.jquery.com/unwrap/\n                                    $(this).not('.within').contents().unwrap();\n                                });\n                                root.CP_Customizer.preview.markNode(that);\n                            }, 1);\n                        }\n                        root.CP_Customizer.markSave();\n                    };\n\n                    contentEditableElements.filter('*').each(function () {\n                        if (!CP_Customizer.IS_PRO) {\n                            this.addEventListener('paste', handlePasteEvent);\n                        }\n                    });\n\n                    $container.find('[data-type=\"row\"] > div, [data-type=column]').each(this.enableSortable);\n\n                    if ($container.is('[data-type=\"row\"] > div, [data-type=column]')) {\n                        this.enableSortable.call($container);\n                    }\n\n                    if ($container.closest('.ui-sortable').length) {\n                        try {\n                            $container.closest('.ui-sortable').sortable('refresh');\n                            $container.closest('.ui-sortable').sortable('disable');\n                        } catch (e) {\n\n                        }\n                    }\n\n               \t    this.disableGutenbergBlocks($container.find('[contenteditable=\"true\"], [data-content-code-editable=\"true\"], [class^=wp-]'));\n                    root.CP_Customizer.trigger(root.CP_Customizer.events.ELEMENT_DECORATED, [$container]);\n                    CP_Customizer.preview.restartObserver();\n   \t\t         },\n\n\t            decorateSectionsForGutenberg: function(sections){\n\t                 var sections = sections ? sections : CP_Customizer.preview.getSections();\n\n\t                 //adds gutenberg block html comment\n\t                sections.each(function (i, node) {\n\t                    //skip decorate if node already has comment\n\t                    if (node.previousSibling && \n\t                        node.previousSibling.nodeType == Node.COMMENT_NODE &&\n\t                        node.previousSibling.textContent.indexOf(\" wp:extendstudio/materialis\") != -1) \n\t                    return;\n\n\t                    var commentOpen = document.createComment(\" wp:extendstudio/materialis \");\n\t                    var commentClose = document.createComment(\" /wp:extendstudio/materialis \");\n\t                    node.before(commentOpen);\n\t                    node.after(commentClose);\n\t                 });\n                },\n\n                enableSortable: function () {\n                    var $ = CP_Customizer.preview.jQuery();\n                    var $this = $(this);\n\n                    if ($this.find('[data-type=column]').length) {\n                        return;\n                    }\n\n                    if ($this.parent().is('[data-content-shortcode]')) {\n                        return;\n                    }\n\n\n                    if ($this.children().length === 0) {\n                        if ($this.is(root.CP_Customizer.CONTENT_ELEMENTS) && $this.html().trim().length === 0) {\n                            $this.attr('data-preview-empty', 1);\n                        }\n                    }\n\n                    $this.sortable({\n                        axis: \"y\",\n                        start: function (event, ui) {\n                            ui.helper.css({\n                                'display': 'block',\n                            });\n                        },\n                        stop: function (evt, ui) {\n                            $this.sortable('disable');\n                            $('.node-hover-overlay[is-dragging=true]').removeAttr('is-dragging');\n                            $(ui.item).data('reikidragging', false);\n                            ui.item.removeAttr(\"style\");//button drag left:0px fix\n\n                            function refreshOverlay() {\n                                root.CP_Customizer.overlays.assignNode(root.CP_Customizer.overlays.hoverOverlay(), $(ui.item));\n                                root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(ui.item));\n                            }\n\n                            ui.item.css('display', '');\n                            ui.item.css('transition', '');\n                            setTimeout(refreshOverlay, 10);\n                            $('[contenteditable]').attr('contenteditable', true);\n                            root.CP_Customizer.isSorting = false;\n                            root.CP_Customizer.updateState();\n                        },\n                        deactivate: function (evt, ui) {\n                            $('.node-hover-overlay[is-dragging=true]').removeAttr('is-dragging');\n                        },\n                        cursorAt: {\n                            left: 0,\n                            top: 0\n                        }\n\n                    });\n                    $this.sortable('disable');\n                },\n\n                showTextElementCUI: function (node) {\n                    CP_Customizer.preview.pauseObserver();\n\n                    $(node).off('paste.cp_customizer').on('paste.cp_customizer', function (event) {\n                        var clipboardData = null;\n                        var mimeType = \"\";\n                        var window = CP_Customizer.preview.frame();\n                        var document = window.document;\n\n\n                        event.preventDefault();\n                        // event.stopPropagation();\n                        // event.stopImmediatePropagation();\n\n                        if (event.clipboardData) {\n                            clipboardData = event.clipboardData;\n                            mimeType = 'text/plain';\n                        } else if (window.clipboardData) {\n                            clipboardData = window.clipboardData;\n                            mimeType = 'Text';\n                        } else if (event.originalEvent.clipboardData) {\n                            clipboardData = event.originalEvent.clipboardData;\n                            mimeType = 'text';\n                        }\n\n                        var text = clipboardData.getData(mimeType);\n                        text = CP_Customizer.utils.wpautop(text.replace(/\\n\\s*\\n/g, '\\n'));\n                        var textContainer = $('<div/>').append(text);\n\n                        CP_Customizer.preview.fixWronglyWrappedTextNodes(textContainer);\n\n                        text = textContainer[0].innerHTML;\n\n                        if (document.queryCommandSupported('insertText')) {\n                            document.execCommand('insertHTML', false, text);\n                            return false;\n                        }\n                        else { // IE > 7\n                            that.find('*').each(function () {\n                                $(this).addClass('within');\n                            });\n\n                            setTimeout(function () {\n                                // nochmal alle durchlaufen\n                                that.find('*').each(function () {\n                                    // wenn das element keine klasse 'within' hat, dann unwrap\n                                    // http://api.jquery.com/unwrap/\n                                    $(this).not('.within').contents().unwrap();\n                                });\n                            }, 1);\n                        }\n\n                    });\n\n                    node = $(node)[0];\n\n                    var cui = this.getTextElementCUI();\n\n                    if (!cui) {\n                        CP_Customizer.logError('TinyMCE Editor not found');\n                        return;\n                    }\n\n                    cui.hidden = false;\n                    cui.target = node;\n                    cui.bodyElement = node;\n                    cui.show();\n                    cui.fire('focusin');\n                    cui.undoManager.clear();\n                    cui.theme.panel.getEl().classList.add('cp-tinymce-inline');\n                    cui.theme.panel.getEl().style.display = \"block\";\n\n\n                    var docWidth = Math.min(CP_Customizer.preview.frame().innerWidth, CP_Customizer.preview.jQuery('html').width()),\n                        cuiRect = cui.theme.panel.getEl().getBoundingClientRect(),\n                        nodeWidth = CP_Customizer.preview.jQuery(node).width(),\n                        nodeOffsetLeft = CP_Customizer.preview.jQuery(node).offset().left;\n\n\n                    var newLeft = (nodeOffsetLeft - (cuiRect.width - nodeWidth) * 0.5);\n\n                    if (newLeft < 0) {\n                        newLeft = nodeOffsetLeft;\n                    }\n\n                    if (newLeft + cuiRect.width > docWidth) {\n                        newLeft = nodeOffsetLeft + nodeWidth - cuiRect.width;\n\n                    }\n                    cui.theme.panel.getEl().style.left = newLeft + 'px';\n\n                },\n\n                hideTextElementCUI: function () {\n                    var cui = this.getTextElementCUI();\n\n                    if (!cui) {\n                        CP_Customizer.logError('TinyMCE Editor not found');\n                        return;\n                    }\n\n\n                    if (cui.theme && cui.theme.panel) {\n                        cui.theme.panel.getEl().style.display = \"none\";\n                    }\n\n                    if (cui.getBody()) {\n                        cui.fire('focusout');\n                        // cui.hide();\n                    }\n                },\n\n                getFonts: function () {\n\n                    var defaultFonts = {\n                        \"Arial\": \"arial,helvetica,sans-serif\",\n                        \"Arial Black\": \"arial black,sans-serif\",\n                        \"Andale Mono\": \"andale mono,monospace\",\n                        // \"Book Antiqua\": \"book antiqua,palatino,serif\",\n                        // \"Comic Sans MS\": \"comic sans ms,sans-serif\",\n                        // \"Courier New\": \"courier new,courier,monospace\",\n                        // \"Georgia\": \"georgia,palatino,serif\",\n                        // \"Helvetica\": \"helvetica,arial,sans-serif\",\n                        // \"Impact\": \"impact,sans-serif\",\n                        // \"Symbol\": \"symbol\",\n                        \"Tahoma\": \"tahoma,arial,helvetica,sans-serif\",\n                        \"Terminal\": \"terminal,monaco,monospace\",\n                        \"Times New Roman\": \"times new roman,times,serif\",\n                        // \"Trebuchet MS\": \"trebuchet ms,geneva,sans-serif\",\n                        \"Verdana\": \"verdana,geneva,sans-serif\"\n                        // \"Webdings\": \"webdings\",\n                        // \"Wingdings\": \"wingdings,zapf dingbats\"\n                    };\n\n                    var googleFonts = {};\n\n                    if (root.CP_Customizer.pluginOptions.data.fonts) {\n                        for (var font in root.CP_Customizer.pluginOptions.data.fonts) {\n                            googleFonts[font] = font + \",arial,helvetica,sans-serif\";\n                        }\n                    }\n\n                    googleFonts = root.CP_Customizer.hooks.applyFilters('tinymce_google_fonts', googleFonts);\n\n                    var fonts = _.extend(googleFonts, defaultFonts);\n\n                    fonts.toTinyMCEFormat = function () {\n                        var result = [];\n                        for (var font in this) {\n                            if (_.isString(this[font])) {\n                                result.push(font + \"=\" + this[font]);\n                            }\n                        }\n\n                        return result.join(';');\n                    };\n\n                    return fonts;\n                },\n\n                getNodeFont: function (node) {\n                    var $node = this.jQuery(node)\n                    var font = $node.css('font-family');\n                    var fontArray = font.replace(/[\\'\\\"]/g, '').replace(/\\s/g, '').toLowerCase().split(',');\n                    var fonts = this.getFonts();\n\n                    if (_.isObject(fonts)) {\n                        for (var name in fonts) {\n                            if (_.isString(fonts[name])) {\n                                var _fontArray = fonts[name].replace(/[\\'\\\"]/g, '').replace(/\\s/g, '').toLowerCase().split(',');\n                                if (_.difference(_fontArray, fontArray).length === 0) {\n                                    return name;\n                                }\n                            }\n                        }\n                    }\n\n                    return font;\n                },\n\n                getFontWeights: function (font) {\n                    var fonts = CP_Customizer.utils.getValue('web_fonts');\n\n                    if (fonts) {\n                        for (var i = 0; i < fonts.length; i++) {\n                            var _font = fonts[i];\n                            if (_font.family.toLowerCase() === font.toLowerCase()) {\n                                var weights = [];\n                                for (var w = 0; w < _font.weights.length; w++) {\n                                    var weight = _font.weights[w];\n                                    if (weight === 'normal' || weight === 'regular') {\n                                        weight = '400';\n                                    } else {\n                                        try {\n                                            weight = parseInt(weight).toString();\n                                        } catch (e) {\n\n                                        }\n                                    }\n\n                                    if (weights.indexOf(weight) === -1) {\n                                        weights.push(weight);\n                                    }\n                                }\n                                return weights;\n                            }\n                        }\n                    }\n\n                    return ['100', '200', '300', '400', '500', '600', '700', '800', '900'];\n                },\n\n                getTextElementCUI: function () {\n                    var editorID = 'cp-tinymce-cui-editor';\n                    var editor = root.CP_Customizer.preview.frame().tinymce ? root.CP_Customizer.preview.frame().tinymce.get(editorID) : 'cp-editor-not-found';\n\n                    if (editor === 'cp-editor-not-found') {\n                        return undefined;\n                    }\n\n                    var self = this;\n                    if (!editor) {\n                        this.jQuery('body').after('<div id=\"' + editorID + '\"></div>');\n                        var options = {\n                            \"selector\": \"#\" + editorID,\n                            inline: true,\n                            style_formats_merge: true,\n                            extended_valid_elements: 'span',\n                            \"formats\": {\n                                alignment: {selector: 'p,h1,h2,h3,h4,h5,h6', styles: {textAlign: '%value'}},\n                                fontweight: {inline: 'span', styles: {fontWeight: '%value'}},\n                                fontsize: {inline: 'span', styles: {fontSize: '%value'}},\n                                fontcolor: {inline: 'span', styles: {color: '%value'}},\n                                italic: {inline: 'span', styles: {fontStyle: 'italic'}},\n\n                            },\n                            \"menubar\": false,\n                            \"theme\": \"modern\",\n                            \"skin\": \"lightgray\",\n                            \"toolbar\": 'fontselect addwebfont font-weight font-size-popup | italic underline strikethrough superscript subscript alignment  font-color-popup | removeformat',\n                            \"font_formats\": this.getFonts().toTinyMCEFormat(),\n                            \"paste_as_text\": true,\n                            \"forced_root_block\": false,\n                            setup: function (ed) {\n                                var bm;\n\n                                ed.addButton('font-weight', {\n                                    type: 'listbox',\n                                    text: root.CP_Customizer.translateCompanionString('Font Weight'),\n                                    icon: false,\n                                    onselect: function (e) {\n                                        ed.formatter.apply('fontweight', {value: this.value()});\n                                    },\n                                    values: [\n                                        {text: 'Thin (100)', value: '100'},\n                                        {text: 'Extra light (200)', value: '200'},\n                                        {text: 'Light (300)', value: '300'},\n                                        {text: 'Normal (400)', value: '400'},\n                                        {text: 'Medium (500)', value: '500'},\n                                        {text: 'Semi Bold (600)', value: '600'},\n                                        {text: 'Bold (700)', value: '700'},\n                                        {text: 'Extra Bold (800)', value: '800'},\n                                        {text: 'Black (900)', value: '900'}\n                                    ],\n                                    onPostRender: function () {\n\n                                        // add font control separator//\n                                        var fontControl = ed.theme.panel.controlIdLookup['mceu_0'];\n                                        fontControl.on('showMenu', function (e) {\n                                            var items = this.menu.items();\n                                            for (var i in items) {\n                                                var item = items[i];\n\n                                                if (!_.isFunction(item.text)) {\n                                                    continue;\n                                                }\n\n                                                if (item.text().raw.toLowerCase() == 'arial') {\n                                                    item.$el.addClass('first-system-font');\n                                                }\n                                            }\n                                        });\n\n                                        var btn = this;\n                                        ed.on('NodeChange', _.debounce(function (e) {\n                                            var weight = jQuery(e.element || ed.selection.getNode()).css('font-weight');\n                                            if (weight === \"bold\") weight = \"700\";\n                                            if (weight === \"normal\") weight = \"400\";\n                                            btn.value(weight);\n                                        }, 10));\n\n                                        btn.on('show', function (e) {\n                                            ed.theme.panel.getEl().style.display = \"block\";\n                                            e.control.$el.css({top: this.$el.offset().top + 34, left: this.$el.offset().left})\n                                        });\n\n                                        btn.on('showMenu', function () {\n                                            var font = CP_Customizer.preview.getNodeFont(ed.selection.getNode());\n                                            var weights = CP_Customizer.preview.getFontWeights(font);\n                                            for (var i in btn.menu.items()) {\n                                                var item = btn.menu.items()[i];\n\n                                                if (!_.isFunction(item.value)) {\n                                                    continue;\n                                                }\n\n                                                if (weights.indexOf(item.value()) === -1) {\n                                                    item.$el.hide();\n                                                } else {\n                                                    item.$el.show();\n                                                }\n                                            }\n                                        });\n                                    }\n                                });\n\n\n                                ed.addButton('alignment', {\n                                    type: 'listbox',\n                                    text: root.CP_Customizer.translateCompanionString(''),\n                                    icon: true,\n                                    onselect: function (e) {\n                                        ed.formatter.apply('alignment', {value: this.value()});\n                                    },\n                                    values: [\n                                        {\n                                            icon: 'alignleft',\n                                            text: root.CP_Customizer.translateCompanionString(''),\n                                            value: 'left'\n                                        },\n                                        {\n                                            icon: 'aligncenter',\n                                            text: root.CP_Customizer.translateCompanionString(''),\n                                            value: 'center'\n                                        },\n                                        {\n                                            icon: 'alignright',\n                                            text: root.CP_Customizer.translateCompanionString(''),\n                                            value: 'right'\n                                        },\n                                        {\n                                            icon: 'alignjustify',\n                                            text: root.CP_Customizer.translateCompanionString(''),\n                                            value: 'justify'\n                                        }\n                                    ],\n                                    onPostRender: function () {\n                                        var btn = this;\n                                        ed.on('NodeChange', function (e) {\n                                            var textAlign = jQuery(ed.selection.getNode()).css('text-align');\n                                            btn.value(textAlign);\n                                            btn.icon('align' + textAlign);\n\n                                            //Disable text alignment for header elements\n                                            if (jQuery(e.element).parents('.header-wrapper').length)\n                                            {\n                                                btn.$el.hide();\n                                            } else\n                                            {\n                                                btn.$el.show();\n                                            }\n                                        });\n\n                                        btn.on('show', function (e) {\n                                            ed.theme.panel.getEl().style.display = \"block\";\n                                            e.control.$el.css({top: this.$el.offset().top + 34, left: this.$el.offset().left})\n                                            e.control.$el.eq(0).css('min-width', '10px');\n                                        });\n                                    }\n                                });\n\n                                ed.addButton('addwebfont', {\n                                    type: 'button',\n                                    icon: 'insert',\n                                    tooltip: root.CP_Customizer.translateCompanionString(\"Add web font\"),\n                                    onPostRender: function () {\n                                        this.on(\"click\", function () {\n                                            top.wp.customize.control('web_fonts').focus()\n                                        });\n                                    }\n                                });\n                                ed.addButton('font-color-popup', {\n                                    type: \"colorbutton\",\n                                    icon: false,\n\n\n                                    onPostRender: function () {\n                                        var btn = this;\n\n                                        self.jQuery(this.getEl()).spectrum({\n                                            showAlpha: true,\n\n                                            preferredFormat: \"rgb\",\n                                            showInput: true,\n                                            show: function () {\n                                                //console.log(this);\n\n                                                var colorPalette = CP_Customizer.hooks.applyFilters('spectrum_color_palette', []);\n\n\n                                                var color = jQuery(ed.selection.getNode()).css('color');\n                                                var spectrumEl = self.jQuery(btn.getEl());\n\n                                                var container = spectrumEl.spectrum(\"container\");\n                                                spectrumEl.spectrum(\"set\", color);\n\n                                                spectrumEl.spectrum(\"option\", \"showPalette\", colorPalette.length > 0);\n\n                                                if (colorPalette.length > 0) {\n\n                                                    // group colors a 3 per row\n                                                    colorPalette = CP_Customizer.utils.arrayChunk(colorPalette, 3);\n\n                                                    spectrumEl.spectrum(\"option\", \"palette\", colorPalette);\n                                                }\n\n\n                                                var offTop = container.offset().top\n                                                var scrollTop = self.frame().scrollY;\n\n                                                container.css({\n                                                    top: self.jQuery(btn.getEl()).offset().top - scrollTop + 30,\n                                                    \"left\": \"auto\",\n                                                    \"right\": CP_Customizer.preview.frame().innerWidth - jQuery(btn.getEl()).offset().left - 40\n                                                });\n\n                                                self.jQuery(self.jQuery('body')[0].ownerDocument).scroll(function () {\n                                                    var offTop = container.offset().top\n                                                    var scrollTop = self.jQuery('body').scrollTop();\n\n                                                    container.offset({\n                                                        top: self.jQuery(btn.getEl()).offset().top - scrollTop + 30\n                                                    });\n                                                });\n\n                                            },\n                                            change: function (color) {\n                                                var col = color.toRgbString();\n                                                btn.value(col);\n\n                                                ed.selection.moveToBookmark(bm);\n                                                ed.formatter.apply('fontcolor', {value: col});\n                                            }\n                                        });\n\n                                        btn.on(\"click\", function () {\n                                            bm = ed.selection.getBookmark();\n                                        });\n\n                                        ed.on('NodeChange', function (e) {\n                                            var color = jQuery(ed.selection.getNode()).css('color');\n                                            btn.color(color);\n                                            self.jQuery(btn.getEl()).spectrum(\"set\", color);\n                                        });\n\n                                        function onEditorBlur(e) {\n                                            self.jQuery(btn.getEl()).spectrum('hide');\n                                            CP_Customizer.preview.restartObserver();\n                                        }\n\n                                        ed.on('blur', onEditorBlur);\n\n\n                                    }\n                                });\n                                ed.on('focus', function (e) {\n                                    // _.delay(function () {\n                                    //     var editorEL = e.target.theme.panel.getEl(),\n                                    //         node = e.target.bodyElement,\n                                    //         margin = ($(node).width() - $(editorEL).width()) / 2;\n                                    //\n                                    //     $(editorEL).css({\n                                    //         'margin-left': margin\n                                    //     });\n                                    // }, 0);\n                                });\n\n                                updateOnEditorBlur = _.debounce(function (e) {\n                                    _.delay(function () {\n                                        var $node = $(e.target.bodyElement);\n                                        CP_Customizer.preview.markNode($node);\n\n                                        if ($node.is('[data-theme]')) {\n                                            CP_Customizer.preview.jQuery($node).data('was-changed', true);\n                                        }\n                                        CP_Customizer.updateState();\n                                    }, 0);\n                                }, 100);\n\n                                ed.on('blur', updateOnEditorBlur);\n\n                            }\n                        };\n                        root.CP_Customizer.preview.frame().tinymce.init(options);\n                        editor = root.CP_Customizer.preview.frame().tinymce.get(editorID);\n\n                    }\n\n                    return editor;\n                },\n\n                blur: function (overlayOnly) {\n                    var hoverOverlay = CP_Customizer.overlays.hoverOverlay();\n                    var hoveredNode = CP_Customizer.preview.jQuery(hoverOverlay.data().node);\n\n                    // hoverOverlay.deactivateHeatZone();\n\n                    var fakeNode = CP_Customizer.preview.jQuery(\"<p contenteditable='true' style='display: none;' />\");\n\n                    CP_Customizer.overlays.assignNode(hoverOverlay, fakeNode);\n\n                    if (overlayOnly) {\n                        return;\n                    }\n\n                    if (CP_Customizer.preview.getTextElementCUI()) {\n                        CP_Customizer.preview.getTextElementCUI().fire('blur');\n                    }\n\n\n                }\n            },\n\n            overlays: {\n\n\n                addFixedOverlays: function ($startNode) {\n                    var $ = root.CP_Customizer.preview.jQuery();\n\n                    if ($startNode.length > 1) {\n\n                        var self = this;\n                        $startNode.each(function () {\n                            self.addFixedOverlays($(this));\n                        });\n                        return;\n\n                    }\n                    $startNode = $startNode || $('body');\n\n                    if ($startNode.closest('[data-type=\"row\"]').length || $startNode.closest('[data-type=\"column\"]').length) {\n                        return;\n                    }\n\n                    root.CP_Customizer.trigger(root.CP_Customizer.events.ADD_FIXED_OVERLAYS, [$startNode]);\n\n                },\n\n\n                __fixedOverlayOptions: {},\n                registerFixedOverlayOptions: function (name, options) {\n\n                    if (_.isObject(name)) {\n                        _.each(name, function (options, key) {\n                            CP_Customizer.overlays.registerFixedOverlayOptions(key, options);\n                        });\n                    } else {\n\n                        if (!this.__fixedOverlayOptions.hasOwnProperty(name)) {\n                            this.__fixedOverlayOptions[name] = options;\n                        } else {\n                            // console.error(\"Overlay options name '\" + name + \"' already exists\");\n                        }\n                    }\n\n                },\n\n                getOverlayOptionButton: getButtonElement,\n\n                addOptionsToFixedOverlay:\n                    function ($container, type, node, callback) {\n                        var typeOptions = this.__fixedOverlayOptions[type],\n                            $toAppend;\n\n                        typeOptions = CP_Customizer.hooks.applyFilters('section_fixed_overlay_options', _.clone(typeOptions), type);\n\n                        if (!typeOptions) {\n                            console.error('Undefined typeoptions', type, node);\n                            return;\n                        }\n\n                        var jQuery = CP_Customizer.preview.jQuery();\n                        var _node = (typeOptions.nodeOverrider || _.identity)(node);\n                        for (var key in typeOptions) {\n                            var filteredOptions = CP_Customizer.hooks.applyFilters('section_fixed_overlay', typeOptions[key], key);\n                            if (typeOptions.hasOwnProperty(key)) {\n                                switch (key) {\n                                    case 'title':\n                                        $toAppend = getTitleElement(filteredOptions, _node, type);\n                                        if ($toAppend) {\n                                            $container.append($toAppend);\n                                        }\n                                        break;\n                                    case 'items':\n                                        $toAppend = getItemsElements(filteredOptions, _node, type);\n                                        $container.append($toAppend);\n                                        break;\n                                    case 'node_binds':\n                                        var nodeBinds = filteredOptions;\n                                        jQuery.each(nodeBinds, function (bind, callbacks) {\n                                            if (bind === \"hover\") {\n                                                _node.hover(\n                                                    function (event) {\n                                                        callbacks[0].bind(this)(event, jQuery(this).data().overlay);\n                                                    },\n                                                    function (event) {\n                                                        var isNodeRelated = jQuery(this).data().overlay.find(\"*\").addBack().is(event.relatedTarget);\n                                                        if (isNodeRelated) {\n                                                            event.preventDefault();\n                                                            event.stopPropagation();\n                                                            return false;\n                                                        }\n\n                                                        callbacks[1].bind(this)(event, jQuery(this).data().overlay);\n                                                    }\n                                                );\n                                            } else {\n                                                _node.bind(bind, callbacks);\n                                            }\n                                        });\n                                        break;\n                                    case 'toolbar_binds':\n                                        var toolbarBinds = typeOptions[key];\n                                        var overlay = jQuery(node).data().overlay;\n                                        jQuery.each(toolbarBinds, function (bind, callbacks) {\n                                            if (bind === \"hover\") {\n                                                overlay.find('.overlay-toolbar').hover(\n                                                    function (event) {\n                                                        callbacks[0].bind(node)(event, overlay);\n                                                    },\n                                                    function (event) {\n                                                        callbacks[1].bind(node)(event, overlay);\n                                                    }\n                                                );\n                                            } else {\n                                                overlay.bind(bind, callbacks);\n                                            }\n                                        });\n                                        break;\n                                }\n                            }\n                        }\n\n                        if (callback) {\n                            callback(typeOptions);\n                        }\n                    }\n\n                ,\n\n                updateOverlay: function (overlay, node, cover, positionOnly) {\n                    var $ = root.CP_Customizer.preview.jQuery();\n                    node = $(node);\n                    updateControls = !positionOnly;\n\n                    if (!node || !node.length) {\n                        return;\n                    }\n\n\n                    if (updateControls) {\n                        overlay.find('.pen-overlay').css({\n                            width: node.outerWidth(),\n                            height: node.outerHeight(),\n                            'pointer-events': 'all',\n                            'display': 'block'\n                        });\n\n                        overlay.find('.add-element-bubble.visible').removeClass('visible');\n                        overlay.find('.add-element-bubble .expanded').removeClass('expanded');\n\n                        if (node.outerHeight() < 30) {\n                            overlay.find('.pen-overlay').addClass('small');\n                        } else {\n                            overlay.find('.pen-overlay').removeClass('small');\n                        }\n\n\n                        if (node.parent().is('.ui-sortable') && node.siblings(root.CP_Customizer.CONTENT_ELEMENTS).length && node.closest(\".page-content,[data-theme]\").length) {\n                            overlay.find('.move').show();\n                        } else {\n                            overlay.find('.move').hide();\n                        }\n\n\n                        if (!node.is(':visible')) {\n                            overlay.hide();\n                        } else {\n                            overlay.show();\n                        }\n\n                        overlay.find('.add').show();\n                        if (node.closest('[data-add-content]').length) {\n                            value = node.closest('[data-add-content]').attr('data-add-content');\n\n                            if (value === \"false\") {\n                                overlay.find('.add').hide();\n                            }\n                        }\n\n\n                        if (node.closest('[data-type=\"row\"]').length && node.closest('[data-type=\"row\"]').is('[data-custom-items]')) {\n                            overlay.find('.top-container').hide();\n                            overlay.find('[h-align-center]').hide();\n                        } else {\n                            overlay.find('.top-container').show();\n                            overlay.find('[h-align-center]').show();\n                        }\n\n\n                        if (overlay.is('.add-content-overlay')) {\n                            if (node.is('[data-type=\"column\"]') && node.closest('[data-type=row]').length === 0) {\n                                overlay.find('.remove').hide();\n                            } else {\n                                if (node.closest('[data-type=row]').children().length > 1) {\n                                    overlay.find('.remove').show();\n                                } else {\n                                    overlay.find('.remove').hide();\n                                }\n                            }\n                        }\n\n                        if (overlay.is('.node-hover-overlay')) {\n                            if (node.siblings().length === 0) {\n                                overlay.find('.remove').hide();\n                            } else {\n                                if (node.is(root.CP_Customizer.CONTENT_ELEMENTS)) {\n                                    overlay.find('.remove').show();\n                                } else {\n                                    overlay.find('.remove').hide();\n                                }\n                            }\n                        }\n\n                        if (overlay.is('.item-hover-overlay')) {\n                            if (node.closest('[data-type=row]').children().length > 1) {\n                                overlay.find('.remove').show();\n                            } else {\n                                overlay.find('.remove').hide();\n                            }\n                        }\n\n                    }\n\n                    var bounds = node[0].getBoundingClientRect();\n                    var scrollTop = root.CP_Customizer.preview.frame().pageYOffset;\n                    var scrollLeft = root.CP_Customizer.preview.frame().pageXOffset;\n                    overlay.css({\n                        left: (parseInt(bounds.left) + scrollLeft) + \"px\",\n                        top: (parseInt(bounds.top) + scrollTop) + \"px\"\n                    });\n\n                    overlay.css({\n                        width: node.outerWidth(),\n                        'position': 'absolute'\n                    });\n\n                    if (!cover) {\n                        overlay.css({\n                            height: 'auto',\n                            'background-color': ''\n                        });\n                    }\n\n                    overlay.children('.overlay-left, .overlay-right').css({\n                        height: node.outerHeight(),\n                        width: '0px'\n                    });\n                    overlay.children('.overlay-right').css({\n                        left: node.outerWidth() - 1,\n                        width: '0px'\n                    });\n                    overlay.children('.overlay-top, .overlay-bottom').css({\n                        height: '0px',\n                        width: node.outerWidth()\n                    });\n                    overlay.children('.overlay-bottom').css({\n                        top: node.outerHeight()\n                    });\n\n                    overlay.children('[align-bottom]').each(function () {\n                        $(this).css({\n                            top: node.outerHeight() - 5\n                        });\n                    });\n\n                    overlay.children('[align-top]').css({\n                        top: 0\n                    });\n\n                    overlay.children('[h-align-center]').each(function () {\n                        $(this).css({\n                            left: (node.outerWidth() - $(this).outerWidth()) / 2\n                        });\n                    });\n\n                },\n\n\n                updateAllOverlays: function (event) {\n                    var updateOnlySections = Array.from(arguments).length === 0;\n                    var update = function () {\n                        var $ = CP_Customizer.preview.jQuery();\n                        this.overlaysContainer.children().each(function () {\n                            var isSection = $(this).is('.section-overlay');\n\n                            if (updateOnlySections && !isSection) {\n                                return;\n                            }\n\n                            var node = $(this).data('node');\n                            if (node) {\n\n\n                                root.CP_Customizer.overlays.updateOverlay($(this), $(node), false, true);\n\n                                var isScrollEvent = event && event.type == 'scroll';\n\n                                if ($(this).is('.heatzone') && !isScrollEvent) {\n                                    $(this).removeClass('heatzone');\n                                }\n                                if (event === true) {\n                                    $(this).hide();\n                                }\n                            }\n                        });\n                    }.bind({\n                        overlaysContainer: root.CP_Customizer.overlays.overlaysContainer()\n                    });\n\n                    update();\n                    return true;\n                },\n\n                overlaysContainer: function () {\n                    var overlaysContainer = CP_Customizer.preview.find('#cp-overlays');\n\n                    if (!overlaysContainer.length) {\n                        overlaysContainer = CP_Customizer.preview.jQuery()('<div id=\"cp-overlays\"></div>');\n                        CP_Customizer.preview.find('body').append(overlaysContainer);\n                    }\n\n                    return overlaysContainer;\n                },\n\n                hoverOverlay: function () {\n                    var $ = root.CP_Customizer.preview.jQuery();\n                    var hoverOverlay = $('[data-overlay=\"cp-hoveroverlay\"]');\n\n                    if (hoverOverlay.length) {\n                        return hoverOverlay;\n                    }\n\n                    hoverOverlay = $('<div data-overlay=\"cp-hoveroverlay\" class=\"node-hover-overlay\"><div class=\"pen-overlay\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 20 20\"><path d=\"M13.89 3.39l2.71 2.72c.46.46.42 1.24.03 1.64l-8.01 8.02-5.56 1.16 1.16-5.58s7.6-7.63 7.99-8.03c.39-.39 1.22-.39 1.68.07zm-2.73 2.79l-5.59 5.61 1.11 1.11 5.54-5.65zm-2.97 8.23l5.58-5.6-1.07-1.08-5.59 5.6z\"></path></svg></div><span title=\"' + root.CP_Customizer.translateCompanionString(\"Move element\") + '\" class=\"move\"></span><span title=\"' + root.CP_Customizer.translateCompanionString(\"Delete element\") + '\" class=\" remove\"></span><div class=\"overlay-top overlay-border\"></div><div class=\"overlay-left overlay-border\"></div><div class=\"overlay-right overlay-border\"></div><div class=\"overlay-bottom overlay-border\"></div></div>');\n\n                    root.CP_Customizer.overlays.overlaysContainer().append(hoverOverlay);\n                    hoverOverlay.hide();\n\n                    hoverOverlay.find('.remove').click(function () {\n                        root.CP_Customizer.preview.removeNode($(hoverOverlay.data('node')));\n                        hoverOverlay.hide();\n                    });\n\n                    hoverOverlay.find('.pen-overlay').unbind('click').click(function (event) {\n                        var $node = $(hoverOverlay.data('node'));\n\n                        if ($node.is('[data-focus-control]')) {\n                            var setting = wp.customize($node.attr('data-focus-control'));\n                            var control = setting ? setting.findControls()[0] : null;\n\n                            if (control) {\n                                control.focus();\n                                if (control.container.closest('.customizer-right-section').length) {\n                                    var sidebarID = control.container.closest('.customizer-right-section').attr('id').replace('-popup', '');\n                                    jQuery('[data-sidebar-container=\"' + sidebarID + '\"]').click();\n                                    // control.container.closest('.customizer-right-section').addClass('active');\n                                }\n                            }\n\n                            return;\n                        }\n\n                        if ($node.is('[data-widgets-area]')) {\n                            root.wp.customize.section('sidebar-widgets-' + $node.attr('data-widgets-area')).focus();\n                            return;\n                        }\n\n                        if ($node.is('hr')) {\n                            return;\n                        }\n\n                        if ($node.is('[data-content-shortcode]')) {\n                            var shortcodeData = CP_Customizer.parseShortcode($node.attr('data-content-shortcode'));\n                            CP_Customizer.hooks.doAction('shortcode_edit', $node, shortcodeData);\n                            CP_Customizer.hooks.doAction('shortcode_edit_' + shortcodeData.tag, $node, shortcodeData);\n                            return;\n                        }\n\n                        if (!$node.data('container-editable')) {\n                            $node.off();\n                            $(this).hide();\n                        }\n\n                        if ($node.is('[data-content-item-container=\"true\"]')) {\n                            $node = $node.children().eq(0);\n                        }\n\n                        $node.click();\n                        $node.data('cpFocused', true);\n\n                        if ($node.is(root.CP_Customizer.TEXT_ELEMENTS)) {\n                            $node.focus();\n\n                            _.delay(function () {\n                                root.CP_Customizer.preview.placeCursorAtEnd($node[0]);\n                            }, 5);\n\n                            CP_Customizer.hooks.doAction('text_element_clicked', $node);\n\n                            hoverOverlay.activateHeatZone();\n                        } else {\n                            CP_Customizer.hooks.doAction('element_clicked', $node);\n                        }\n\n                    });\n\n                    function findCenter($, el) {\n                        el = $(el);\n                        var o = el.offset();\n                        return {\n                            x: o.left + el.outerWidth() / 2,\n                            y: o.top + el.outerHeight() / 2\n                        };\n                    }\n\n                    function triggerDrag(el, ev) {\n                        var target = el,\n                            $ = root.CP_Customizer.preview.jQuery(),\n                            frame = root.CP_Customizer.preview.frame();\n\n                        var self = this,\n                            center = findCenter($, target),\n                            options = {},\n                            x = Math.floor(center.x),\n                            y = Math.floor(center.y),\n                            dx = options.dx || 0,\n                            dy = options.dy || 0;\n                        var coord = {\n                            clientX: x,\n                            clientY: y\n                        };\n\n                        var type = \"mousedown\";\n\n                        var e = $.extend({\n                            bubbles: true,\n                            cancelable: (type != \"mousemove\"),\n                            view: frame,\n                            detail: 0,\n                            screenX: 0,\n                            screenY: 0,\n                            clientX: 0,\n                            clientY: 0,\n                            ctrlKey: false,\n                            altKey: false,\n                            shiftKey: false,\n                            metaKey: false,\n                            button: 0,\n                            relatedTarget: el\n                        }, coord);\n\n                        // var relatedTarget = $(el).parent().data('node');\n\n                        var evt = document.createEvent(\"MouseEvents\");\n                        evt.initMouseEvent(type, e.bubbles, e.cancelable, e.view, e.detail,\n                            e.screenX, e.screenY, ev.clientX, ev.clientY,\n                            e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n                            e.button, null);\n\n                        el.dispatchEvent(evt);\n                    }\n\n\n                    var moveHandlerCallback = function ($handle, event) {\n\n                        if (event.which !== 1) {\n                            return;\n                        }\n\n                        var overlay = $handle.closest('.node-hover-overlay');\n\n                        var $node = $(hoverOverlay.data('node'));\n\n                        if ($node.siblings().length === 0) {\n                            return;\n                        }\n\n                        $node.blur();\n\n                        if ($node.data('reikidragging')) {\n                            overlay.attr('is-dragging', false);\n                            $node.data('reikidragging', false);\n                            return;\n                        }\n\n                        var $first = $node.parents('.ui-sortable').first();\n                        if ($first.data(\"ui-sortable\")) {\n                            $first.sortable('enable');\n                        }\n\n                        $node.data('reikidragging', true);\n                        overlay.attr('is-dragging', true);\n\n                        $('[contenteditable=\"true\"]').attr('contenteditable', false);\n                        $('[contenteditable=\"true\"]').blur();\n                        triggerDrag($node[0], event);\n                        root.CP_Customizer.isSorting = true;\n\n                        root.CP_Customizer.preview.hideTextElementCUI();\n                    };\n\n\n                    hoverOverlay.find('.move').off('mousedown.cp').on('mousedown.cp', function (event) {\n                        _(moveHandlerCallback).delay(50, $(this), event);\n                    });\n\n\n                    hoverOverlay.find('.move').off('mouseup.cp').on('mouseup.cp', function (event) {\n                        var overlay = $(this).closest('.node-hover-overlay');\n                        overlay.attr('is-dragging', false);\n                    });\n\n                    hoverOverlay.activateHeatZone = function () {\n                        var $this = $(this);\n                        $this.addClass('heatzone');\n\n                        var top = $this.find('.overlay-top'),\n                            left = $this.find('.overlay-left'),\n                            right = $this.find('.overlay-right'),\n                            bottom = $this.find('.overlay-bottom');\n\n                        if (top.find('.zone').length === 0) {\n                            top.append('<div class=\"zone\" />');\n                        }\n\n                        if (left.find('.zone').length === 0) {\n                            left.append('<div class=\"zone\" />');\n                        }\n\n                        if (right.find('.zone').length === 0) {\n                            right.append('<div class=\"zone\" />');\n                        }\n\n                        if (bottom.find('.zone').length === 0) {\n                            bottom.append('<div class=\"zone\" />');\n                        }\n\n                        var node = $this.data('node');\n                        var $node = CP_Customizer.preview.jQuery(node);\n\n                        var nodeRect = {\n                            top: $node.offset().top,\n                            bottom: $node.offset().top + node.offsetHeight,\n                            height: node.offsetHeight,\n                            left: node.getBoundingClientRect().left,\n                            right: node.getBoundingClientRect().left + node.offsetWidth,\n                            width: node.offsetWidth\n                        };\n\n                        var docHeight = $(node).closest('body').height();\n                        var docWidth = Math.min(CP_Customizer.preview.frame().innerWidth, CP_Customizer.preview.jQuery('html').width());\n\n\n                        top.find('.zone').css({\n                                height: nodeRect.top,\n                                width: docWidth,\n                                left: -1 * nodeRect.left\n                            }\n                        );\n\n                        bottom.find('.zone').css({\n                                height: docHeight - nodeRect.bottom,\n                                width: docWidth,\n                                left: -1 * nodeRect.left,\n                                top: '-1px'\n                            }\n                        );\n\n                        left.find('.zone').css({\n                                height: nodeRect.height,\n                                width: nodeRect.left\n                                //top: -1 * nodeRect.top - nodeRect.height / 2\n                            }\n                        );\n\n                        right.find('.zone').css({\n                                height: nodeRect.height,\n                                width: docWidth - nodeRect.right\n                                // top: -1 * nodeRect.top - nodeRect.height / 2\n                            }\n                        );\n\n                        hoverOverlay.off('click.zone').on('click.zone', '.zone', function (event) {\n                            hoverOverlay.removeClass('heatzone');\n\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            var x = event.clientX,\n                                y = event.clientY,\n                                elementMouseIsOver = CP_Customizer.preview.frame().document.elementFromPoint(x, y);\n\n                            //\n                            hoverOverlay.addClass('heatzone');\n                            CP_Customizer.preview.blur();\n                            _.delay(function () {\n                                hoverOverlay.removeClass('heatzone');\n                                CP_Customizer.preview.jQuery(elementMouseIsOver).trigger('mouseover');\n                            }, 10);\n                            return false;\n                        });\n                    };\n\n                    // hoverOverlay.deactivateHeatZone = function () {\n                    //     hoverOverlay.removeClass('heatzone');\n                    // };\n\n                    return hoverOverlay;\n\n                },\n\n                rowItemHoverOverlay: function () {\n                    var $ = root.CP_Customizer.preview.jQuery();\n                    var itemHoverOverlay = $('[data-overlay=\"cp-item-hover-overlay\"]');\n\n                    if (itemHoverOverlay.length) {\n                        return itemHoverOverlay;\n                    }\n\n                    itemHoverOverlay = $('<div data-overlay=\"cp-item-hover-overlay\" class=\"item-hover-overlay\"> <div h-align-right title=\"' + root.CP_Customizer.translateCompanionString(\"Delete item\") + '\" class=\"remove\"></div> </div>');\n\n                    root.CP_Customizer.overlays.overlaysContainer().append(itemHoverOverlay);\n\n                    itemHoverOverlay.hide();\n\n                    itemHoverOverlay.find('.remove').click(function () {\n                        var node = $(itemHoverOverlay.data('node'));\n                        root.CP_Customizer.preview.removeNode(node);\n                        root.CP_Customizer.hooks.doAction('section_list_item_refresh');\n                        itemHoverOverlay.hide();\n                    });\n\n                    return itemHoverOverlay;\n                },\n\n\n                addOverlay: function () {\n\n                    var $ = root.CP_Customizer.preview.jQuery();\n                    var addOverlay = $('[data-overlay=\"cp-addoverlay\"]');\n\n                    if (addOverlay.length) {\n                        return addOverlay;\n                    }\n\n                    addOverlay = $('<div data-overlay=\"cp-addoverlay\" class=\"add-content-overlay\"><div class=\"buttons\" align-bottom h-align-center><div class=\"add\" title=\"' + root.CP_Customizer.translateCompanionString(\"Add element\") + '\">' + root.CP_Customizer.translateCompanionString(\"Add element\") + '</div></div></div>');\n                    root.CP_Customizer.overlays.overlaysContainer().append(addOverlay);\n                    addOverlay.hide();\n\n                    //addOverlay.find('.add').prepend('<div class=\"add-element-bubble\"><div class=\"elements-container\"></div><i class=\"element-bubble-close\"></i></div>');\n                    // let's add the close button in a future update\n                    addOverlay.find('.add').prepend('<div class=\"add-element-bubble\"><div class=\"elements-container\"></div></div>');\n\n\n                    addOverlay.find('.add').click(function (event) {\n                        addOverlay.find('.add').find('.add-element-bubble').toggleClass('visible');\n                    });\n\n                    root.CP_Customizer.content.addContentItemsTo(addOverlay.find('.elements-container'));\n\n                    addOverlay.find('.elements-container').on('cp-insert-content-item', function (event, type, insertHandler) {\n                        event.preventDefault();\n                        var $node = $(addOverlay.data('node'));\n                        var index = $node.children().length;\n\n                        insertHandler(type, $node, index, after);\n\n                        function after($node) {\n                            root.CP_Customizer.preview.decorateElements($node);\n                            root.CP_Customizer.overlays.updateOverlay(addOverlay, $(addOverlay.data('node')));\n                            CP_Customizer.renderNodeShortcodes($node);\n                            // CP_Customizer.hooks.doAction('after_node_insert', $node);\n                        }\n                    });\n\n                    return addOverlay;\n                },\n\n                assignNode: function (overlay, node, cover) {\n                    var $ = root.CP_Customizer.preview.jQuery();\n                    if (overlay.attr('is-dragging') && overlay.attr('is-dragging') === \"true\") {\n                        return;\n                    }\n                    if ($(overlay.data('node')).is(node)) {\n                        return;\n                    } else {\n                        /*if (overlay.data('node') && overlay.data('node').ownerDocument.activeElement == overlay.data('node')) {\n                            debugger;\n                        $(overlay.data('node')).blur();\n                        }*/\n                    }\n\n                    overlay.data('node', $(node)[0]);\n\n                    function updateOverlay() {\n                        root.CP_Customizer.overlays.updateOverlay(overlay, $(node), cover);\n                    }\n\n                    overlay.on('reiki.update_overlays', '*', function (event) {\n                        setTimeout(updateOverlay, 0);\n                    });\n\n                    root.CP_Customizer.preview.hideTextElementCUI();\n                    updateOverlay();\n                },\n\n                hideMovableOverlays: function () {\n                    CP_Customizer.overlays.addOverlay().hide();\n                    CP_Customizer.overlays.hoverOverlay().hide();\n                    CP_Customizer.overlays.rowItemHoverOverlay().hide()\n                }\n\n            }\n            ,\n\n            content: {\n                __registeredItems: {\n                    'link':\n                        {\n                            icon: 'mdi-link-variant',\n                            tooltip: translateCompanionString('link'),\n                            data:\n                            '<a class=\"link\" data-cpid=\"new\" data-container-editable=\"true\" data-content-code-editable href=\"#\">' + translateCompanionString('new link') + '</a>',\n                            'after': function ($item) {\n                                $item.unbind('click').click(function (event) {\n                                    event.preventDefault();\n                                    event.stopImmediatePropagation();\n                                    event.stopPropagation();\n\n                                    if ($(this).is('[data-container-editable]') || $(this).is('[data-type=group]')) {\n                                        CP_Customizer.preview.editContainerData.apply(this);\n                                    }\n\n                                    return false;\n                                });\n                            }\n                        }\n                    ,\n                    'button':\n                        {\n                            icon: 'mdi-open-in-new',\n                            tooltip: translateCompanionString('button'),\n                            data:\n                            '<a data-cpid=\"new\" data-container-editable=\"true\" data-content-code-editable class=\"button blue\" href=\"#\">' + translateCompanionString('new button') + '</a>',\n                            'after': function ($item) {\n                                $item.unbind('click').click(function (event) {\n                                    event.preventDefault();\n                                    event.stopImmediatePropagation();\n                                    event.stopPropagation();\n\n                                    if ($(this).is('[data-container-editable]') || $(this).is('[data-type=group]')) {\n                                        CP_Customizer.preview.editContainerData.apply(this);\n                                    }\n\n                                    return false;\n                                });\n                            }\n                        }\n                    ,\n                    'heading':\n                        {\n                            icon: 'mdi-format-header-pound larger',\n                            tooltip: translateCompanionString('heading'),\n                            items:\n                                function () {\n                                    var result = {};\n                                    for (var i = 1; i <= 6; i++) {\n                                        result['h' + i] = {\n                                            label: \"H\" + i,\n                                            data: '<h' + i + '>' + translateCompanionString(\"Heading\") + ' ' + i + '</h' + i + '>',\n                                            tooltip: translateCompanionString('Heading') + ' ' + i\n                                        };\n                                    }\n\n                                    return result;\n                                }\n                        }\n                    ,\n\n                    'lead':\n                        {\n                            icon: 'mdi-format-align-left',\n                            tooltip: translateCompanionString('lead'),\n                            data:\n                                '<p data-cpid=\"new\" class=\"lead\" data-content-editable=\"true\" contenteditable=\"true\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>'\n                        }\n                    ,\n\n                    'paragraph':\n                        {\n                            icon: 'mdi-format-paragraph larger',\n                            tooltip: translateCompanionString('paragraph'),\n                            data:\n                                '<p data-cpid=\"new\" data-content-editable=\"true\" contenteditable=\"true\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>'\n                        }\n                    ,\n\n                    'image':\n                        {\n                            icon: 'mdi-image-area big',\n                            tooltip: translateCompanionString('image'),\n                            data:\n                                '<img data-cpid=\"new\" class=\"custom-image\" data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\" src=\"#\"/>'\n                        }\n                    // ,\n\n                    // 'icon':\n                    //     {\n                    //         icon: 'mdi-adjust',\n                    //         items:\n                    //             function () {\n                    //                 var result = {};\n                    //                 for (var i = 1; i <= 6; i++) {\n                    //                     result['mdi' + i] = {\n                    //                         icon: 'mdi-flag mdi' + i,\n                    //                         data: '<i class=\"mdi cp-icon mdi' + i + ' mdi-adjust\"></i>',\n                    //                         tooltip: \"Font Icon \" + i\n                    //                     };\n                    //                 }\n                    //\n                    //                 return result;\n                    //             }\n                    //     }\n                    // ,\n                    // 'separator':\n                    //     {\n                    //         'icon':\n                    //             \"mdi-adjust\",\n                    //         data:\n                    //             '<div class=\"spacer\" data-type=\"group\"><span class=\"mdi before\"></span><i data-content-code-editable=\"true\" class=\"mdi mdi-adjust\"></i><span class=\"mdi after\"></span></div>'\n                    //     }\n                },\n\n                registerItem: function (data) {\n\n                    if (data) {\n                        for (var key in data) {\n                            if (data[key].contentElementSelector) {\n                                CP_Customizer.addContentElementsSelectors(data[key].contentElementSelector);\n                            }\n                        }\n                    }\n\n                    _.extend(this.__registeredItems, data);\n                },\n\n                getItemData: function (type) {\n                    types = type.split('.');\n                    var start = this.__registeredItems;\n\n                    for (var i = 0; i < types.length; i++) {\n                        var _type = types[i];\n\n                        if (i + 1 < types.length) {\n                            var _items = start[_type].items;\n                            if (_(_items).isFunction()) {\n                                _items = _items.call();\n\n                            }\n                            start = _items;\n                        } else {\n                            return start[_type].data;\n                        }\n                    }\n                },\n\n                getItemAfter: function (type) {\n                    types = type.split('.');\n                    var start = this.__registeredItems;\n\n                    for (var i = 0; i < types.length; i++) {\n                        var _type = types[i];\n\n                        if (i + 1 < types.length) {\n                            var _items = start[_type].items;\n                            if (_(_items).isFunction()) {\n                                _items = _items.call();\n\n                            }\n                            start = _items;\n                        } else {\n                            return start[_type].after;\n                        }\n                    }\n                },\n\n                getContentItems: function (data, subitems, parentId) {\n                    data = data || this.__registeredItems;\n                    subitems = subitems || false;\n                    var self = this;\n                    var $result = $(\"<div />\");\n                    $.each(data, function (id, option) {\n                        var title = option.toolip || option.tooltip || id; // || for old typo :D\n                        var idAttr = parentId ? parentId + \".\" + id : id;\n                        var _item = $('<i class=\"mdi ' + (option.icon || \"\") + '\" title=\"' + title + '\" data-' + (option.items ? \"parent\" : \"content\") + '-id=\"' + idAttr + '\"></i>');\n\n                        if (option.label) {\n                            _item.append('<span class=\"item-label\">' + option.label + '</span>');\n                        }\n\n                        if (option.items) {\n\n                            var _items = option.items;\n\n                            if (_(_items).isFunction()) {\n                                _items = option.items.call();\n                            }\n\n                            var subitemsContainer = $('<div class=\"subitems-container\" />');\n                            subitemsContainer.append(self.getContentItems(_items, true, idAttr));\n                            _item.append(subitemsContainer);\n                        }\n\n                        $result.append(_item);\n                    });\n\n                    return $result.html();\n\n                },\n\n\n                addContentItemsTo: function ($container) {\n                    $container.append(CP_Customizer.content.getContentItems());\n                    var self = this;\n                    $container.off('click.cp-new-content').on('click.cp-new-content', 'i.mdi[data-content-id]', function (event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        var node_type = $(this).data('content-id');\n                        $container.trigger('cp-insert-content-item', [node_type, self.insertNewContent]);\n                    });\n\n                    $container.off('click.cp-new-parent').on('click.cp-new-parent', 'i.mdi[data-parent-id]', function (event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        $(this).toggleClass('expanded');\n                        $(this).siblings().removeClass('expanded');\n                    });\n                },\n\n                insertNewContent: function (type, $container, index, after) {\n                    var $ = CP_Customizer.preview.jQuery();\n                    var $new = $(CP_Customizer.content.getItemData(type));\n                    var itemAfter = CP_Customizer.content.getItemAfter(type);\n                    CP_Customizer.preview.insertNode($new, $container, index);\n                    setTimeout(function () {\n                        $new.trigger('click');\n                        if (_(after).isFunction()) {\n                            after($new);\n\n\n                        }\n                        if (_.isFunction(itemAfter)) {\n                            itemAfter($new);\n                        }\n                    }, 100);\n                }\n            }\n\n        }\n    ;\n\n    CP_Customizer = _.extend(CP_Customizer, {\n        closePopUps: root.Materialis.closePopUps,\n        popUp: root.Materialis.popUp,\n        openRightSidebar: root.Materialis.openRightSidebar,\n        hideRightSidebar: root.Materialis.hideRightSidebar,\n\n    });\n    top.CP_Customizer = root.CP_Customizer = CP_Customizer;\n\n\n    var previewLoadedMessageCallback = function (event) {\n        if (event.data === 'cloudpress_update_customizer') {\n\n            if (root.__isCPChangesetPreview) {\n                CP_Customizer.preview.jQuery('html').addClass('cp__changeset__preview');\n                return;\n            }\n\n            setTimeout(function () {\n                CP_Customizer.hideLoader();\n                CP_Customizer.preview.frame().wp.customize.preview.bind('loading-initiated', function () {\n                    CP_Customizer.showLoader();\n                    CP_Customizer.trigger('PREVIEW_LOADING_START');\n                });\n\n            }, 300);\n\n            _(CP_Customizer).extend(window.cpCustomizerGlobal);\n            CP_Customizer.trigger('PREVIEW_LOADED');\n\n            CP_Customizer.preview.addContentBinds();\n\n            CP_Customizer.preview.jQuery('a').on('click', function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            });\n\n            CP_Customizer.preview.decorateMods();\n            CP_Customizer.preview.decorateElements();\n\n\n            // make the save button use CP_Customizer save wrapper\n            $(root.document).find('input#save').unbind('click').bind('click', function (event) {\n\n                event.preventDefault();\n                event.stopPropagation();\n                root.CP_Customizer.save();\n            });\n\n        }\n    };\n\n    root.addEventListener('message', previewLoadedMessageCallback);\n\n\n    $(root).bind('keydown', function (event) {\n        if (event.ctrlKey || event.metaKey) {\n            var key = String.fromCharCode(event.which).toLowerCase();\n            if (key === \"s\") {\n                event.preventDefault();\n                event.stopPropagation();\n                root.CP_Customizer.save();\n            }\n        }\n    });\n\n    $(root.document).find('input#save').unbind('click').bind('click', function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        root.CP_Customizer.save();\n    });\n\n\n    $(root.document).ready(function () {\n\n        for (var i = 0; i < CP_Customizer.__modules.length; i++) {\n            var callback = CP_Customizer.__modules[i];\n            callback(CP_Customizer);\n        }\n\n        CP_Customizer.__modulesLoaded = true;\n        CP_Customizer.trigger('DOCUMENT_READY');\n    });\n\n    // UTILS\n\n    function getTitleElement(name, node, category) {\n        var label = \"\";\n        if (typeof name === \"function\") {\n            label = name(node);\n        } else {\n            if (!_.isUndefined(name)) {\n                label = name;\n            } else {\n                return \"\";\n            }\n        }\n\n        return \"<span data-category=\\\"\" + category + \"\\\" class=\\\"cog-item title\\\">\" + label + \"</span>\";\n    }\n\n    function getButtonElement(itemData, node, category) {\n        var template = '<span data-category=\"' + category + '\" class=\"cog-item ' + (itemData.classes || \"\") + '\"></span>';\n\n        var $button = $(template).attr({\n            'data-name': (itemData.name || 'button')\n        });\n        $button.text(itemData.title || 'Button');\n\n\n        // key is event handler\n        $.each(itemData, function (key, data) {\n            if (key === 'on_hover') {\n                var callbackIn = function () {\n                    data[0].call($button, node);\n                };\n                var callbackOut = function () {\n\n                    data[1].call($button, node);\n                };\n                $button.hover(callbackIn, callbackOut);\n\n            } else if (key.indexOf('on_') === 0) {\n                var ev = key.replace('on_', '');\n                var callback = function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    data.call($button, node);\n                };\n                $button.bind(ev, callback);\n            }\n        });\n\n        return $button;\n    }\n\n    function getItemsElements(itemsArray, node, category) {\n        result = [];\n        for (var i = 0; i < itemsArray.length; i++) {\n            var itemData = itemsArray[i];\n            var $item = getButtonElement(itemData, node, category);\n            result.push($item);\n        }\n        return result;\n    }\n\n})(jQuery, window);\n","(function ($) {\n\n    // source: https://github.com/andymantell/node-wpautop\n    function _autop_newline_preservation_helper(matches) {\n        return matches[0].replace(\"\\n\", \"<WPPreserveNewline />\");\n    };\n\n    function wpautop(pee, br) {\n        if (typeof(br) === 'undefined') {\n            br = true;\n        }\n\n        var pre_tags = {};\n        if (pee.trim() === '') {\n            return '';\n        }\n\n        pee = pee + \"\\n\"; // just to make things a little easier, pad the end\n        if (pee.indexOf('<pre') > -1) {\n            var pee_parts = pee.split('</pre>');\n            var last_pee = pee_parts.pop();\n            pee = '';\n            pee_parts.forEach(function (pee_part, index) {\n                var start = pee_part.indexOf('<pre');\n\n                // Malformed html?\n                if (start === -1) {\n                    pee += pee_part;\n                    return;\n                }\n\n                var name = \"<pre wp-pre-tag-\" + index + \"></pre>\";\n                pre_tags[name] = pee_part.substr(start) + '</pre>';\n                pee += pee_part.substr(0, start) + name;\n\n            });\n\n            pee += last_pee;\n        }\n\n        pee = pee.replace(/<br \\/>\\s*<br \\/>/, \"\\n\\n\");\n\n        // Space things out a little\n        var allblocks = '(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';\n        pee = pee.replace(new RegExp('(<' + allblocks + '[^>]*>)', 'gmi'), \"\\n$1\");\n        pee = pee.replace(new RegExp('(</' + allblocks + '>)', 'gmi'), \"$1\\n\\n\");\n        pee = pee.replace(/\\r\\n|\\r/, \"\\n\"); // cross-platform newlines\n\n        if (pee.indexOf('<option') > -1) {\n            // no P/BR around option\n            pee = pee.replace(/\\s*<option'/gmi, '<option');\n            pee = pee.replace(/<\\/option>\\s*/gmi, '</option>');\n        }\n\n        if (pee.indexOf('</object>') > -1) {\n            // no P/BR around param and embed\n            pee = pee.replace(/(<object[^>]*>)\\s*/gmi, '$1');\n            pee = pee.replace(/\\s*<\\/object>/gmi, '</object>');\n            pee = pee.replace(/\\s*(<\\/?(?:param|embed)[^>]*>)\\s*/gmi, '$1');\n        }\n\n        if (pee.indexOf('<source') > -1 || pee.indexOf('<track') > -1) {\n            // no P/BR around source and track\n            pee = pee.replace(/([<\\[](?:audio|video)[^>\\]]*[>\\]])\\s*/gmi, '$1');\n            pee = pee.replace(/\\s*([<\\[]\\/(?:audio|video)[>\\]])/gmi, '$1');\n            pee = pee.replace(/\\s*(<(?:source|track)[^>]*>)\\s*/gmi, '$1');\n        }\n\n        pee = pee.replace(/\\n\\n+/gmi, \"\\n\\n\"); // take care of duplicates\n\n        // make paragraphs, including one at the end\n        var pees = pee.split(/\\n\\s*\\n/);\n        pee = '';\n        pees.forEach(function (tinkle) {\n            pee += '<p>' + tinkle.replace(/^\\s+|\\s+$/g, '') + \"</p>\\n\";\n        });\n\n        pee = pee.replace(/<p>\\s*<\\/p>/gmi, ''); // under certain strange conditions it could create a P of entirely whitespace\n        pee = pee.replace(/<p>([^<]+)<\\/(div|address|form)>/gmi, \"<p>$1</p></$2>\");\n        pee = pee.replace(new RegExp('<p>\\s*(</?' + allblocks + '[^>]*>)\\s*</p>', 'gmi'), \"$1\", pee); // don't pee all over a tag\n        pee = pee.replace(/<p>(<li.+?)<\\/p>/gmi, \"$1\"); // problem with nested lists\n        pee = pee.replace(/<p><blockquote([^>]*)>/gmi, \"<blockquote$1><p>\");\n        pee = pee.replace(/<\\/blockquote><\\/p>/gmi, '</p></blockquote>');\n        pee = pee.replace(new RegExp('<p>\\s*(</?' + allblocks + '[^>]*>)', 'gmi'), \"$1\");\n        pee = pee.replace(new RegExp('(</?' + allblocks + '[^>]*>)\\s*</p>', 'gmi'), \"$1\");\n\n        if (br) {\n            pee = pee.replace(/<(script|style)(?:.|\\n)*?<\\/\\\\1>/gmi, _autop_newline_preservation_helper); // /s modifier from php PCRE regexp replaced with (?:.|\\n)\n            pee = pee.replace(/(<br \\/>)?\\s*\\n/gmi, \"<br />\\n\"); // optionally make line breaks\n            pee = pee.replace('<WPPreserveNewline />', \"\\n\");\n        }\n\n        pee = pee.replace(new RegExp('(</?' + allblocks + '[^>]*>)\\s*<br />', 'gmi'), \"$1\");\n        pee = pee.replace(/<br \\/>(\\s*<\\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^>]*>)/gmi, '$1');\n        pee = pee.replace(/\\n<\\/p>$/gmi, '</p>');\n\n        if (Object.keys(pre_tags).length) {\n            pee = pee.replace(new RegExp(Object.keys(pre_tags).join('|'), \"gi\"), function (matched) {\n                return pre_tags[matched];\n            });\n        }\n\n        return pee;\n    };\n\n    CP_Customizer.addModule(function (CP_Customizer) {\n        CP_Customizer.utils = CP_Customizer.utils || {};\n\n        CP_Customizer.utils.wpautop = function (value) {\n            value = wpautop(value);\n\n            if (jQuery(value).length === 1) {\n                return jQuery(value).html();\n            }\n\n            return value;\n\n        };\n\n\n        CP_Customizer.utils.phpTrim = function (str, charlist) {\n\n            var whitespace = [\n                ' ',\n                '\\n',\n                '\\r',\n                '\\t',\n                '\\f',\n                '\\x0b',\n                '\\xa0',\n                '\\u2000',\n                '\\u2001',\n                '\\u2002',\n                '\\u2003',\n                '\\u2004',\n                '\\u2005',\n                '\\u2006',\n                '\\u2007',\n                '\\u2008',\n                '\\u2009',\n                '\\u200a',\n                '\\u200b',\n                '\\u2028',\n                '\\u2029',\n                '\\u3000'\n            ].join('');\n\n            var l = 0;\n            var i = 0;\n            str += '';\n\n            if (charlist) {\n                whitespace = (charlist + '').replace(/([[\\]().?/*{}+$^:])/g, '$1')\n            }\n            l = str.length\n            for (i = 0; i < l; i++) {\n                if (whitespace.indexOf(str.charAt(i)) === -1) {\n                    str = str.substring(i)\n                    break\n                }\n            }\n            l = str.length\n            for (i = l - 1; i >= 0; i--) {\n                if (whitespace.indexOf(str.charAt(i)) === -1) {\n                    str = str.substring(0, i + 1)\n                    break\n                }\n            }\n            return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\n        };\n\n        CP_Customizer.utils.normalizeBackgroundImageValue = function (value) {\n            value = value.replace(/url\\((.*)\\)/, \"$1\");\n            return CP_Customizer.utils.phpTrim(value, \"\\\"'\");\n        };\n\n\n        CP_Customizer.utils.htmlDecode = function (value) {\n            var result = $('<div/>').html(value).text();\n            return result;\n        };\n\n        CP_Customizer.utils.htmlEscape = function (str) {\n            return str\n                .replace(/&/g, '&amp;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#39;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;');\n        };\n\n\n        var htmlEntityMap = {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#39;',\n            '/': '&#x2F;',\n            '`': '&#x60;',\n            '=': '&#x3D;'\n        };\n\n        CP_Customizer.utils.htmlUnescape = function (str) {\n\n            for (var item in htmlEntityMap) {\n                var regExp = new RegExp(htmlEntityMap[item], 'g');\n                str = str.replace(regExp, item);\n            }\n\n            return str;\n        };\n\n\n        CP_Customizer.utils.setToPath = function (schema, path, value) {\n\n            if (!schema) {\n                return schema;\n            }\n\n            if (_.isString(schema)) {\n                schema = CP_Customizer.utils.normalizeValue(schema);\n            }\n\n            var pList = path.split('.');\n            var len = pList.length;\n\n            if (len > 1) {\n                var first = pList.shift();\n                var remainingPath = pList.join('.');\n                schema[first] = CP_Customizer.utils.setToPath(schema[first], remainingPath, value);\n            } else {\n                schema[path] = value;\n            }\n\n            return schema;\n        };\n\n        CP_Customizer.utils.normalizeShortcodeString = function (shortcode) {\n            shortcode = CP_Customizer.utils.htmlDecode(shortcode);\n\n            return '[' + CP_Customizer.utils.phpTrim(shortcode) + ']';\n        };\n\n        CP_Customizer.utils.getSpectrumColorFormated = function ($spectrumElement) {\n            var value = $spectrumElement.spectrum('get');\n\n\n            if (!value) {\n                return value;\n            }\n\n            if (value.getAlpha() < 1) {\n                return \"rgba(\" + value._r + \",\" + value._g + \",\" + value._b + \",\" + value._a + \")\";\n            } else {\n                return value.toHexString();\n            }\n        };\n\n        CP_Customizer.utils.normalizeValue = function (value, convertToArray) {\n\n\n            if (_.isString(value)) {\n\n                try {\n                    value = decodeURI(value);\n\n                } catch (e) {\n\n                }\n\n                try {\n                    value = JSON.parse(value);\n\n                } catch (e) {\n\n                }\n\n            }\n\n            if (_.isObject(value) && convertToArray) {\n                var hasOnlyNumberKeys = _.keys(value).map(function (k) {\n                    return _.isNumber(parseInt(k))\n                }).reduce(function (a, b) {\n                    return (a && b);\n                }, true);\n\n                if (hasOnlyNumberKeys) {\n                    var newValue = [];\n                    _.keys(value).forEach(function (k) {\n\n                        if (_.isUndefined(value[k])) {\n                            return;\n                        }\n\n                        newValue.push(value[k]);\n                    });\n\n                    value = newValue;\n                }\n            }\n\n            return value;\n        };\n\n        CP_Customizer.utils.getValue = function (component) {\n            var value = undefined;\n\n            if (component instanceof CP_Customizer.wpApi.Control) {\n                value = component.setting.get();\n            }\n\n            if (component instanceof CP_Customizer.wpApi.Setting) {\n                value = component.get();\n            }\n\n            if (_.isString(component)) {\n                value = CP_Customizer.wpApi(component).get();\n            }\n\n            if (_.isString(value)) {\n\n                try {\n                    value = decodeURI(value);\n\n                } catch (e) {\n\n                }\n\n                try {\n                    value = JSON.parse(value);\n                } catch (e) {\n\n                }\n\n            }\n\n            return value;\n        };\n\n        CP_Customizer.utils.deepClone = function (toClone, asArray) {\n            var result = jQuery.extend(true, {}, toClone);\n            if (asArray) {\n                result = _.toArray(result);\n            }\n            return result;\n        };\n\n        CP_Customizer.utils.cssValueNumber = function (value) {\n            var matches = value.match(/\\d+(.\\d+)?/);\n\n            if (!matches || !_.isArray(matches)) {\n                return null;\n            }\n\n            return matches.shift();\n        };\n\n        CP_Customizer.utils.arrayChunk = function (bigArray, perGroup) {\n            perGroup = perGroup || 5;\n            var result = _.groupBy(bigArray, function (element, index) {\n                return Math.floor(index / perGroup);\n            });\n\n            return _.toArray(result);\n        };\n\n        CP_Customizer.utils.normalizeClassAttr = function (classes, asSelector) {\n            classes = classes.split(' ').filter(function (item) {\n                return (item.trim().length > 0);\n            });\n\n            if (asSelector) {\n                return (classes.length ? '.' + classes.join('.') : '');\n            } else {\n                return classes.join(' ');\n            }\n        };\n\n        CP_Customizer.utils.getFileInfo = function (url) {\n            var filename = url.substring(url.lastIndexOf(\"/\") + 1, url.lastIndexOf(\".\"));\n            var parts = url.split(\"/\" + filename)[0];\n            var path = parts[0];\n            var extension = parts.length > 1 ? parts[1].split('/')[0] : '';\n\n            return {\n                path: path,\n                file: filename + (extension ? '.' + extension : extension),\n                filename: filename,\n                extension: extension\n            }\n        };\n\n        var imageExtensions = [\"tif\", \"tiff\", \"gif\", \"jpeg\", \"jpg\", \"jif\", \"jfif\", \"jp2\", \"jpx\", \"j2k\", \"j2c\", \"fpx\", \"pcd\", \"png\", \"pdf\", \"bmp\", \"ico\"];\n        CP_Customizer.utils.isImageFile = function (url) {\n            var fileInfo = CP_Customizer.utils.getFileInfo(url);\n\n            return (imageExtensions.indexOf(fileInfo.extension) !== -1);\n\n        };\n\n        // https://stackoverflow.com/a/13896633\n        // TODO: make work with ?x[a]=2&x[b]=3\n        CP_Customizer.utils.parseUrlQuery = function (str) {\n            if (typeof str !== \"string\" || str.length === 0) return {};\n            var s = str.split(\"&\");\n            var s_length = s.length;\n            var bit, query = {}, first, second;\n            for (var i = 0; i < s_length; i++) {\n                bit = s[i].split(\"=\");\n                first = decodeURIComponent(bit[0]);\n                if (first.length === 0) continue;\n                second = decodeURIComponent(bit[1]);\n                if (typeof query[first] === \"undefined\") query[first] = second;\n                else if (query[first] instanceof Array) query[first].push(second);\n                else query[first] = [query[first], second];\n            }\n            return query;\n        };\n\n\n        CP_Customizer.utils.stringifyUrlQuery = function (query) {\n            var queryString = \"\";\n            for (var key in query) {\n\n                if (!query.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                var data = query[key];\n\n                if (!_.isUndefined(data)) {\n                    if (_.isString(data)) {\n                        queryString += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(data);\n                    }\n\n                    if (_.isArray(data)) {\n                        for (var i = 0; i < data.length; i++) {\n                            queryString += '&' + encodeURIComponent(key) + '[' + i + ']=' + encodeURIComponent(data[i]);\n                        }\n                    }\n\n                } else {\n                    queryString += '&' + encodeURIComponent(key);\n                }\n            }\n\n            if (queryString.length) {\n                queryString = '?' + CP_Customizer.utils.phpTrim(queryString, '&');\n            }\n\n            return queryString;\n        };\n\n        CP_Customizer.utils.parseURL = function (url) {\n            var location = ((url.split('?')[0] || '').split('#')[0] || ''),\n                queryString = (url.indexOf('?') !== -1) ? url.split('?').pop().split('#')[0] : '',\n                query = CP_Customizer.utils.parseUrlQuery(queryString),\n                hash = (url.indexOf('#') !== -1) ? url.replace(/(.*)#/, '').trim() : '';\n\n            return {\n                location: location.replace(/\\/$/, ''),\n                query: query,\n                hash: hash.length ? '#' + hash : ''\n            }\n\n        };\n\n        CP_Customizer.utils.removeUrlQueryStrings = function (url, strings) {\n            var parsedUrl = CP_Customizer.utils.parseURL(url),\n                hash = parsedUrl.hash,\n                queryKeys = Object.getOwnPropertyNames(parsedUrl.query),\n                query = {};\n\n            for (var i = 0; i < queryKeys.length; i++) {\n                var key = queryKeys[i];\n                if (strings.indexOf(key) === -1) {\n                    query[key] = parsedUrl.query[key];\n                }\n            }\n\n            var queryString = CP_Customizer.utils.stringifyUrlQuery(query);\n\n            if (!queryString.length) {\n                queryString = \"/\";\n            }\n\n            return parsedUrl.location + queryString + hash;\n        };\n\n        CP_Customizer.utils.nodeMatchingClasses = function (node, classList, firstMatchOnly) {\n\n            if (!$(node).length) {\n                if (firstMatchOnly) {\n                    return undefined;\n                }\n                return [];\n            }\n\n            result = Array.from($(node)[0].classList).filter(function (_class) {\n                return (classList.indexOf(_class) !== -1);\n            });\n\n            if (firstMatchOnly) {\n                if (result.length) {\n                    result = result[0];\n                } else {\n                    result = undefined;\n                }\n            }\n\n            return result;\n        };\n\n        CP_Customizer.utils.colorInArray = function (colorsArray, color, includeAlpha) {\n            var inArray = false;\n            color = tinycolor(color);\n\n            for (var i = 0; i < colorsArray.length; i++) {\n\n                var _color = tinycolor(colorsArray[i]);\n                inArray = (color._r === _color._r) && (color._g === _color._g) && (color._b === _color._b);\n\n                if (includeAlpha) {\n                    inArray = inArray && (color._a === _color._a);\n                }\n\n                if (inArray) {\n                    break;\n                }\n            }\n\n            return inArray;\n\n        }\n\n        CP_Customizer.utils.valueToBool = function (value) {\n            if (_.isBoolean(value)) {\n                return value;\n            }\n\n            if (_.isString(value)) {\n\n                var _v = value.toLowerCase();\n                if (_v === \"yes\" || _v === \"true\") {\n                    return true;\n                }\n\n                if (_v === \"no\" || _v === \"false\") {\n                    return false;\n                }\n            }\n\n\n            if (!isNaN(value)) {\n                return !!parseInt(value);\n            }\n\n            return !!value;\n        }\n\n\n        CP_Customizer.utils.convertColor = {\n            toRGB: function (color) {\n                return tinycolor(color).toRgbString();\n            },\n            toRGBA: function (color, alpha) {\n                return tinycolor(color).setAlpha(alpha).toRgbString();\n            },\n            toHex: function (color) {\n                return tinycolor(color).toHexString();\n            },\n            brighten: function (color, value) {\n                return tinycolor(color).brighten(value).toRgbString();\n            }\n        }\n\n        CP_Customizer.hasClass = function (element, classes) {\n            var elementClasses = Array.from($(element)[0].classList);\n        }\n    });\n})(jQuery);\n","(function ($, CP_Customizer) {\n  CP_Customizer.addModule(function () {\n    var used = false;\n    CP_Customizer.bind(CP_Customizer.events.PREVIEW_LOADED, function () {\n      if (used) {\n        return;\n      }\n      used = true;\n\n      var $activatePageCard = $(\n        '.reiki-needed-container[data-type=\"activate\"]'\n      );\n      var $openPageCard = $('.reiki-needed-container[data-type=\"select\"]');\n      var $makeEditable = $(\n        '.reiki-needed-container[data-type=\"edit-this-page\"]'\n      );\n      var $makeProductEditable = $(\n        '.reiki-needed-container[data-type=\"edit-this-product\"]'\n      );\n\n      var data = CP_Customizer.preview.data();\n      var toAppend;\n\n      var canMaintainThis = CP_Customizer.preview.data(\"canEditInCustomizer\"); //CP_Customizer.options('isMultipage', false) && (data.pageID !== false);\n\n      if (data.postType !== \"page\" || data.isArchive) {\n        try {\n          if (wp.customize.panel(\"page_content_panel\")) {\n            wp.customize.panel(\"page_content_panel\").container.eq(0).remove();\n            wp.customize.panel(\"page_content_panel\").deactivate();\n            return;\n          }\n        } catch (e) {\n          console.log(\"error deactivate page_content_panel\");\n        }\n      }\n\n      if (data.maintainable) {\n      } else {\n        if (canMaintainThis) {\n          if (\n            CP_Customizer.preview.data(\"queryVars:post_type\", \"page\") === \"page\"\n          ) {\n            toAppend = $makeEditable.clone().show();\n          } else {\n            toAppend = $makeProductEditable.clone().show();\n          }\n\n          wp.customize\n            .panel(\"page_content_panel\")\n            .container.eq(0)\n            .find(\".sections-list-reorder\")\n            .empty()\n            .append(toAppend);\n        } else {\n          wp.customize\n            .panel(\"page_content_panel\")\n            .container.eq(0)\n            .find(\".accordion-section-title > .add-section-plus\")\n            .remove();\n          if (!data.hasFrontPage) {\n            toAppend = $activatePageCard.clone().show();\n            wp.customize\n              .panel(\"page_content_panel\")\n              .container.eq(0)\n              .find(\".sections-list-reorder\")\n              .empty()\n              .append(toAppend);\n          } else {\n            if (!data.isFrontPage && data.postType === \"page\") {\n              toAppend = $openPageCard.clone().show();\n              wp.customize\n                .panel(\"page_content_panel\")\n                .container.eq(0)\n                .find(\".sections-list-reorder\")\n                .empty()\n                .append(toAppend);\n            }\n          }\n        }\n      }\n\n      if (toAppend) {\n        toAppend.show();\n      }\n    });\n  });\n})(jQuery, CP_Customizer);\n","(function (root, CP_Customizer, $) {\n\n    CP_Customizer.__shortcodesPopupControls = {};\n\n    CP_Customizer.registerShortcodePopupControls = function (tag, controls) {\n        CP_Customizer.__shortcodesPopupControls[tag] = controls;\n    };\n\n\n     CP_Customizer.hooks.addAction('dynamic_columns_handle', function (cols, node) {\n        if (CP_Customizer.isShortcodeContent(node)) {\n            var shortcode = CP_Customizer.getNodeShortcode(node);\n            var device = root.CP_Customizer.preview.currentDevice();\n            var prop = ( device === \"tablet\") ? \"columns_tablet\" : \"columns\";\n            shortcode.attrs = shortcode.attrs || {};\n            shortcode.attrs[prop] = cols;\n            CP_Customizer.updateNodeFromShortcodeObject(node, shortcode);\n        }\n    });\n    CP_Customizer.hooks.addFilter('is_shortcode_editable', function (value, shortcode) {\n        var controls = CP_Customizer.hooks.applyFilters('filter_shortcode_popup_controls', CP_Customizer.utils.deepClone(CP_Customizer.__shortcodesPopupControls));\n\n        // console.log(controls, shortcode);\n        value = value || _.has(controls, shortcode.tag);\n\n        return value;\n    });\n\n\n    CP_Customizer.getShortcodePopupFields = function (shortcodeData) {\n        var controls = CP_Customizer.hooks.applyFilters('filter_shortcode_popup_controls', CP_Customizer.utils.deepClone(CP_Customizer.__shortcodesPopupControls));\n        var tag = _.isObject(shortcodeData) ? shortcodeData.tag : shortcodeData;\n        var attrs = controls[tag] || [];\n        var controls = [];\n        for (var attrName in attrs) {\n            if (attrs.hasOwnProperty(attrName)) {\n                var control = CP_Customizer.utils.deepClone(attrs[attrName].control);\n\n                if (shortcodeData.attrs && shortcodeData.attrs.hasOwnProperty(attrName)) {\n                    control.value = shortcodeData.attrs[attrName];\n                } else {\n                    control.value = !_.isUndefined(control.default) ? control.default : \"\";\n                }\n\n                if (control.getValue) {\n                    control.value = control.getValue(attrName, shortcodeData.tag);\n                }\n\n                control.name = attrName;\n                control.id = attrName;\n                if (control.getParse) {\n                    control.value = control.getParse(control.value);\n                }\n                controls.push(control);\n            }\n        }\n        return controls;\n    };\n\n    CP_Customizer.openShortcodePopupEditor = function (callback, $node, shortcode) {\n        var popupContainer = $('#cp-container-editor');\n\n        var fields = CP_Customizer.getShortcodePopupFields(shortcode);\n\n        var fallback = CP_Customizer.shortcodesAttrs && CP_Customizer.shortcodesAttrs[shortcode];\n\n        if (!fields.length || fallback) {\n            return;\n        }\n\n        shortcode = {\n            tag: _.isObject(shortcode) ? shortcode.tag : shortcode,\n            attrs: _.isObject(shortcode) ? shortcode.attrs : {},\n        };\n\n        function setContent() {\n            for (var i = 0; i < fields.length; i++) {\n                var field = fields[i],\n                    node = field.node;\n                var value = field.val();\n\n                if (field.setValue) {\n                    field.setValue(field.id, value, shortcode.tag);\n                } else {\n                    shortcode.attrs[field.id] = field.setParse ? field.setParse(value) : value;\n                }\n            }\n\n            callback(shortcode.attrs);\n            CP_Customizer.closePopUps();\n            CP_Customizer.updateState();\n        }\n\n\n        popupContainer.find('[id=\"cp-item-ok\"]').off().click(setContent);\n        popupContainer.find('[id=\"cp-item-cancel\"]').off().click(function () {\n            CP_Customizer.closePopUps();\n        });\n\n        popupContainer.find('#cp-items').empty();\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i],\n                type = field.type || 'text',\n                content = (CP_Customizer.jsTPL[type] ? CP_Customizer.jsTPL[type](field) : '');\n\n            var $fieldContent = $(content);\n\n            $fieldContent.attr('data-field', field.name);\n\n\n            field.$wrapper = $fieldContent;\n            field.$panel = popupContainer.find('#cp-items');\n            field.$node = $node;\n\n            field.val = function () {\n                var value = {};\n                var field = this;\n                var _values = this.$wrapper.find('[id^=\"' + field.id + '\"]').filter('input,textarea,select').map(function (index, elem) {\n                    return {\n                        key: $(this).attr('id').replace(field.id + \"__\", ''),\n                        value: $(this).is('[type=checkbox]') ? this.checked : $(this).val()\n                    };\n                }).toArray();\n\n                _(_values).each(function (v) {\n                    value[v.key] = v.value;\n                });\n\n                if (_values.length === 1 && value.hasOwnProperty(field.id)) {\n                    value = value[field.id];\n                }\n\n                return value;\n            };\n\n            if (field.ready && _.isFunction(field.ready)) {\n                $fieldContent.data('field', field);\n                $fieldContent.bind('shortcode-popup-ready', function () {\n                    var $fieldContent = $(this);\n                    var field = $fieldContent.data('field');\n                    field.ready($fieldContent, $fieldContent.closest('#cp-items'));\n                });\n\n\n            }\n\n            popupContainer.find('#cp-items').append($fieldContent);\n\n        }\n\n        popupContainer.find('#cp-items').children().trigger('shortcode-popup-ready');\n        CP_Customizer.popUp( window.CP_Customizer.translateCompanionString('Manage Options'), \"cp-container-editor\", {\n            width: \"600\",\n            class: \"data-edit-popup\"\n        });\n    };\n\n\n    CP_Customizer.editEscapedShortcodeAtts = function ($node, shortcode) {\n        CP_Customizer.openShortcodePopupEditor(function (attrs) {\n            shortcode.attrs = attrs;\n\n            var shortcodeText = '[' + shortcode.tag;\n            var attrs = [];\n            for (var attr in shortcode.attrs) {\n                if ((shortcode.attrs[attr] + \"\").trim() != \"\") {\n\n                    attrs.push(attr + '=\"' + htmlEscape(htmlEscape(shortcode.attrs[attr])) + '\"');\n                }\n            }\n\n            if (attrs.length) {\n                shortcodeText += ' ' + attrs.join(' ');\n            }\n\n            shortcodeText += ']';\n\n            CP_Customizer.updateNodeShortcode($node, shortcodeText);\n\n        }, $node, shortcode);\n    };\n\n    function htmlEscape(str) {\n        return str\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n})(window, CP_Customizer, jQuery);\n\n","(function (root, CP_Customizer, $) {\n\n    CP_Customizer.__customPopupControls = {};\n\n    CP_Customizer.registerCustomPopupControls = function (tag, controls) {\n        CP_Customizer.__customPopupControls[tag] = controls;\n    };\n\n\n    CP_Customizer.getCustomPopupFields = function (tag, $node) {\n        var controls = CP_Customizer.hooks.applyFilters('filter_custom_popup_controls', CP_Customizer.utils.deepClone(CP_Customizer.__customPopupControls));\n        var attrs = controls[tag] || [];\n        var controls = [];\n        for (var attrName in attrs) {\n            if (attrs.hasOwnProperty(attrName)) {\n                var control = CP_Customizer.utils.deepClone(attrs[attrName].control);\n\n\n                if (_.isFunction(control.active)) {\n                    if (!control.active($node)) {\n                        continue;\n                    }\n                }\n\n                if (control.attr) {\n                    control.value = $node.attr(control.attr);\n                }\n\n                if (control.getValue) {\n                    control.value = control.getValue(attrName, $node, control.default);\n                }\n\n                if (!control.value && control.default) {\n                    control.value = control.default;\n                }\n\n                control.name = attrName;\n                control.id = attrName;\n                if (control.getParse) {\n                    control.value = control.getParse(control.value);\n                }\n                controls.push(control);\n            }\n        }\n        return controls;\n    };\n\n    CP_Customizer.openCustomPopupEditor = function ($node, tag, callback) {\n        var popupContainer = $('#cp-container-editor');\n\n        var fields = CP_Customizer.getCustomPopupFields(tag, $node);\n\n\n        function setContent() {\n            var values = {};\n            for (var i = 0; i < fields.length; i++) {\n                var field = fields[i],\n                    value = field.val();\n\n                values[field.id] = {\n                    oldValue: field.value,\n                    value: value\n                };\n\n                if (field.attr) {\n                    $node.attr(field.attr, value);\n                }\n\n            }\n\n            if (callback) {\n                callback(values, $node);\n            }\n\n            CP_Customizer.closePopUps();\n            CP_Customizer.updateState();\n        }\n\n\n        popupContainer.find('[id=\"cp-item-ok\"]').off().click(setContent);\n        popupContainer.find('[id=\"cp-item-cancel\"]').off().click(function () {\n            CP_Customizer.closePopUps();\n        });\n\n        popupContainer.find('#cp-items').empty();\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i],\n                type = field.type || 'text',\n                content = (CP_Customizer.jsTPL[type] ? CP_Customizer.jsTPL[type](field) : '');\n\n            var $fieldContent = $(content);\n\n            $fieldContent.attr('data-field', field.name);\n\n\n            field.$wrapper = $fieldContent;\n            field.$panel = popupContainer.find('#cp-items');\n            field.$node = $node;\n\n            field.val = function () {\n                var value = {};\n                var field = this;\n                var _values = this.$wrapper.find('[id^=\"' + field.id + '\"]').filter('input,textarea,select').map(function (index, elem) {\n                    return {\n                        key: $(this).attr('id').replace(field.id + \"__\", ''),\n                        value: $(this).is('[type=checkbox]') ? this.checked : $(this).val()\n                    };\n                }).toArray();\n\n                _(_values).each(function (v) {\n                    value[v.key] = v.value;\n                });\n\n                if (_values.length === 1 && value.hasOwnProperty(field.id)) {\n                    value = value[field.id];\n                }\n\n                return value;\n            };\n\n            if (field.ready && _.isFunction(field.ready)) {\n                $fieldContent.data('field', field);\n                $fieldContent.bind('shortcode-popup-ready', function () {\n                    var $fieldContent = $(this);\n                    var field = $fieldContent.data('field');\n                    field.ready($fieldContent, $fieldContent.closest('#cp-items'));\n                });\n\n\n            }\n\n            popupContainer.find('#cp-items').append($fieldContent);\n\n        }\n\n        popupContainer.find('#cp-items').children().trigger('shortcode-popup-ready');\n        CP_Customizer.popUp(window.CP_Customizer.translateCompanionString('Manage Options'), \"cp-container-editor\", {\n            width: \"600\",\n            class: \"data-edit-popup\"\n        });\n    };\n\n\n    function htmlEscape(str) {\n        return str\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n})(window, CP_Customizer, jQuery);\n","(function (root, CP_Customizer, $) {\n\n    var currentPageStyles = {};\n    var styleEL = $(\"\");\n    var mod = null;\n\n    var mediaMap = {\n        \"mobile\": \"@media screen and (max-width:767)\",\n        \"tablet\": \"@media screen and (min-width:768)\",\n        \"desktop\": \"@media screen and (min-width:1024)\",\n        \"nomedia\": false\n    };\n\n    var outputOrder = ['nomedia', 'mobile', 'tablet', 'desktop'];\n\n    function sprintf_style_array(data, media) {\n        var style = \"\";\n\n\n        for (var selector in data) {\n            var props = data[selector];\n            var propsText = \"\";\n\n            for (var prop in props) {\n                var value = props[prop];\n                propsText += \"\\t\" + prop + \":\" + value + \";\\n\";\n            }\n\n            style += selector + \"{\\n\" + propsText + \"\\n}\";\n        }\n        if (media) {\n            style = media + \"{\\n\" + style + \"\\n}\";\n        }\n\n        return style + \"\\n\\n\";\n    }\n\n    function setModAndUpdate() {\n        CP_Customizer.setMod(mod, _.clone(currentPageStyles), 'postMessage');\n\n        var style = \"\";\n\n        for (var i = 0; i < outputOrder.length; i++) {\n            var media = outputOrder[i];\n            var mediaQuery = mediaMap[media];\n            style += sprintf_style_array(currentPageStyles[media], mediaQuery);\n        }\n        styleEL.text(style);\n    }\n\n\n    CP_Customizer.on(CP_Customizer.events.PREVIEW_LOADED, function () {\n        currentPageStyles = CP_Customizer.preview.data('content_style');\n        mod = 'custom_content_style_' + CP_Customizer.preview.data('pageID');\n        styleEL = CP_Customizer.preview.find('#page-content-custom-styles');\n    });\n\n\n    CP_Customizer.contentStyle = {\n        getStyle: function (selector, media) {\n\n            if (!selector) {\n                return {};\n            }\n\n            media = media || 'nomedia';\n            return currentPageStyles[media][selector] || {};\n        },\n\n        removeSelector: function (selector, media, noUpdate) {\n            media = media || 'nomedia';\n\n            if (media === \"all\") {\n                for (var m in currentPageStyles) {\n                    this.removeSelector(selector, m, true);\n                }\n                setModAndUpdate();\n                return;\n            }\n\n            if (currentPageStyles[media]) {\n                if (currentPageStyles[media][selector]) {\n                    delete currentPageStyles[media][selector];\n                } else {\n                    for (var s in currentPageStyles[media]) {\n                        if (s.match(selector)) {\n                            delete currentPageStyles[media][s];\n                        }\n                    }\n                }\n            }\n\n            if (!noUpdate) {\n\n                setModAndUpdate();\n            }\n\n        },\n\n\n        getProp: function (selector, pseudo, prop, defaultValue, media) {\n            pseudo = (pseudo || \"\").trim();\n            selector = selector + pseudo;\n\n            var style = this.getStyle(selector, media);\n            return (style[prop] || \"\").toLowerCase().replace('!important', '').trim() || defaultValue;\n\n        },\n\n        getNodeProp: function (node, selector, pseudo, prop, media) {\n\n            if (!node || node.length === 0) {\n                return '';\n            }\n\n            node = CP_Customizer.preview.jQuery(node)[0];\n            var defaultValue = CP_Customizer.preview.frame().getComputedStyle(node, pseudo).getPropertyValue(prop);\n            return this.getProp(selector, pseudo, prop, defaultValue, media)\n        },\n\n\n        getNodeProps: function (node, selector, pseudo, props, media) {\n            var result = {},\n                manager = this;\n\n            _.each(props, function (prop) {\n                result[prop] = manager.getNodeProp(node, selector, pseudo, prop, media);\n            });\n\n            return result;\n        },\n\n        isImportant: function (selector, pseudo, prop, media) {\n            pseudo = (pseudo || \"\").trim();\n            selector = selector + pseudo;\n\n            var style = this.getStyle(selector, media);\n            var value = style[prop] || \"\";\n            return value.toLowerCase().indexOf('!important') !== -1;\n\n        },\n\n        setProp: function (selector, pseudo, prop, value, media, handeledModUpdate) {\n            media = media || 'nomedia';\n            pseudo = (pseudo || \"\").trim();\n\n            pseudo = (pseudo || \"\").trim();\n            selector = selector + pseudo;\n\n            if (!currentPageStyles[media]) {\n                currentPageStyles[media] = {};\n            }\n\n            if (_.isArray(currentPageStyles[media])) {\n                currentPageStyles[media] = _.extend({}, currentPageStyles[media]);\n            }\n\n            if (!currentPageStyles[media][selector]) {\n                currentPageStyles[media][selector] = {};\n            }\n\n            currentPageStyles[media][selector][prop] = value;\n\n            if (!handeledModUpdate) {\n                setModAndUpdate();\n            }\n        },\n\n        removeProp: function (selector, pseudo, prop, media) {\n            media = media || 'nomedia';\n\n            pseudo = (pseudo || \"\").trim();\n            selector = selector + pseudo;\n\n            if (currentPageStyles[media]) {\n                if (currentPageStyles[media][selector]) {\n                    if (currentPageStyles[media][selector][prop]) {\n                        delete currentPageStyles[media][selector][prop];\n                    }\n                }\n            }\n\n\n            setModAndUpdate();\n        },\n\n        setProps: function (selector, pseudo, props, media) {\n            for (var prop in props) {\n                this.setProp(selector, pseudo, prop, props[prop], media, true);\n            }\n\n            setModAndUpdate();\n        },\n\n        merge: function (styles) {\n            currentPageStyles = jQuery.extend(currentPageStyles, styles);\n            setModAndUpdate();\n        },\n\n        recompileScssStyle: function () {\n            return;\n            var settings = CP_Customizer.options('scss_settings', {});\n            var vars = {};\n\n            for (var i = 0; i < settings.length; i++) {\n                var setting = settings[i];\n                var setting_vars = CP_Customizer.hooks.applyFilters('scss_setting_vars_' + setting, {});\n\n                if (_.isEmpty(setting_vars)) {\n                    setting_vars = CP_Customizer.hooks.applyFilters('scss_setting_vars', {}, setting);\n                }\n\n                vars = _.extend(_.clone(vars), _.clone(setting_vars));\n            }\n\n            var data = CP_Customizer.preview.data('scss', {});\n\n            vars = _.extend(_.clone(data.vars), _.clone(vars));\n            data.vars = vars;\n\n            var request = CP_Customizer.IO.post('compiled_style_preview', {\n                data: data\n            });\n\n            request.done(function (content) {\n                CP_Customizer.preview.find('#ope-compiled-css').text(content);\n            });\n\n        },\n\n        setSectionItemColor: function (node, colorMapping, newColor) {\n\n            var $node = CP_Customizer.preview.jQuery(node),\n                colorName = CP_Customizer.getThemeColor(newColor),\n                colorClasses = Object.getOwnPropertyNames(CP_Customizer.getColorsObj()).concat(['color-white', 'color-black', 'color-gray']);\n\n            colorMapping.forEach(function (cMap) {\n                if (colorName) {\n                    if (cMap.colorClass) {\n                        var oldColorClasses = colorClasses.map(function (color) {\n                            return cMap.colorClass.prefix + color + cMap.colorClass.suffix;\n                        });\n\n                        var newClass = cMap.colorClass.prefix + colorName + cMap.colorClass.suffix;\n                        var $item = $node.is(cMap.colorClass.selector || cMap.selector) ? $node : $node.find(cMap.colorClass.selector || cMap.selector);\n                        $item.removeClass(oldColorClasses.join(' ')).addClass(newClass);\n                    }\n                }\n            });\n\n        },\n\n\n        getSectionItemColor: function (node, colorMapping, defaultColor) {\n\n            if (!colorMapping) {\n                return 'rgba(0,0,0,0)';\n            }\n\n            var $node = CP_Customizer.preview.jQuery(node),\n                firstCMap = colorMapping[0],\n                selector = colorMapping[0].selector,\n                colorClasses = Object.getOwnPropertyNames(CP_Customizer.getColorsObj()).concat(['color-white', 'color-black', 'color-gray']),\n                result = defaultColor || 'rgba(0,0,0,0)';\n\n            if (firstCMap.colorClass) {\n                selector = firstCMap.colorClass.selector || selector;\n                var $item = $node.is(selector) ? $node : $node.find(selector);\n\n                for (var i = 0; i < colorClasses.length; i++) {\n                    var colorClass = colorClasses[i],\n                        nodeClass = firstCMap.colorClass.prefix + colorClass + firstCMap.colorClass.suffix;\n                    if ($item.hasClass(nodeClass)) {\n                        result = CP_Customizer.getColorValue(colorClass);\n                        break;\n                    }\n                }\n            }\n\n            return result;\n\n        }\n    };\n\n\n    CP_Customizer.styleUtils = {\n        generateCSSLinerGradient: function (angle, colors) {\n            var colorsArray = colors.map(function (color) {\n                return color.value + \" \" + color.stop + '%'\n            });\n\n            colorsText = colorsArray.join(' , ');\n\n            return 'linear-gradient(' + angle + 'deg, ' + colorsText + ')';\n\n        },\n\n        generateOneSideLinerGradient: function (angle, color, transpacency, from) {\n            transpacency = transpacency || 50;\n            startAlpha = transpacency / 2;\n            from = from || 50;\n\n            var fromColor = tinycolor(color).setAlpha(startAlpha / 100).toRgbString(),\n                middleColor = tinycolor(color).setAlpha(transpacency / 100).toRgbString(),\n                toColor = tinycolor(color).toHexString();\n\n            var colors = [\n                {\n                    value: 'rgba(0,0,0,0)',\n                    stop: 0\n                },\n                {\n                    value: fromColor,\n                    stop: from / 2\n                },\n                {\n                    value: middleColor,\n                    stop: from\n                },\n                {\n                    value: toColor,\n                    stop: 100\n                }\n            ];\n\n            return this.generateCSSLinerGradient(angle, colors);\n\n        },\n\n        getCSSGradientColors: function (value, colorAsObject) {\n            var parts = value.match(/,((.*?)\\s([0-9]+)%)/ig);\n            parts = parts.map(function (part) {\n                part = CP_Customizer.utils.phpTrim(part, ',').trim();\n                var stop = part.match(/(\\d+)%/igm)[0];\n                var color = part.replace(stop, '').trim();\n\n                return {\n                    value: colorAsObject ? tinycolor(color) : color,\n                    stop: CP_Customizer.utils.phpTrim(stop, '%').trim()\n                }\n            });\n\n            return parts\n        },\n\n        getRGBAStringTransparency: function (color) {\n\n          var transparency = tinycolor(color).getAlpha();\n\n          return transparency;\n\n        }\n\n    }\n\n\n})(window, CP_Customizer, jQuery);\n","(function (root, CP_Customizer, $) {\n\n    var sectionSettingsContainer = $('' +\n        '<li id=\"cp-section-setting-popup\" class=\"customizer-right-section\">' +\n        '    <span data-close-right-sidebar=\"true\" title=\"' +  root.CP_Customizer.translateCompanionString(\"Close Panel\") +'\" class=\"close-panel\"></span>' +\n        '    <ul class=\"section-settings-container accordion-section-content no-border\"></ul>' +\n        ' </li>');\n\n    CP_Customizer.addModule(function (CP_Customizer) {\n\n        var control = wp.customize.panel('page_content_panel');\n        control.container.find('.sections-list-reorder').append(sectionSettingsContainer);\n\n        CP_Customizer.hooks.addFilter('content_section_setting_float', function () {\n            return false;\n        });\n\n        CP_Customizer.hooks.addFilter('content_section_setting', function () {\n            return \"cp-section-setting\";\n        });\n\n\n        CP_Customizer.createControl = function (options) {\n\n            options = _.extend({\n                id: '',\n                type: '',\n                container: $('<div />'),\n                params: {},\n                value: '',\n                updater: function (value) {\n                    if (control.container.find('[data-cp-link]').is('[type=checkbox]')) {\n                        control.container.find('[data-cp-link]').prop('checked', value);\n                        return;\n                    }\n                    control.container.find('[data-cp-link]').val(value).trigger('change');\n                }\n            }, options);\n\n\n            options.params.type = options.params.type || options.type;\n\n            var settingID = options.id || _.uniqueId('control-setting-');\n            var setting = new CP_Customizer.wpApi.Setting(settingID, options.value, {});\n\n            setting.previewer = CP_Customizer.wpApi.previewer;\n\n            setting.transport = 'postMessage';\n\n            options.params.settings = [setting];\n            options.params.value = options.value;\n            options.params.link = ' data-cp-link';\n\n            var controllerClass = CP_Customizer.wpApi.controlConstructor[options.type] || CP_Customizer.wpApi.Control;\n            var control = new controllerClass(\n                settingID + '-control',\n                {\n                    containerType: options.type,\n                    params: options.params\n                }\n            );\n\n            var container = $(options.container);\n\n            control.container = container;\n            control.setting = control.setting || setting;\n\n            control.section = function () {\n                return 'page_content';\n            };\n\n            var updaterCallback = options.updater;\n\n            var oldSet = setting.set;\n\n            setting.bind(function (value) {\n                control.params.value = value;\n                updaterCallback.call(this, value);\n            });\n\n            setting.bind(function (value, oldValue) {\n                if (_.isFunction(setting.onChange)) {\n                    setting.onChange(value, oldValue);\n                    CP_Customizer.markSave();\n                }\n            });\n\n            setting.controlContainer = container;\n            setting.renderControl = function () {\n                control.renderContent();\n                control.ready();\n\n                return this;\n            };\n\n            setting.attachWithSetter = function (currentValue, onChange) {\n                this.onChange = false;\n                this._value = undefined;\n\n                this.set(currentValue);\n\n                if (options.onAttach) {\n                    options.onAttach.call(setting, currentValue);\n                }\n\n                var self = this;\n                _.delay(function () {\n                    self.onChange = onChange;\n                }, 1);\n            };\n\n            setting.renderControl();\n            setting.control = control;\n\n\n            setting.hide = function () {\n                this.control.container.hide();\n            };\n\n            setting.show = function () {\n                this.control.container.show();\n            };\n\n            return setting;\n        };\n\n        CP_Customizer.createControl.color = function (id, container, params) {\n\n            var $container = $('<li class=\"customize-control customize-control-kirki customize-control-kirki-color\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                updater: function (value) {\n                    var colorControl = this.control.container.find('input[data-cp-link]');\n                    if (colorControl.data('spectrum.id') === undefined) {\n                        colorControl.iris('color', value);\n                    } else {\n                        colorControl.spectrum(\"set\", value);\n                    }\n                },\n                type: 'kirki-color',\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        choices: {\n                            alpha: params.alpha || true\n                        },\n                        value: params.value || \"#FFFFFF\"\n                    }\n                ),\n                value: params.value || \"#FFFFFF\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n\n        CP_Customizer.createControl.palette = function (id, container, params) {\n\n            var $container = $('<li class=\"customize-control customize-control-kirki customize-control-kirki-color\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                updater: function (value) {\n                    var colorControl = this.control.container.find('input[data-cp-link]');\n                    if (colorControl.data('spectrum.id') === undefined) {\n                        colorControl.iris('color', value);\n                    } else {\n                        var cb = colorControl.spectrum(\"option\", \"move\");\n                        colorControl.spectrum(\"destroy\");\n                        colorControl.spectrum({\n                            showPaletteOnly: true,\n                            showPalette: true,\n                            color: value,\n                            palette: [params.palette],\n                            move: cb,\n                            change: cb\n                        });\n                        colorControl.spectrum(\"set\", value);\n\n                    }\n                },\n                type: 'kirki-color',\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        choices: {\n                            alpha: params.alpha || true\n                        },\n                        value: params.value || \"#FFFFFF\"\n                    }\n                ),\n                value: params.value || \"#FFFFFF\"\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n            result.setPallete = function (palette) {\n                var colorControl = this.control.container.find('input[data-cp-link]');\n                colorControl.spectrum('option', 'palette', palette);\n            };\n\n            return result;\n        };\n\n\n        CP_Customizer.createControl.select = function (id, container, params) {\n            var type = 'kirki-select',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                updater: function (value) {\n                    if (this.controlContainer.find('[data-cp-link]').data().selectize) {\n                        this.controlContainer.find('[data-cp-link]').data().selectize.setValue(value);\n                    }\n                },\n                type: type,\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        choices: params.choices || [],\n                        value: params.value || \"\",\n                        multiple: params.multiple || []\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.text = function (id, container, params) {\n            var type = 'kirki-number',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />'),\n                params = params || {};\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n\n                type: type,\n                onAttach: function (value) {\n                    var thisInput = this.controlContainer.find('input');\n                    thisInput.val(value);\n                },\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        value: params.value || \"\"\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            var setting = CP_Customizer.createControl(options);\n            setting.control.container.find('input').spinner('destroy');\n\n            return setting;\n        };\n\n        CP_Customizer.createControl.number = function (id, container, params) {\n            var type = 'kirki-number',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                updater: function (value) {\n                    if (this.controlContainer.find('[data-cp-link]').data().selectize) {\n                        this.controlContainer.find('[data-cp-link]').data().selectize.setValue(value);\n                    }\n                },\n                type: type,\n                onAttach: function (value) {\n                    var thisInput = this.controlContainer.find('input');\n                    thisInput.spinner(\"value\", value);\n                },\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        choices: {\n                            min: params.min,\n                            max: params.max,\n                            step: params.step\n                        },\n                        value: params.value || \"\"\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.image = function (id, container, params) {\n            var type = 'image',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                updater: function (value) {\n                    if (value && \"none\" !== value && \"/none\" !== value.split('/none').pop()) {\n                        this.control.params.attachment = {\n                            id: Date.now(),\n                            type: type,\n                            sizes: {\n                                full: {\n                                    url: value\n                                }\n                            }\n                        }\n                    } else {\n                        this.control.params.attachment = undefined;\n                    }\n                    this.control.renderContent();\n                },\n                params: _.extend(\n                    params,\n                    {\n                        canUpload: true,\n                        button_labels: {\n                            remove: window.CP_Customizer.translateCompanionString(\"Remove\"),\n                            change: window.CP_Customizer.translateCompanionString(\"Change\"),\n                            select: window.CP_Customizer.translateCompanionString(\"Select\"),\n                            placeholder: \"No file selected\",\n                        },\n                        attachment: {\n                            type: type,\n                            sizes: {\n                                full: {\n                                    url: params.url\n                                }\n                            }\n                        }\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.video = function (id, container, params) {\n            var type = 'media',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                updater: function (value) {\n                     if (value) {\n                         this.control.params.attachment = value;\n                     } else {\n                         this.control.params.value = '';\n                     }\n                     this.control.renderContent();\n                },\n                params: _.extend(\n                    params,\n                    {\n                        canUpload: true,\n                        button_labels: {\n                            remove: \"Remove\",\n                            change: \"Change\",\n                            select: \"Select\",\n                            placeholder: \"No file selected\",\n                        },\n                        attachment: {\n                            id: params.value\n                        }\n                    }\n                ),\n                value: params.value || ''\n            };\n\n            var result =  CP_Customizer.createControl(options);\n\n            result.onSelect = function(){};\n\n            result.attachWithSetter = function (currentValue, onChange) {\n                this.onChange = false;\n                this._value = undefined;\n\n                this.set(currentValue);\n\n                if (options.onAttach) {\n                    options.onAttach.call(setting, currentValue);\n                }\n\n                var self = this;\n                _.delay(function () {\n                    self.onSelect = onChange;\n                }, 1);\n            };\n\n            result.control.select = function() {\n    \t\t\t// Get the attachment from the modal frame.\n    \t\t\tvar node,\n    \t\t\t\tattachment = result.control.frame.state().get( 'selection' ).first().toJSON(),\n    \t\t\t\tmejsSettings = window._wpmejsSettings || {};\n\n    \t\t\tresult.control.params.attachment = attachment;\n\n    \t\t\t// Set the Customizer setting; the callback takes care of rendering.\n    \t\t\tresult.control.setting( attachment.id );\n    \t\t\tresult.onSelect({\n                    id: attachment.id,\n                    url: attachment.url,\n                    icon: attachment.icon,\n                    type: attachment.type\n                })\n    \t\t\tnode = result.control.container.find( 'audio, video' ).get(0);\n\n    \t\t\t// Initialize audio/video previews.\n    \t\t\tif ( node ) {\n    \t\t\t\tresult.control.player = new MediaElementPlayer( node, mejsSettings );\n    \t\t\t} else {\n    \t\t\t\tresult.control.cleanupPlayer();\n    \t\t\t}\n    \t\t};\n\n        return result;\n        };\n\n        CP_Customizer.createControl.gradient = function (id, container, params) {\n            var type = 'web-gradients',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                updater: function (value) {\n                    this.control.params.value = value;\n                    this.control.renderContent();\n                },\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        value: params.value || \"\",\n                        button_label: window.CP_Customizer.translateCompanionString(\"Choose Gradient\")\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.gradientPro = function (id, container, params) {\n            var type = 'gradient-control-pro',\n                selector = 'customize-control-' + id + '-control',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" id=\"' + selector + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                updater: function (value) {\n                    this.control.setValue(value, true);\n                },\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        value: params.value || \"\",\n                        button_label: \"Select Gradient\",\n                        id: id || '',\n                        settings: {\n                            default: id || ''\n                        }\n                    }\n                ),\n                value: params.value || \"\",\n                selector: selector\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.typography = function (id, container, params) {\n            var type = 'kirki-typography',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" id=\"customize-control-' + id +'-control\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                updater: function (value) {\n                },\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        kirkiConfig: \"global\",\n                        l10n: kirki.l10n.global,\n                        default: params.value,\n                        id: id || '',\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.sectionSeparator = function (id, container, label) {\n            var type = 'sectionseparator',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: label\n                }\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.textarea = function (id, container, params) {\n            var type = 'kirki-generic',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        value: params.value || \"\",\n                        choices: {\n                            element: 'textarea',\n                            rows: '5'\n                        }\n                    }\n                ),\n                value: params.value || \"\"\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n        CP_Customizer.createControl.controlsGroup = function (id, container, label) {\n            var type = 'sectionseparator',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-controls-container customize-control-' + type + '\" ></li>');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: label || \"\"\n                }\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n\n            return (function (result, $el, parent) {\n\n                if (!label) {\n                    result.control.container.find('.materialis-separator').remove()\n                }\n\n\n                result.parent = container;\n\n                result.free = function () {\n                    $el.remove();\n                };\n\n                result.attach = function () {\n                    parent.append($el);\n                };\n\n                result.el = function () {\n                    if (this.control.container.find('ul.holder').length === 0) {\n                        this.control.container.append('<ul class=\"holder\"></ul>');\n                    }\n                    return this.control.container.find('ul.holder');\n                };\n\n                return result;\n            })(result, $container, container);\n        };\n\n\n        CP_Customizer.createControl.controlHolder = function (id, container) {\n            var type = 'sectionsetting',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n\n        CP_Customizer.createControl.checkbox = function (id, container, label) {\n            var type = 'kirki-checkbox',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: label\n                }\n            };\n\n            return CP_Customizer.createControl(options);\n        };\n\n\n        CP_Customizer.createControl.generic = function (id, container, params) {\n            var type = 'kirki-generic',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: params.label,\n                    choices: {\n                        element: 'input',\n                        type: 'text'\n                    }\n                },\n                value: params.value\n            };\n\n            return CP_Customizer.createControl(options);\n\n\n            return result;\n        };\n\n\t\tCP_Customizer.createControl.repeater = function (id, container, params) {\n            var type = 'repeater',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n                var repeaterContent = '';\n                repeaterContent+= '<label>';\n                repeaterContent+= '<span class=\"customize-control-title\">' + params.label + '</span>';\n                repeaterContent+= '<input type=\"hidden\" ' + params + ' value=\"\" />';\n                repeaterContent+= '</label>';\n                repeaterContent+= '<ul class=\"repeater-fields\"></ul>';\n//                repeaterContent+= '<p class=\"limit\">' + params.choices.limit + '</p>';\n//                repeaterContent+= '<button class=\"button-secondary repeater-add\">Add</button>';\n                repeaterContent+= jQuery('.customize-control-repeater-content').first().prop('outerHTML');\n                $container.html(repeaterContent);\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        kirkiConfig: \"global\",\n                        l10n: kirki.l10n.global,\n                        label: params.label,\n                        default: params.value,\n                    }\n                ),\n                value: params.value\n            };\n\n            return CP_Customizer.createControl(options);\n\n\n            return result;\n        };\n\n\n        CP_Customizer.createControl.button = function (id, container, label, callback, buttonOptions) {\n            var type = 'kirki-checkbox',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-button\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            buttonOptions = _.extend(\n                {\n                    class: \"button full-width\"\n                },\n                buttonOptions\n            );\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: label\n                }\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n            result.control.container.empty();\n\n            var $button = $('<button class=\"' + buttonOptions.class + '\" />');\n            $button.text(label);\n            $button.off('click').on('click', function (event) {\n                event.stopPropagation();\n                event.preventDefault();\n                callback.call(this, event);\n            });\n\n            result.control.container.append($button);\n\n            return result;\n        };\n\n\t\tCP_Customizer.createControl.buttonGroup = function (id, container, params, callback, buttonOptions) {\n            var type = 'sidebar-button-group',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-button\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            buttonOptions = _.extend(\n                {\n                    class: \"button full-width\"\n                },\n                buttonOptions\n            );\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: _.extend(\n                    params,\n                    {\n                        popup: id\n                    }\n                ),\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n            return result;\n        };\n\n\n        CP_Customizer.createControl.info = function (id, container, content) {\n            var type = 'kirki-checkbox',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-info\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: \"\"\n                }\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n            result.control.container.empty();\n\n            result.control.container.append($('<p/>').append(content));\n\n\n            return result;\n        };\n\n        CP_Customizer.createControl.infoPRO = function (id, container, content) {\n\n            if (CP_Customizer.IS_PRO) {\n                return;\n            }\n\n            var type = 'kirki-checkbox',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-info-pro\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    label: \"\"\n                }\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n            result.control.container.empty();\n\n            result.control.container.append($('<p/>').append(content));\n\n\n            return result;\n        };\n\n\n        CP_Customizer.createControl.sortable = function (id, container, itemTemplate, label) {\n            var type = 'sectionsetting',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var options = {\n                id: id || '',\n                type: type,\n                container: $container,\n                params: {\n                    itemTemplate: itemTemplate,\n                    label: label\n                }\n            };\n\n            var result = CP_Customizer.createControl(options);\n\n            result.control.attachControls = function () {\n            };\n            result.control.free = function () {\n                this.container.find('.setting-control-container').empty();\n                try {\n                    this.container.sortable('destroy');\n                } catch (e) {\n\n                }\n            };\n\n            result.control.onStop = function () {\n            };\n\n            result.control.setItems = function (items, afterCreation) {\n                var control = this;\n                var itemContainer = this.container.find('.setting-control-container');\n\n\n                for (var i = 0; i < items.length; i++) {\n                    var item = items[i];\n                    var html = control.params.itemTemplate(item);\n\n                    if (afterCreation) {\n                        html = $(html);\n                        afterCreation(html, item);\n                    }\n\n                    itemContainer.append(html);\n                }\n\n                itemContainer.sortable({\n                    axis: \"y\",\n                    handle: \".handle\",\n                    stop: function (event, ui) {\n                        result.control.onStop(event, ui);\n                    }\n                });\n\n            };\n\n\n            return result;\n        }\n\n        CP_Customizer.createControl.number = function (id, container, options) {\n\n            options = options || {};\n\n            options.choices = _.extend({\n                min: 0,\n                max: 100,\n                step: 1\n            }, options.choices || {});\n\n            var type = 'kirki-number',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n\n            var controlOptions = {\n                id: id || '',\n                updater: function (value) {\n                    var thisInput = this.controlContainer.find('input');\n                    thisInput.val(value);\n                    thisInput.change();\n                },\n                type: type,\n                container: $container,\n                params: {\n                    label: options.label,\n                    default: options.default,\n                    choices: options.choices\n                },\n                value: options.default\n            };\n\n            return CP_Customizer.createControl(controlOptions);\n        }\n\n        CP_Customizer.createControl.spacing = function (id, container, options) {\n            if (!options.sides) {\n                options.sides = ['top', 'bottom'];\n            }\n\n            var type = 'kirki-spacing',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n            var sides = {};\n            var controls = {};\n\n            for (var i = 0; i < options.sides.length; i++) {\n                sides[options.sides[i]] = \"0px\";\n                controls[options.sides[i]] = true;\n            }\n\n            var controlOptions = {\n                id: id || '',\n                updater: function (value) {\n\n                    for (var key in value) {\n                        var $input = this.controlContainer.find('.' + key + '.input-wrapper > input');\n                        $input.val(value[key]);\n                    }\n\n                },\n                type: type,\n                container: $container,\n                params: {\n                    kirkiConfig: \"global\",\n                    l10n: kirki.l10n.global,\n                    label: options.label,\n                    default: sides,\n                    choices: {\n                        controls: controls\n                    }\n                },\n                value: sides\n            };\n\n            kirkiNotifications(id, type, 'global');\n\n            return CP_Customizer.createControl(controlOptions);\n        };\n\n        CP_Customizer.createControl.dimension = function (id, container, options) {\n\n            options = options || {};\n\n            var type = 'kirki-dimension',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n\n            var controlOptions = {\n                id: id || '',\n                updater: function (value) {\n                    var $input = this.controlContainer.find('.input-wrapper > input');\n                    $input.val(value);\n\n                },\n                type: type,\n                container: $container,\n                params: {\n                    kirkiConfig: \"global\",\n                    l10n: kirki.l10n.global,\n                    label: options.label,\n                    default: options.default || \"0px\"\n                },\n                value: options.default || \"0px\"\n            };\n\n            kirkiNotifications(id, type, 'global');\n\n            return CP_Customizer.createControl(controlOptions);\n        }\n\n        CP_Customizer.createControl.slider = function (id, container, options) {\n\n            options = options || {};\n\n            options.choices = _.extend({\n                min: 0,\n                max: 100,\n                step: 1,\n                default: 0\n            }, options.choices || {});\n\n            var type = 'kirki-slider',\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\n\n            if (container) {\n                $(container).append($container);\n            }\n\n\n            var controlOptions = {\n                id: id || '',\n                updater: function (value) {\n                    var thisInput = this.controlContainer.find('input');\n                    thisInput.val(value);\n                    thisInput.change();\n                    thisInput.siblings('.kirki_range_value').find('.value').text(value);\n\n                },\n                onAttach: function (value) {\n                    var thisInput = this.controlContainer.find('input');\n                    thisInput.attr('data-reset_value', value);\n                    thisInput.data('reset_value', value);\n                },\n                type: type,\n                container: $container,\n                params: {\n                    kirkiConfig: \"global\",\n                    l10n: kirki.l10n.global,\n                    label: options.label,\n                    default: options.default,\n                    choices: options.choices\n                },\n                value: options.default\n            };\n\n            kirkiNotifications(id, type, 'global');\n\n            return CP_Customizer.createControl(controlOptions);\n        }\n    });\n\n})(window, CP_Customizer, jQuery);\n\n\n(function (root, CP_Customizer, $) {\n    CP_Customizer.addModule(function (CP_Customizer) {\n        var $sectionSettingsContainer = $(\"#cp-section-setting-popup .section-settings-container\");\n\n        CP_Customizer.hooks.doAction('section_panel_before_dimensions', $sectionSettingsContainer); // #####\n\n        CP_Customizer.hooks.addAction('right_sidebar_opened', function (sidebarId, data) {\n            if (sidebarId !== 'cp-section-setting') {\n                return;\n            }\n\n            CP_Customizer.panels.sectionPanel.init(data);\n            CP_Customizer.panels.sectionPanel.update(data);\n            CP_Customizer.hooks.doAction('section_sidebar_opened', data);\n        });\n\n\n        var baseArea = {\n\n            __controls: {},\n\n            priority: 100,\n\n            extend: function (options) {\n                return _.extend(this, options);\n            },\n\n            init: function () {\n            },\n            update: function () {\n            },\n\n            disable: function () {\n                for (var item in this.__controls) {\n                    this.__controls[item].hide();\n                }\n                this.enabled = false;\n            },\n            enable: function () {\n                for (var item in this.__controls) {\n                    this.__controls[item].show();\n                }\n                this.enabled = true;\n            },\n\n\n            _exclude: false,\n\n            exclude: function () {\n                this._exclude = true;\n            },\n\n            include: function () {\n                this._exclude = false;\n            },\n\n            canInclude: function () {\n                return !this._exclude;\n            },\n\n            getPrefixed: function (data) {\n                return this.name + '-' + data;\n            },\n\n            areaTitle: false,\n\n\n            initAreaTitle: function ($container) {\n                if (this.areaTitle) {\n                    var separator = CP_Customizer.createControl.sectionSeparator(\n                        this.getPrefixed('area-title'),\n                        $container,\n                        this.areaTitle\n                    );\n                    this.addToControlsList(separator);\n                }\n            },\n\n            hideAll:function(){\n                for(var control in this.__controls){\n                    this.__controls[control].hide();\n                }\n            },\n\n            showAll:function(){\n                for(var control in this.__controls){\n                    this.__controls[control].show();\n                }\n            },\n\n            addToControlsList: function (control) {\n                this.__controls[control.id] = control;\n            },\n\n            getControl: function (id) {\n                if (this.__controls[id]) {\n                    return this.__controls[id];\n                }\n\n                if (this.__controls[this.getPrefixed(id)]) {\n                    return this.__controls[this.getPrefixed(id)];\n                }\n\n                return null;\n            },\n\n            wrapOriginal: function (originalName, newFunction) {\n                if (_.isFunction(this[originalName])) {\n                    this[originalName] = _.wrap(this[originalName], newFunction);\n                }\n            }\n        };\n\n\n        var panelBase = {\n            _areas: {},\n            _initialized: false,\n\n            extend: function (options) {\n                return _.extend(this, options);\n            },\n\n            registerArea: function (name, options, forceOverride) {\n\n                var settings = _.extend(\n                    CP_Customizer.utils.deepClone(baseArea),\n                    options\n                );\n\n                if (!this._areas[name] || forceOverride === true) {\n                    this._areas[name] = _.extend({\n                        enabled: true,\n                        name: name\n                    }, settings);\n\n\n                }\n\n                return this._areas[name];\n            },\n\n            hasArea: function (name) {\n                return !_.isUndefined(this._areas[name]);\n            },\n\n            getArea: function (name) {\n                return this._areas[name];\n            },\n\n            init: function (data) {\n                if (this._initialized) {\n                    return;\n                }\n\n                this._initialized = true;\n\n\n                var self = this;\n\n                // sort asc by priority\n                var areas = Object.getOwnPropertyNames(this._areas).sort(function (a, b) {\n                    return self._areas[a].priority - self._areas[b].priority;\n                });\n\n                areas = CP_Customizer.hooks.applyFilters('section_sidebar_sort_areas', areas);\n\n                areas.forEach(function (area) {\n                    if (self._areas[area] && self._areas[area].canInclude()) {\n                        CP_Customizer.hooks.doAction('before_section_sidebar_area_' + name, $sectionSettingsContainer);\n\n                        self._processExtendAreaQueue(self._areas[area]);\n\n                        self._areas[area].initAreaTitle($sectionSettingsContainer);\n                        self._areas[area].init($sectionSettingsContainer);\n\n                        CP_Customizer.hooks.doAction('after_section_sidebar_area_' + name, $sectionSettingsContainer);\n                    }\n                });\n\n                this.update(data);\n            },\n\n            update: function (data) {\n\n                data.sectionExports = CP_Customizer.getSectionExports(data.section);\n\n                for (var area in this._areas) {\n\n                    if (this._areas[area].canInclude()) {\n\n                        CP_Customizer.hooks.doAction('update_before_section_sidebar_area_' + name, data);\n                        this._areas[area].update(data);\n                        CP_Customizer.hooks.doAction('update_after_section_sidebar_area_' + name, data);\n\n                    }\n                }\n            },\n            disableArea: function (name) {\n                if (this._areas[name] && this._areas[name].enabled) {\n                    this._areas[name].enabled = false;\n                    this._areas[name].disable();\n                }\n            },\n            enableArea: function (name) {\n                if (this._areas[name] && !this._areas[name].enabled) {\n                    this._areas[name].enabled = false;\n                    this._areas[name].enable();\n                }\n            },\n\n            excludeArea: function (name) {\n                if (this._areas[name]) {\n                    this._areas[name].exclude();\n                }\n            },\n\n            _areasToExtend: {},\n\n            _processExtendAreaQueue: function (area) {\n                var extendCallback = this._areasToExtend[area.name];\n\n                if (extendCallback) {\n                    extendCallback(area)\n                }\n            },\n\n            extendArea: function (name, callback) {\n                if (this._areas[name]) {\n                    callback(this._areas[name]);\n                } else {\n                    if (!this._areasToExtend[name]) {\n                        this._areasToExtend[name] = callback;\n                    }\n                }\n            }\n        };\n\n        CP_Customizer.panels = CP_Customizer.panel || {};\n        CP_Customizer.panels.panelBase = panelBase;\n        CP_Customizer.panels.panelArea = baseArea;\n\n        CP_Customizer.panels.instantiate = function (config) {\n            return _.extend(CP_Customizer.utils.deepClone(panelBase), config || {});\n        };\n\n        CP_Customizer.panels.sectionPanel = _.extend(CP_Customizer.panels.sectionPanel || {}, panelBase);\n\n    });\n\n})(window, CP_Customizer, jQuery);\n","(function (root, CP_Customizer, $) {\n\n    var containerTemplate = $('' +\n        '<li id=\"cp-current-page-settings-popup\" class=\"customizer-right-section\">' +\n        '    <span data-close-right-sidebar=\"true\" title=\"' + window.CP_Customizer.translateCompanionString('Close Panel') + '\" class=\"close-panel\"></span>' +\n        '    <ul class=\"current-page-settings-container section-settings-container accordion-section-content no-border\"></ul>' +\n        ' </li>');\n\n    CP_Customizer.addModule(function (CP_Customizer) {\n\n        var control = wp.customize.panel('page_content_panel');\n        control.container.append(containerTemplate);\n\n        var $container = $(\"#cp-current-page-settings-popup .current-page-settings-container\");\n\n        CP_Customizer.panels.pageContentPanel = CP_Customizer.panels.instantiate({\n            init: function (data) {\n                if (this._initialized) {\n                    return;\n                }\n\n                this._initialized = true;\n\n                var self = this;\n\n                // sort asc by priority\n                var areas = Object.getOwnPropertyNames(this._areas).sort(function (a, b) {\n                    return self._areas[a].priority - self._areas[b].priority;\n                });\n\n                areas = CP_Customizer.hooks.applyFilters('page_settings_sidebar_sort_areas', areas);\n\n                areas.forEach(function (area) {\n                    if (self._areas[area] && self._areas[area].canInclude()) {\n                        CP_Customizer.hooks.doAction('before_page_settings_sidebar_area_' + name, $container);\n\n                        self._processExtendAreaQueue(self._areas[area]);\n                        self._areas[area].initAreaTitle($container);\n                        self._areas[area].init($container);\n\n                        CP_Customizer.hooks.doAction('after_page_settings_sidebar_area_' + name, $container);\n                    }\n                });\n\n                this.update(data);\n            },\n            update: function (data) {\n                for (var area in this._areas) {\n\n                    if (this._areas[area].canInclude()) {\n\n                        CP_Customizer.hooks.doAction('update_before_page_settings_sidebar_area_' + name, data);\n                        this._areas[area].update(data);\n                        CP_Customizer.hooks.doAction('update_after_page_settings_sidebar_area_' + name, data);\n\n                    }\n                }\n            }\n        });\n\n        CP_Customizer.hooks.addAction('right_sidebar_opened', function (sidebarId) {\n            if (sidebarId !== 'cp-current-page-settings') {\n                return;\n            }\n\n            var data = {\n                'id': CP_Customizer.preview.data('pageID')\n            };\n\n            CP_Customizer.panels.pageContentPanel.init(data);\n            CP_Customizer.panels.pageContentPanel.update(data);\n            CP_Customizer.hooks.doAction('page_setting_sidebar_opened', {});\n        });\n    });\n\n})(window, CP_Customizer, jQuery);","(function (root, CP_Customizer, $) {\n    CP_Customizer.addModule(function (CP_Customizer) {\n        CP_Customizer.hooks.addFilter('section_fixed_overlay_options', function (options, type) {\n\n            var item = {\n\n                name: \"section_more_settings_button\",\n                title:  window.CP_Customizer.translateCompanionString(\"Section Settings\"),\n\n                on_click: function (node) {\n                    var section = node;\n\n                    if (!section.parent().is(CP_Customizer.preview.getRootNode())) {\n                        section = node.parentsUntil(top.CP_Customizer.preview.getRootNode()).last();\n                    }\n\n                    section = CP_Customizer.hooks.applyFilters('filter_cog_item_section_element', section, node);\n\n                    CP_Customizer.wpApi.panel('page_content_panel').focus()\n                    CP_Customizer.openRightSidebar(\"cp-section-setting\", {\n                        section: section\n                    });\n                }\n\n            };\n\n            if (type === \"section\" && options && !itemExists(options, item.name)) {\n                options.items.push(item);\n            }\n\n            return options;\n        });\n\n\n        CP_Customizer.hooks.addFilter('section_fixed_overlay', function (options, key) {\n\n            var tempOptions = _.clone(options);\n\n            if (key === \"items\") {\n                if (_.isArray(tempOptions)) {\n                    tempOptions.forEach(function (item, index, optionsList) {\n                        if (item.name === \"section_color_changer\" || item.name === \"columns_reorder\") {\n                            if (item.on_hover) {\n                                delete item.on_hover;\n                            }\n\n                            item.classes = \"\";\n\n                            item.on_click = function (node) {\n                                var section = node;\n\n                                if (!section.parent().is(CP_Customizer.preview.getRootNode())) {\n                                    section = node.parentsUntil(top.CP_Customizer.preview.getRootNode()).last();\n                                }\n\n                                section = CP_Customizer.hooks.applyFilters('filter_cog_item_section_element', section, node);\n\n                                CP_Customizer.wpApi.panel('page_content_panel').focus()\n                                CP_Customizer.openRightSidebar(\"cp-section-setting\", {\n                                    section: section\n                                });\n                            }\n                        }\n\n                        if (item.name === \"page_background_image\") {\n                            delete optionsList[index];\n                        }\n                    });\n                }\n\n                // do return empty array slots\n                var result = tempOptions.filter(function (item) {\n                    return item;\n                });\n            } else {\n                result = options;\n            }\n\n\n            return result;\n        });\n\n        function itemExists(options, name) {\n\n            if (options && options.items) {\n                for (var i = 0; i < options.items.length; i++) {\n                    var item = options.items[i];\n\n                    if (item.name === name) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n\n        CP_Customizer.hooks.addFilter('section_fixed_overlay_options', function (options, type) {\n\n            var item = {\n\n                name: \"section_more_settings_button\",\n                title: window.CP_Customizer.translateCompanionString(\"Section Settings\"),\n\n                on_click: function (node) {\n                    var section = node;\n\n                    if (!section.parent().is(CP_Customizer.preview.getRootNode())) {\n                        section = node.parentsUntil(top.CP_Customizer.preview.getRootNode()).last();\n                    }\n\n                    section = CP_Customizer.hooks.applyFilters('filter_cog_item_section_element', section, node);\n\n                    CP_Customizer.wpApi.panel('page_content_panel').focus()\n                    CP_Customizer.openRightSidebar(\"cp-section-setting\", {\n                        section: section\n                    });\n                }\n\n            };\n\n            if (type === \"section\" && options && !itemExists(options, item.name)) {\n                options.items.push(item);\n            }\n\n            return options;\n        });\n    });\n\n})(window, CP_Customizer, jQuery);\n\n\n(function (root, CP_Customizer, $) {\n    CP_Customizer.addModule(function (CP_Customizer) {\n        var sectionPanel = CP_Customizer.panels.sectionPanel;\n        sectionPanel.registerArea('background_color', {\n            init: function ($container) {\n\n                var separator = CP_Customizer.createControl.sectionSeparator(\n                    this.getPrefixed('separator'),\n                    $container,\n                    window.CP_Customizer.translateCompanionString('Background Color')\n                );\n\n                this.addToControlsList(separator);\n\n                var palette = CP_Customizer.createControl.palette(\n                    this.getPrefixed('background-color'),\n                    $container,\n                    {\n                        value: '#ffffff',\n                        label: window.CP_Customizer.translateCompanionString('Background Color'),\n                        palette: ['#ffffff', '#F5FAFD']\n                    });\n\n                this.addToControlsList(palette);\n\n                CP_Customizer.createControl.infoPRO(\n                    this.getPrefixed('section-bg-pro-info'),\n                    $container,\n                    '<span>' + window.CP_Customizer.translateCompanionString(\"More section design options available in PRO\") + '</span><br/> ' +\n                    '<a href=\"https://extendthemes.com/go/materialis-upgrade\" class=\"button button-small button-orange upgrade-to-pro\" target=\"_blank\">' +\n                     '' + window.CP_Customizer.translateCompanionString(\"Check all PRO features\") + '</a>'\n                )\n            },\n            update: function (data) {\n                var image = CP_Customizer.utils.normalizeBackgroundImageValue((getComputedStyle(data.section[0]).backgroundImage || \"\")) || false;\n                image = (image && image !== \"none\" && !image.endsWith('/none')) ? image : false;\n                var color = getComputedStyle(data.section[0]).backgroundColor;\n\n                if (image) {\n\n                    this.disable();\n                    return;\n                }\n\n                this.enable();\n\n                var palette = this.getControl('background-color');\n\n                palette.attachWithSetter(color, function (value) {\n\n                    data.section.css({\n                        'background-image': 'none',\n                        'background-color': value\n                    });\n\n                    CP_Customizer.updateState();\n                });\n            }\n        });\n\n        sectionPanel.registerArea('background_image', {\n            init: function ($container) {\n\n                var separator = CP_Customizer.createControl.sectionSeparator(\n                    this.getPrefixed('separator'),\n                    $container,\n                    window.CP_Customizer.translateCompanionString('Background Image')\n                );\n\n                this.addToControlsList(separator);\n\n                var bgImage = CP_Customizer.createControl.image(\n                    this.getPrefixed('image'),\n                    $container,\n                    {\n                        value: '',\n                        label: window.CP_Customizer.translateCompanionString('Background Image')\n                    });\n\n                this.addToControlsList(bgImage);\n            },\n\n            update: function (data) {\n                var image = CP_Customizer.utils.normalizeBackgroundImageValue((getComputedStyle(data.section[0]).backgroundImage || \"\")) || false;\n                image = (image && image !== \"none\" && !image.endsWith('/none')) ? image : false;\n\n\n                var bgImage = this.getControl('image');\n\n                if (!image) {\n                    this.disable();\n                    return;\n                }\n\n                this.enable();\n\n                bgImage.attachWithSetter(image, function (value) {\n\n                    if (value) {\n                        value = 'url(\"' + value + '\")';\n                    } else {\n                        value = \"\";\n                    }\n                    data.section.css({\n                        'background-color': 'none',\n                        'background-image': value,\n                        'background-size': 'cover',\n                        'background-position': 'center top'\n                    });\n\n\n                    CP_Customizer.updateState();\n                });\n            }\n        });\n\n\n        sectionPanel.registerArea('content_align', {\n            init: function ($container) {\n\n                var separator = CP_Customizer.createControl.sectionSeparator(\n                    this.getPrefixed('separator'),\n                    $container,\n                    window.CP_Customizer.translateCompanionString('Content Align')\n                );\n\n                this.addToControlsList(separator);\n\n                var textAlign = CP_Customizer.createControl.select(\n                    this.getPrefixed('text_align'),\n                    $container,\n                    {\n                        value: '',\n                        label:  window.CP_Customizer.translateCompanionString('Content align'),\n                        choices: {\n                            'content-align-default': window.CP_Customizer.translateCompanionString('Default'),\n                            'content-left-sm': window.CP_Customizer.translateCompanionString('Left'),\n                            'content-center-sm': window.CP_Customizer.translateCompanionString('Center'),\n                            'content-right-sm': window.CP_Customizer.translateCompanionString('Right')\n                        }\n                    });\n\n                this.addToControlsList(textAlign);\n            },\n\n            update: function (data) {\n                var section = data.section;\n                var sectionExports = CP_Customizer.getSectionExports(section);\n\n                if (!sectionExports.contentAligns) {\n                    this.disable();\n                    return;\n                }\n\n                this.enable();\n\n                var selector = sectionExports.contentAligns.join(' , '),\n                    $alignHolders = section.find(selector);\n\n                if (section.is(selector)) {\n                    $alignHolders = $alignHolders.add(section);\n                }\n\n                var textAlign = this.getControl('text_align');\n                var textAlignClasses = ['content-left-sm', 'content-center-sm', 'content-right-sm'];\n                var currentTextAlign = CP_Customizer.utils.nodeMatchingClasses($alignHolders, textAlignClasses, true);\n\n                textAlign.attachWithSetter(\n                    currentTextAlign || 'content-align-default',\n                    function (value, oldValue) {\n                        if (oldValue.trim()) {\n                            $alignHolders.each(function () {\n                                $(this).removeClass(oldValue);\n                            })\n                        }\n                        if (value.trim() && value !== 'content-align-default') {\n                            $alignHolders.each(function () {\n                                $(this).addClass(value);\n                            })\n                        }\n                    }\n                );\n            }\n        });\n\n\n        // frame box\n        sectionPanel.registerArea('frame', {\n            init: function ($container) {\n                var frameSeparator = CP_Customizer.createControl.sectionSeparator(this.getPrefixed('separator'),\n                    $container, window.CP_Customizer.translateCompanionString('Frame Settings'));\n                this.addToControlsList(frameSeparator);\n                $groupEl = $container;\n                var frameType = CP_Customizer.createControl.select(this.getPrefixed('type'), $groupEl, {\n                    value: '',\n                    label: window.CP_Customizer.translateCompanionString('Type'),\n                    choices: {\n                        \"background\": window.CP_Customizer.translateCompanionString(\"background\"),\n                        \"border\": window.CP_Customizer.translateCompanionString(\"border\")\n                    }\n                });\n                this.addToControlsList(frameType);\n                var frameColor = CP_Customizer.createControl.color(this.getPrefixed('color'), $groupEl, {\n                    value: '#ffffff',\n                    label:  window.CP_Customizer.translateCompanionString('Color')\n                });\n\n                this.addToControlsList(frameColor);\n\n                var frameOffsetX = CP_Customizer.createControl.slider(this.getPrefixed('offs-x'), $groupEl, {\n                    label: window.CP_Customizer.translateCompanionString('Offset X'),\n                    choices: {\n                        min: -100,\n                        max: 100,\n                        step: 1\n                    }\n                });\n\n                this.addToControlsList(frameOffsetX);\n                var frameOffsetY = CP_Customizer.createControl.slider(this.getPrefixed('offs-y'), $groupEl, {\n                    label: window.CP_Customizer.translateCompanionString('Offset Y'),\n                    choices: {\n                        min: -100,\n                        max: 100,\n                        step: 1\n                    }\n                });\n\n                this.addToControlsList(frameOffsetY);\n                var frameWidth = CP_Customizer.createControl.slider(this.getPrefixed('width'), $groupEl, {\n                    label: window.CP_Customizer.translateCompanionString('Width'),\n                    choices: {\n                        min: 1,\n                        max: 200,\n                        step: 1\n                    }\n                });\n\n                this.addToControlsList(frameWidth);\n                var frameHeight = CP_Customizer.createControl.slider(this.getPrefixed('height'), $groupEl, {\n                    label: window.CP_Customizer.translateCompanionString('Height'),\n                    choices: {\n                        min: 1,\n                        max: 200,\n                        step: 1\n                    }\n                });\n                this.addToControlsList(frameHeight);\n\n                var frameHideOnMobile = CP_Customizer.createControl.checkbox(\n                    this.getPrefixed('hide-on-mobile'),\n                    $groupEl,\n                    window.CP_Customizer.translateCompanionString('Hide on mobile')\n                );\n\n                this.addToControlsList(frameHideOnMobile);\n\n\n            },\n            update: function (data) {\n                var section = data.section;\n                var hasFrame = section.find('.overlay-box').length > 0;\n                if (!hasFrame) {\n                    this.disable();\n                    return;\n                }\n                this.enable();\n                if (hasFrame) {\n                    var frameType = this.getControl('type');\n                    var frameWidth = this.getControl('width');\n                    var frameHeight = this.getControl('height');\n                    var frameOffsetX = this.getControl('offs-x');\n                    var frameOffsetY = this.getControl('offs-y');\n                    var frameColor = this.getControl('color');\n                    var frameHideOnMobile = this.getControl('hide-on-mobile');\n\n                    var nodeSel = \".overlay-box .overlay-box-offset\";\n\n\n                    var selector = '[data-id=\"' + section.attr('data-id') + '\"] ' + nodeSel;\n                    var node = section.find(nodeSel);\n\n                    frameHideOnMobile.attachWithSetter(node.hasClass(\"hide-xs\"), function (value) {\n                        if (value === true) {\n                            node.addClass(\"hide-xs\");\n                        } else {\n                            node.removeClass(\"hide-xs\");\n                        }\n                    });\n\n                    function getProp(name) {\n                        return (CP_Customizer.contentStyle.getNodeProp(node, selector, null, name));\n                    }\n\n                    function setProp(name, value) {\n                        CP_Customizer.contentStyle.setProp(selector, null, name, value);\n                    }\n\n                    function getFrameType() {\n                        var type = \"background\";\n                        if (node.hasClass(\"offset-border\")) {\n                            type = \"border\";\n                        }\n                        return type;\n                    }\n\n                    frameType.attachWithSetter(getFrameType(), function (value) {\n                        if (value == \"border\") {\n                            node.removeClass(\"offset-background\");\n                            node.addClass(\"offset-border\");\n                            setProp(value + '-color', getProp('background-color'));\n                            setProp('background-color', 'transparent');\n                        }\n                        if (value == \"background\") {\n                            node.addClass(\"offset-background\");\n                            node.removeClass(\"offset-border\");\n                            setProp(value + '-color', getProp('border-color'));\n                            setProp('border-color', 'transparent');\n                        }\n                    });\n\n                    frameColor.attachWithSetter(getProp(getFrameType() + '-color'), function (value) {\n                        setProp(getFrameType() + '-color', value);\n                    });\n\n                    frameHeight.attachWithSetter(parseInt(getProp('height')), function (value) {\n                        setProp('height', value + \"%\");\n                    });\n\n                    frameWidth.attachWithSetter(parseInt(getProp('width')), function (value) {\n                        setProp('width', value + \"%\");\n                    });\n\n                    function getTranslate() {\n                        var transform = getProp('transform');\n                        var translate = transform.match(/translate\\(([^,]+),([^,]+)\\)/) || [];\n                        var translateX = translate.length ? translate[1] : 0;\n                        var translateY = translate.length ? translate[2] : 0;\n                        return {\n                            'x': parseInt(translateX),\n                            'y': parseInt(translateY),\n                        }\n                    }\n\n                    function setTranslate(x, y) {\n                        var translate = getTranslate();\n                        if (!_.isUndefined(x)) {\n                            translate.x = x;\n                        }\n                        if (!_.isUndefined(y)) {\n                            translate.y = y;\n                        }\n                        setProp('transform', 'translate(' + translate.x + '%,' + translate.y + '%)');\n                    }\n\n                    var translate = getTranslate();\n                    frameOffsetX.attachWithSetter(parseInt(translate.x), function (value) {\n                        setTranslate(value, undefined);\n                    });\n\n                    frameOffsetY.attachWithSetter(parseInt(translate.y), function (value) {\n                        setTranslate(undefined, value);\n                    });\n                }\n            }\n        }); // #####\n        sectionPanel.registerArea('list_items', {\n\n            itemsListControlTemplate: '' +\n            '<div class=\"section-list-item\">' +\n            '   <div class=\"handle reorder-handler\"></div>' +\n            '   <div class=\"text\">' +\n            '           <span title=\"color item\" class=\"featured-item color\"></span>' +\n            '           <span><%= text %></span>' +\n            '   </div>' +\n            '</div>' +\n            '',\n\n            init: function ($container) {\n                this.controls = [];\n\n                var itemOptionsControl = CP_Customizer.createControl.sectionSeparator(\n                    this.getPrefixed('title_separator'),\n                    $container,\n                    window.CP_Customizer.translateCompanionString('Items Options')\n                );\n\n                this.addToControlsList(itemOptionsControl);\n\n                var itemsAlign = CP_Customizer.createControl.select(\n                    this.getPrefixed('items_align'),\n                    $container,\n                    {\n                        value: '',\n                        label: window.CP_Customizer.translateCompanionString('Items align'),\n                        choices: {\n                            'items-align-default': window.CP_Customizer.translateCompanionString('Default'),\n                            'start-sm': window.CP_Customizer.translateCompanionString('Left'),\n                            'center-sm': window.CP_Customizer.translateCompanionString('Center'),\n                            'end-sm': window.CP_Customizer.translateCompanionString('Right')\n                        }\n                    });\n                this.addToControlsList(itemsAlign);\n\n                var textAlign = CP_Customizer.createControl.select(\n                    this.getPrefixed('text_align'),\n                    $container,\n                    {\n                        value: '',\n                        label: window.CP_Customizer.translateCompanionString('Item content align'),\n                        choices: {\n                            'content-align-default': window.CP_Customizer.translateCompanionString('Default'),\n                            'content-left-sm': window.CP_Customizer.translateCompanionString('Left'),\n                            'content-center-sm': window.CP_Customizer.translateCompanionString('Center'),\n                            'content-right-sm': window.CP_Customizer.translateCompanionString('Right')\n                        }\n                    });\n\n                this.addToControlsList(textAlign);\n\n                listItemsOrder = CP_Customizer.createControl.sortable(\n                    this.getPrefixed('order'),\n                    $container,\n                    _.template(this.itemsListControlTemplate),\n                    window.CP_Customizer.translateCompanionString('Items position')\n                );\n\n                listItemsOrder.control.container.append('<a class=\"add-item button-primary\">' + window.CP_Customizer.translateCompanionString(\"Add Item\") + '</a>');\n\n                this.addToControlsList(listItemsOrder);\n            },\n\n            update: function (data) {\n                var section = data.section;\n                var row = section.find('[data-type=\"row\"]');\n\n                if (!row.length || row.is('[data-content-shortcode]')) {\n                    this.disable();\n                    return;\n                }\n\n                this.enable();\n\n\n                var textAlign = this.getControl('text_align'),\n                    textAlignClasses = ['content-left-sm', 'content-center-sm', 'content-right-sm'],\n                    currentTextAlign = CP_Customizer.utils.nodeMatchingClasses(row, textAlignClasses, true),\n\n                    itemsAlign = this.getControl('items_align'),\n                    itemsAlignClasses = ['start-sm', 'center-sm', 'end-sm'],\n                    currentItemsAlign = CP_Customizer.utils.nodeMatchingClasses(row, itemsAlignClasses, true);\n\n                var sectionExports = CP_Customizer.getSectionExports(section);\n                var canAlignItems = _.isUndefined(sectionExports.canAlignRowItemsContent) || sectionExports.canAlignRowItemsContent;\n\n                if (canAlignItems) {\n                    textAlign.show();\n                    itemsAlign.show();\n                } else {\n                    textAlign.hide();\n                    itemsAlign.hide();\n                }\n\n                textAlign.attachWithSetter(\n                    currentTextAlign || 'content-align-default',\n                    function (value, oldValue) {\n                        if (oldValue.trim()) {\n                            row.removeClass(oldValue);\n                        }\n                        if (value.trim() && value !== 'content-align-default') {\n                            row.addClass(value);\n                        }\n                    }\n                );\n\n                itemsAlign.attachWithSetter(\n                    currentItemsAlign || 'items-align-default',\n                    function (value, oldValue) {\n                        if (oldValue.trim()) {\n                            row.removeClass(oldValue);\n                        }\n                        if (value.trim() && value !== 'items-align-default') {\n                            row.addClass(value);\n                        }\n                    }\n                );\n\n\n                this.setItems(section, row);\n\n                var listItemsOrder = this.getControl('order');\n\n                listItemsOrder.control.onStop = function (event, ui) {\n                    var index = ui.item.index();\n                    var node = jQuery(ui.item).data().original;\n                    root.CP_Customizer.preview.insertNode(node, node.parent(), index);\n                };\n\n                var self = this;\n                listItemsOrder.control.container.find('.add-item').unbind('click').click(function () {\n                    var $content = row.children('div').first().clone(false, false);\n\n                    $content = root.CP_Customizer.preview.cleanNode($content);\n                    root.CP_Customizer.preview.insertNode($content, row);\n\n                    self.setItems(section, row);\n                });\n\n\n                root.CP_Customizer.hooks.removeAction('section_list_item_refresh', function () {\n                    self.setItems(section, row);\n                });\n\n                root.CP_Customizer.hooks.addAction('section_list_item_refresh', function () {\n                    self.setItems(section, row);\n                });\n            },\n\n\n            getItemOptions: function (section, item) {\n\n                return {};\n            },\n\n            afterItemCreation: function (sortableItem, data) {\n                sortableItem.data('original', data.original);\n            },\n\n            setItems: function (section, row) {\n                var listItemsOrder = this.getControl('order');\n                listItemsOrder.control.free();\n\n                var items = row.children();\n                var self = this;\n\n                items = items.map(function () {\n                    var item = $(this);\n                    var title = $(this).text().replace(/\\s\\s+/g, \" \").trim();\n\n                    var headingText = $(this).find('h1,h2,h3,h4,h4,h6').eq(0);\n\n                    if (headingText.length) {\n                        title = headingText.text().replace(/\\s\\s+/g, \" \").trim();\n                    }\n\n                    title = title.trim().length ? title : \"\";\n\n                    if (!title && item.find('img').length) {\n                        title = CP_Customizer.utils.getFileInfo(item.find('img').eq(0).attr('src')).filename;\n                    }\n\n                    if (!title) {\n                        title = '[ ITEM ]';\n                    }\n\n                    title = title.replace(/(^.{1,15})(.*)$/, function (matches, firstMatch, secondMatch) {\n                        return (firstMatch || \"\").trim() + (secondMatch && secondMatch.length ? \"[...]\" : \"\");\n                    });\n\n                    return {\n                        text: title,\n                        original: $(this),\n                        options: self.getItemOptions(section, item)\n                    };\n\n                }).toArray();\n\n                listItemsOrder.control.setItems(items, function () {\n                    self.afterItemCreation.apply(self, arguments);\n                });\n\n            }\n        });\n\n        sectionPanel.registerArea('contact_form_options', {\n            init: function ($container) {\n                var separator = CP_Customizer.createControl.sectionSeparator(\n                    this.getPrefixed('separator'),\n                    $container,\n                    window.CP_Customizer.translateCompanionString('Contact Form 7 Options')\n                );\n\n                this.addToControlsList(separator);\n\n                var showInfosInOneColumn = CP_Customizer.createControl.checkbox(\n                    this.getPrefixed('show-inline-info'),\n                    $container,\n                    window.CP_Customizer.translateCompanionString('Show form controls on one column')\n                );\n\n                this.addToControlsList(showInfosInOneColumn);\n\n            },\n\n            update: function (data) {\n                var section = data.section;\n\n                if (section.attr('data-export-id').match(/contact/) && section.find('[data-content-shortcode*=\"contact-form-7\"]').length > 0) {\n                    this.enable();\n                } else {\n                    this.disable();\n                    return;\n                }\n\n                var showInfosInOneColumn = this.getControl('show-inline-info');\n                var contactFormWrapper = section.find('.contact-form-wrapper');\n                var hasInlineInfo = contactFormWrapper.is('.inline-info');\n\n                showInfosInOneColumn.attachWithSetter(!hasInlineInfo, function (value) {\n                    if (value) {\n                        contactFormWrapper.removeClass('inline-info');\n                    } else {\n                        contactFormWrapper.addClass('inline-info');\n                    }\n                    CP_Customizer.updateState();\n                })\n\n            }\n        })\n\n    });\n\n})(window, CP_Customizer, jQuery);\n","(function (root, CP_Customizer, $) {\n    CP_Customizer.addModule(function (CP_Customizer) {\n        var popup = CP_Customizer.options('featuresPopup', null);\n        var containerID = \"cp_feauture_popups_\" + Math.round(Math.random() * 10000);\n        var $container = $(\"<div/>\", {\n            id: containerID,\n            style: \"display:none\"\n        });\n\n        if (popup) {\n            $container.append(popup.content);\n            CP_Customizer.one(CP_Customizer.events.PREVIEW_LOADED, function () {\n                $('body').append($container);\n                var $tbWindow = CP_Customizer.popUp(popup.title || 'New Feature', containerID, popup.data || {\n                    class: \"ocdie-tbWindow\"\n                });\n                $tbWindow.find('[id=TB_closeWindowButton]').off('click.feature_popup').on('click.feature_popup', function (event) {\n                    jQuery.post(\n                        ajaxurl,\n                        {\n                            value: '1',\n                            action: \"companion_disable_popup\",\n                            option: 'feature_popup_' + popup.id + '_disabled',\n                            companion_disable_popup_wpnonce: popup.nonce\n                        }\n                    );\n                });\n            });\n        }\n\n    });\n\n})(window, CP_Customizer, jQuery);","(function ($) {\n\n    var listItemTemplate = _.template(\n        '<li class=\"full_row item\" data-id=\"<%= sectionID %>\">' +\n        '       <div class=\"reorder-handler\"></div>' +\n        '       <div class=\"label-wrapper\">' +\n        '  <input class=\"item-label\" value=\"<%= label %>\" />' +\n        '  <div class=\"anchor-info\">' +\n        '      #<%= id.replace(/#/,\\'\\') %>' +\n        '  </div>' +\n        '       </div>' +\n        '     <div class=\"item-hover\">' +\n        '   <% if(setting) { %>' +\n        '      <span title=\"' + window.CP_Customizer.translateCompanionString(\"Edit section settings\") + '\" data-setting=\"<%= setting %>\" class=\"item-settings\"></span>' +\n        '  <%  } %>' +\n        '  <span title=\"' + window.CP_Customizer.translateCompanionString(\"Toggle visibility in primary menu\") + '\" class=\"item-menu-visible <%= (inMenu?\\'active\\':\\'\\') %>\"></span>' +\n        '  <span title=\"' + window.CP_Customizer.translateCompanionString(\"Delete section from page\") + '\" class=\"item-remove\"></span>' +\n        '       </div>' +\n        ' </li>'\n    );\n\n    window.CP_Customizer.addModule(function (CP_Customizer) {\n        var control = wp.customize.panel('page_content_panel');\n\n        if (!control) {\n            return;\n        }\n\n        var $contentLi = control.container.eq(0);\n        // remove default events\n        $contentLi.children('h3').addBack().off();\n\n        $sectionsSidebarTogglers = $contentLi.find('.add-section-plus').add($contentLi.find('.cp-add-section'));\n\n        CP_Customizer.one(CP_Customizer.events.PREVIEW_LOADED, function () {\n            if (CP_Customizer.preview.data(\"can:change_page_settings\")) {\n                $contentLi.find('span.section-icon.setting').removeClass('hidden').click(function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    var sectionID = \"cp-current-page-settings\";\n\n                    if (CP_Customizer.isRightSidebarVisible(sectionID)) {\n                        CP_Customizer.hideRightSidebar();\n                    } else {\n                        CP_Customizer.openRightSidebar(sectionID);\n                    }\n                });\n            }\n        });\n        var sectionID = 'page_content_section';\n        $sectionsSidebarTogglers.click(function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n\n            if (CP_Customizer.isRightSidebarVisible(sectionID)) {\n                CP_Customizer.hideRightSidebar();\n                $sectionsSidebarTogglers.removeClass('active');\n            } else {\n                CP_Customizer.openRightSidebar(sectionID);\n                $sectionsSidebarTogglers.addClass('active');\n            }\n        });\n\n        CP_Customizer.focusContentSection = function (toFocus) {\n            CP_Customizer.openRightSidebar(\"page_content_section\", {\n                focus: '[data-category=' + toFocus + ']'\n            })\n        };\n\n        function getNextInArray(data, start, separator) {\n            var increments = data.filter(function (item) {\n                return item.replace(start, '').length;\n            }).map(function (item) {\n                return parseInt(item.replace(start + (separator || '--'), '')) || 0;\n            });\n\n            return increments.length ? Math.max.apply(Math, increments) + 1 : 1;\n        }\n\n        function getNextId(start) {\n            var ids = CP_Customizer.preview.getContentNodes().filter(function (item) {\n                return (item.tagName && item.tagName !== 'undefined' && item.tagName.toLowerCase() === 'div' && item.id.indexOf(start) === 0)\n            }).map(function (item) {\n                return item.id\n            });\n            return start + \"-\" + getNextInArray(ids, start, '-');\n        }\n\n        function getNextDataId(start) {\n            var dataIds = CP_Customizer.preview.getContentNodes().filter(function (item) {\n                return (item.tagName && item.tagName !== 'undefined' && item.tagName.toLowerCase() === 'div' && item.getAttribute('data-id') && (item.getAttribute('data-id') || \"\").indexOf(start) === 0)\n            }).map(function (item) {\n                return item.getAttribute('data-id')\n            });\n\n            return start + \"--\" + getNextInArray(dataIds, start);\n        }\n\n\n        CP_Customizer.preview.insertSectionFromData = function (data, skipEvent) {\n            if (data) {\n                var $content = $(data.content),\n                    dataId = getNextDataId(data.category || data.elementId);\n\n                $content.attr('id', getNextId(data.category || data.elementId));\n                $content.attr('data-id', dataId);\n\n                var index;\n\n                if (data.prepend === true || parseInt(data.prepend) === 1) {\n                    index = 0;\n                }\n\n                CP_Customizer.preview.insertContentSection($content, index);\n\n                var sectionStyle = CP_Customizer.getSectionExports(data.id).sectionStyle;\n                if (sectionStyle) {\n                    _.each(sectionStyle, function (selectors, media) {\n                        _.each(selectors, function (props, selector) {\n                            CP_Customizer.contentStyle.setProps('[data-id=\"' + dataId + '\"] ' + selector, \"\", props, media);\n                        });\n                    });\n                }\n\n                if (skipEvent !== true) {\n                    CP_Customizer.trigger('UPDATE_SECTIONS_LIST');\n                }\n            }\n\n            return {\n                index: index,\n                $content: $content\n            };\n        };\n\n        var $sectionsList = $(\"#page_full_rows\");\n\n        $sectionsList.sortable({\n            scroll: true,\n            appendTo: \"body\",\n            axis: 'y',\n            handle: '.reorder-handler',\n            start: function (event, ui) {\n                ui.placeholder.width(ui.item[0].offsetWidth);\n                ui.placeholder.height(ui.item[0].offsetHeight);\n                startPosition = ui.item.index();\n            },\n            sort: function (event, ui) {\n                if(!ui.helper.parent().is(ui.placeholder.parent())){\n                    ui.placeholder.parent().append(ui.helper)\n                }\n                ui.helper.css({\n                    'left': '18px',\n                    'position': 'fixed',\n                    'top': event.clientY\n                });\n\n            },\n            stop: function (event, ui) {\n                var node = CP_Customizer.preview.getRootNode().children('[data-id=\"' + ui.item.data('id') + '\"]');\n                var nodes = CP_Customizer.preview.getRootNode().children('[data-id]').not(node);\n                var prevNode;\n                var newPos = ui.item.index();\n                //get dropped node gutenberg comments\n                var startCommentNode = CP_Customizer.preview.getGutenbergBlockCommentStart(node.get(0));\n                var endCommentNode = CP_Customizer.preview.getGutenbergBlockCommentEnd(node.get(0));\n                \n                //get dropped node sibling \n                if (newPos < nodes.length) {\n                    prevNode = nodes.eq(newPos);\n                } else {\n                    prevNode = nodes.last();\n                }\n\n                //get dropped node sibling gutenberg comments\n                var prevNodeCommentNode = CP_Customizer.preview.getGutenbergBlockCommentStart(prevNode.get(0));\n                var prevNodeEndCommentNode = CP_Customizer.preview.getGutenbergBlockCommentEnd(prevNode.get(0));\n\n\n                if (newPos < nodes.length) {\n                    nodes.eq(newPos).before(node);\n                } else {\n                    nodes.last().after(node);\n                }\n\n                //reorder gutenberg comments to not break gutenberg sections\n                $(startCommentNode).insertBefore(node);\n                $(endCommentNode).insertAfter(node);\n\n                $(prevNodeCommentNode).insertBefore(prevNode);\n                $(prevNodeEndCommentNode).insertAfter(prevNode);\n\n                CP_Customizer.setContent();\n            }\n        });\n\n        $sectionsList.on('click', '.full_row .item-remove', function (event) {\n            event.preventDefault();\n            var sectionID = $(this).parents('.item').data('id');\n            var node = CP_Customizer.preview.getSectionByDataId(sectionID);\n            var exportID = CP_Customizer.preview.getNodeExportId(node);\n            var anchor = node.attr('id');\n\n            $(this).parents('.item').fadeOut(200);\n            CP_Customizer.hooks.doAction('before_section_remove', $(node));\n            $(node).remove();\n            $(this).parents('.item').remove();\n\n            $('[data-type=\"row-list-control\"] [data-name=\"page_content\"] [data-id=\"' + exportID + '\"]').removeClass('already-in-page');\n            CP_Customizer.updateState(false, false);\n            CP_Customizer.overlays.hideMovableOverlays();\n\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(anchor)) {\n                CP_Customizer.menu.removeAnchorFromPrimaryMenu(anchor);\n            }\n        });\n\n\n        var labelChange = _.debounce(function () {\n            var $item = $(this).closest('.full_row');\n            var node = CP_Customizer.preview.getSectionByDataId($item.data('id'));\n            var oldValue = node.attr('data-label');\n            var value = this.value.trim();\n\n            if (value === oldValue) {\n                return;\n            }\n\n            if (value.length === 0) {\n                value = oldValue;\n                this.value = oldValue;\n            }\n\n            node.attr('data-label', value);\n            node.data('label', value);\n\n            var slug = CP_Customizer.getSlug(value);\n\n            if (!slug) {\n                return;\n            }\n\n            if (CP_Customizer.preview.getRootNode().find('[id=\"' + slug + '\"]').length) {\n                var found = false,\n                    index = 1;\n                while (!found) {\n                    if (CP_Customizer.preview.getRootNode().find('[id=\"' + slug + '-' + index + '\"]').length === 0) {\n                        slug += '-' + index;\n                        found = true;\n                    } else {\n                        index++;\n                    }\n                }\n            }\n            var oldId = node.attr('id');\n            node.attr('id', slug);\n            $(this).siblings('.anchor-info').text('#' + slug);\n\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(oldId)) {\n                CP_Customizer.menu.updatePrimaryMenuAnchor(oldId, {\n                    anchor: slug,\n                    title: value\n                });\n            }\n\n            CP_Customizer.setContent();\n        }, 500);\n\n\n        $sectionsList.on('keyup', '.full_row input', labelChange);\n\n        $sectionsList.on('dblclick', '.anchor-info', function () {\n            this.contentEditable = true;\n        });\n\n        $sectionsList.on('keypress', '.anchor-info', function (event) {\n\n            if (event.which === 13) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.contentEditable = false;\n            }\n\n        });\n\n        $sectionsList.on('focusout', '.anchor-info', function () {\n            var slug = $(this).text();\n            slug = CP_Customizer.getSlug(slug);\n            $(this).text('#' + slug);\n\n            var $item = $(this).closest('.full_row');\n            var node = CP_Customizer.preview.getSectionByDataId($item.data('id'));\n            var oldId = node.attr('id');\n            node.attr('id', slug);\n            node.attr('id', slug);\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(oldId)) {\n                CP_Customizer.menu.updatePrimaryMenuAnchor(oldId, {\n                    anchor: \"#\" + slug,\n                    title: $item.find('input.item-label').val()\n                });\n            }\n\n            this.contentEditable = false;\n            CP_Customizer.setContent();\n        });\n\n\n        $sectionsList.on('click', '.full_row .item-menu-visible', function (event) {\n            event.stopPropagation();\n            event.preventDefault();\n            event.stopImmediatePropagation();\n\n            var $item = $(this).closest('.full_row'),\n                $node = CP_Customizer.preview.getSectionByDataId($item.data('id'));\n\n            if (false === CP_Customizer.menu.getPrimaryMenuID()) {\n                CP_Customizer.menu.createPrimaryMenu();\n            }\n\n            var anchor = $node.attr('id');\n            var label = $node.attr('data-label');\n\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(anchor)) {\n                CP_Customizer.menu.removeAnchorFromPrimaryMenu(anchor);\n                $(this).removeClass('active');\n            } else {\n                CP_Customizer.menu.addAnchorToPrimaryMenu(anchor, label);\n                $(this).addClass('active');\n            }\n        });\n\n        function focusSection(item) {\n\n            var section = CP_Customizer.preview.getSectionByDataId($(item).data('id'));\n\n            CP_Customizer.preview.find('html,body').animate({\n                scrollTop: section.offset().top\n            }, 500);\n\n            $(item).addClass('focused').siblings().removeClass('focused');\n\n            CP_Customizer.trigger('section_focused', section);\n        }\n\n        $sectionsList.on('click', '.full_row .item-settings', function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            var customizerSection = $(this).attr('data-setting');\n\n            var section = CP_Customizer.preview.getSectionByDataId($(this).closest('.full_row').data('id'));\n\n            if (CP_Customizer.isRightSidebarVisible(customizerSection)) {\n                CP_Customizer.hideRightSidebar();\n            }\n\n            CP_Customizer.openRightSidebar(customizerSection, {\n                floating: CP_Customizer.hooks.applyFilters('content_section_setting_float', true),\n                y: $(this).offset().top,\n                section: section\n            });\n\n            focusSection($(this).closest('.full_row'));\n\n        });\n\n\n        $sectionsList.on('click', '.full_row', function () {\n\n            var section = CP_Customizer.preview.getSectionByDataId($(this).data('id'));\n\n            if (!section.length) {\n                return;\n            }\n\n            focusSection($(this));\n\n            CP_Customizer.hideRightSidebar();\n\n\n        });\n\n        var skipableKeyCodes = [8, 46, 16, 17, 18];\n        var labelValidaton = function (event) {\n\n            if (skipableKeyCodes.indexOf(event.keyCode) === -1 && event.key.length === 1) {\n                if (!event.key.match(/[A-Za-z0-9\\s]/)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            }\n        };\n        $sectionsList.on('keydown', '.full_row input', labelValidaton);\n        \n        var gutenbergCounter = 1;\n        var isGutenbergSection = false;\n        function getListModel(elem) {\n            var $node = $(elem);\n            \n            //add gutenberg sections to list\n            isGutenbergSection = false;\n            if ($node.attr(\"class\") && $node.attr(\"class\").indexOf(\"wp-block\") !== -1 || elem.tagName == \"P\")\n            {\n                var gutenbergId = \"gutenberg-section-\" + gutenbergCounter++;\n                $node.attr({\"id\": gutenbergId, \"data-id\": gutenbergId, \"data-export-id\": gutenbergId, \"data-label\" :\"Gutenberg\"});\n                isGutenbergSection = true;\n            }\n\n            var \n                label = $node.attr('data-label') || $node.attr('id'),\n                id = $node.attr('id') || \"\",\n                sectionID = $node.attr('data-id'),\n                exportID = $node.attr('data-export-id'),\n                inMenu = CP_Customizer.menu.anchorExistsInPrimaryMenu(id),\n                setting = $node.attr('data-setting') ? $node.attr('data-setting') : false;\n            setting = CP_Customizer.hooks.applyFilters('content_section_setting', setting);\n\n            return {\n                label: label,\n                id: id,\n                setting: (isGutenbergSection? false : setting),\n                sectionID: sectionID,\n                exportID: exportID,\n                inMenu: inMenu\n            };\n        }\n\n        var openedSectionsCategories = {};\n\n        function updateSectionsList() {\n            var data = CP_Customizer.preview.getRootNode().children().map(function (index, elem) {\n                return getListModel(elem);\n            });\n\n            $sectionsList.children('.item.full_row').remove();\n\n            var availableRowsList = $('[data-type=\"row-list-control\"] [data-name=\"page_content\"]');\n            var $controlItems = availableRowsList.find('li.available-item');\n\n            var allowMultiple = (availableRowsList.closest('[data-selection=\"multiple\"]').length > 0);\n\n\n            function openCategory($category) {\n                var $this = $($category);\n\n                var $items = $this.data('items');\n\n                if (!$items || $items.length === 0) {\n                    $items = $this.nextUntil('li.category-title', 'li.available-item');\n                    $this.data('items', $items);\n                }\n\n                $items.fadeIn(50);\n                $this.attr('data-item-open', 1);\n                $this.removeAttr('data-item-closed');\n                openedSectionsCategories[$this.attr('data-category')] = true;\n            }\n\n            function closeCategory($category) {\n                var $this = $($category);\n\n                var $items = $this.data('items');\n\n                if (!$items || $items.length === 0) {\n                    $items = $this.nextUntil('li.category-title', 'li.available-item');\n                    $this.data('items', $items);\n                }\n\n                $items.fadeOut(50);\n                $this.removeAttr('data-item-open');\n                $this.attr('data-item-closed', 1);\n                openedSectionsCategories[$this.attr('data-category')] = false;\n            }\n\n\n            var $categoryTitles = availableRowsList.find('li.category-title');\n            $categoryTitles.addClass('closeable');\n            $categoryTitles.each(function (index) {\n                    if (!$(this).attr('data-item-closed')) {\n                        $(this).attr('data-item-open', 1);\n                    }\n\n                    if (index > 1 && !openedSectionsCategories[$(this).attr('data-category')]) {\n                        closeCategory($(this));\n                    }\n                }\n            );\n\n            $categoryTitles.off('click').on('click', function () {\n\n\n                if ($(this).attr('data-item-open')) {\n                    closeCategory($(this));\n                } else {\n                    openCategory($(this));\n                }\n            });\n\n\n            data.each(function (index, _data) {\n\n                // ignore elements injected by plugins and that do not match the companion structure\n                if (!_data.exportID) {\n                    return;\n                }\n\n                $sectionsList.children('.empty').before(listItemTemplate(_data));\n\n\n                if (allowMultiple && !data.once) {\n                    return;\n                }\n\n                $controlItems.filter('[data-id=\"' + _data.exportID + '\"]').addClass('already-in-page');\n            });\n\n\n            availableRowsList.parent().off('cp.item.click').on('cp.item.click', function (event, itemID, enabled) {\n                var $ = CP_Customizer.preview.jQuery();\n                var data = CP_Customizer.pluginOptions.contentSections[itemID];\n\n                if (data['pro-only']) {\n\n                    CP_Customizer.popUpInfo(window.CP_Customizer.translateCompanionString('This item requires PRO theme'),\n                        '<div class=\"pro-popup-preview-container\">' +\n                        '   <img class=\"pro-popup-preview-image\" src=\"' + data.preview + '\">' +\n                        '   <h3>' + window.CP_Customizer.translateCompanionString('This item is available only in the PRO version') + '</h3>' +\n                        '   <p>' + window.CP_Customizer.translateCompanionString('Please upgrade to the PRO version to use this item and many others.') + '</p>' +\n                        '   <br/>' +\n                        '   <a href=\"https://extendthemes.com/go/materialis-upgrade\" class=\"button button-orange\" target=\"_blank\">' +\n                        window.CP_Customizer.translateCompanionString('Upgrade to PRO') + '</a> ' +\n                        '</div>'\n                    );\n\n                    return;\n                }\n\n                var response = CP_Customizer.preview.insertSectionFromData(data, true);\n\n                var _data = getListModel(response.$content);\n\n                var $listChildren = $sectionsList.children().not('.empty')\n                if (!_.isUndefined(response.index) && $listChildren.length) {\n                    $listChildren.eq(response.index).before(listItemTemplate(_data));\n                } else {\n                    $sectionsList.children('.empty').before(listItemTemplate(_data));\n                }\n            });\n        }\n\n        CP_Customizer.bind('PREVIEW_LOADED', updateSectionsList);\n        CP_Customizer.bind('UPDATE_SECTIONS_LIST', updateSectionsList);\n\n        CP_Customizer.bind(CP_Customizer.events.RIGHT_SECTION_CLOSED, function (ev, sidebar) {\n            $contentLi.find('.cp-add-section.active').removeClass('active');\n        });\n\n        CP_Customizer.bind('content.section.hovered', function (event, $el) {\n            var sectionId = $el.attr('data-id');\n            var $item = $sectionsList.find('[data-id=\"' + sectionId + '\"]');\n            $item.addClass('focused').siblings().removeClass('focused');\n\n            if (!$item.length) {\n                return;\n            }\n\n            $item[0].scrollIntoViewIfNeeded();\n        });\n\n    });\n})(jQuery, window);\n","(function () {\n    var __templates = {};\n\n    var templateOptions = {\n        evaluate: /<#([\\s\\S]+?)#>/g,\n        interpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n        escape: /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g\n        // variable:    'data'\n    };\n\n    function template(text) {\n        text = text.split('<inline-script').join('<script');\n        text = text.split('</inline-script').join('</script');\n\n        return _.template(text, templateOptions);\n    }\n\n    function getCPTemplate(id) {\n        var text = jQuery(\"#cp-content-templates-\" + id)[0].innerHTML;\n\n        return template(text);\n    }\n\n    window.CP_Customizer.addModule(function (CP_Customizer) {\n        var contentTemplates = {\n            text: getCPTemplate(\"text\"),\n            'text-with-checkbox': getCPTemplate(\"text-with-checkbox\"),\n            link: getCPTemplate(\"link\"),\n            image: getCPTemplate(\"image\"),\n            icon: getCPTemplate(\"icon\"),\n            list: getCPTemplate(\"list\"),\n            'linked-icon': getCPTemplate(\"linked-icon\"),\n            getCPScriptTemplate: getCPTemplate\n        };\n\n        CP_Customizer.jsTPL = _.extend(CP_Customizer.jsTPL, contentTemplates);\n\n        CP_Customizer.jsTPL['select'] = template('' +\n            '<li class=\"customize-control customize-control-text\">' +\n            '    <label>' +\n            '        <span class=\"customize-control-title\">{{{  label  }}}</span>' +\n            '        <select type=\"text\" id=\"{{{ id }}}\">' +\n            '            <# jQuery.each(choices,function(index,value){ #>' +\n            '                <option value=\"{{{ value }}}\"  ><# print(CP_Customizer.translateCompanionString(index)) #></option>' +\n            '            <# }) #>' +\n            '        </select>' +\n            '        <script>' +\n            '                jQuery(\"#{{ id }}\").val(\"{{{ value }}}\") ' +\n            '        </script>' +\n            '    </label>' +\n            '</li>' +\n            '');\n\n\n        CP_Customizer.jsTPL['selectize'] = template('' +\n            ' <li class=\"customize-control customize-control-text\">' +\n            '    <label>' +\n            '        <span class=\"customize-control-title\">{{{  label  }}}</span>' +\n            '        <select {{ (data.multiple ? \\'multiple\\' : \\'\\') }} id=\"{{{ id }}}\">' +\n            '        <# var choices = _.isFunction(data.choices) ? data.choices() : data.choices #>' +\n            '        <# _.each(choices, function(label, _v) { ' +\n            '               var Vs = _.isArray(value) ? value: value.split(\\',\\').map(function(item){return item.trim()});' +\n            '               var isSelected = (Vs.indexOf(_v) !== -1)' +\n            '            #>' +\n            '           <option {{ ( isSelected ? \"selected=\\'true\\' \": \"\" ) }} value=\"{{{ _v }}}\">' +\n            '               {{{  label  }}}' +\n            '            </option>' +\n            '        <# }); #>' +\n            '        </select>' +\n            '    </label>' +\n            '    <script>' +\n            '        jQuery(\"#{{ id }}\").selectize({' +\n            '             maxItems: {{ (data.multiple ? \"null\" : \"1\") }},' +\n            '             plugins: {{{ (data.multiple ? \"[\\'remove_button\\']\" : \"[]\") }}}' +\n            '        })' +\n            '    </script>' +\n            '</li>' +\n            '');\n\n        CP_Customizer.jsTPL['selectize-remote'] = template('' +\n            '<li class=\"customize-control customize-control-selectize-remote\">' +\n            '    <label>' +\n            '        <span class=\"customize-control-title\">{{{  label  }}}</span>' +\n            '        <select id=\"{{{ id }}}\"></select>' +\n            '    </label>' +\n            '</li>' +\n            '');\n\n\n        CP_Customizer.jsTPL['checkbox'] = template('' +\n            '<li class=\"customize-control customize-control-checkbox\">' +\n            '    <span class=\"customize-control-title\">{{{  label  }}}</span>' +\n            '    <div style=\"clear: both\">' +\n            '       <label for=\"{{{ id }}}\">\\n' +\n            '           <input  {{ (value?\"checked=\\'true\\'\":\"\") }} id=\"{{{ id }}}\" type=\"checkbox\">{{ text  }}' +\n            '       </label>' +\n            '  </div>' +\n            '</li>' +\n            '');\n\n        CP_Customizer.jsTPL.compile = template;\n    });\n})();","(function () {\n    window.CP_Customizer.addModule(function (CP_Customizer) {\n\n        var iconStyles = [\n            {\n                value: 'normal',\n                label: window.CP_Customizer.translateCompanionString('Normal'),\n                classes: 'normal-shape'\n            },\n            {\n                value: 'round-bg',\n                label: window.CP_Customizer.translateCompanionString('Rounded background'),\n                classes: 'reverse round'\n            },\n            {\n                value: 'bordered',\n                label: window.CP_Customizer.translateCompanionString('Bordered'),\n                classes: 'bordered round'\n            }\n        ];\n\n\n        var iconSizes = [\n            {\n                value: 'small',\n                label: window.CP_Customizer.translateCompanionString('Small'),\n                classes: 'small'\n            },\n            {\n                value: 'normal',\n                label: window.CP_Customizer.translateCompanionString('Normal'),\n                classes: 'normal-size'\n            },\n            {\n                value: 'big',\n                label: window.CP_Customizer.translateCompanionString('Large'),\n                classes: 'big'\n            },\n            {\n                value: 'large',\n                label: window.CP_Customizer.translateCompanionString('Extra Large'),\n                classes: 'large'\n            }\n        ];\n\n        function setIconStyle(style, $icon) {\n            var toRemove = iconStyles.map(function (style) {\n                return style.classes;\n            });\n\n            var toAdd = \"\";\n\n            iconStyles.forEach(function (iconStyle) {\n                if (iconStyle.value === style) {\n                    toAdd = iconStyle.classes\n                }\n            });\n\n            $icon.removeClass(toRemove.join(' ')).addClass(toAdd);\n\n        }\n\n        function getIconStyle($icon) {\n            var result = 'normal';\n\n            iconStyles.forEach(function (style) {\n                if (style.classes.trim()) {\n                    var selector = CP_Customizer.utils.normalizeClassAttr(style.classes, true);\n                    if ($icon.is(selector)) {\n                        result = style.value;\n                    }\n                }\n            });\n            return result;\n        }\n\n\n        function setIconSize(size, $icon) {\n            var toRemove = iconSizes.map(function (size) {\n                return size.classes;\n            });\n\n            var toAdd = \"\";\n\n            iconSizes.forEach(function (iconSize) {\n                if (iconSize.value === size) {\n                    toAdd = iconSize.classes\n                }\n            });\n\n            $icon.removeClass(toRemove.join(' ')).addClass(toAdd);\n\n        }\n\n        function getIconSize($icon) {\n            var result = 'normal';\n\n            iconSizes.forEach(function (size) {\n                if (size.classes.trim()) {\n                    var selector = CP_Customizer.utils.normalizeClassAttr(size.classes, true);\n                    if ($icon.is(selector)) {\n                        result = size.value;\n                    }\n                }\n            });\n            return result;\n        }\n\n\n        // normal texts panel\n        CP_Customizer.addContainerDataHandler(CP_Customizer.TEXT_ELEMENTS, function ($el) {\n            var label =  window.CP_Customizer.translateCompanionString($el.attr('data-popup-label') || \"\");\n            var result = [\n\n                {\n                    label: label || window.CP_Customizer.translateCompanionString(\"Text\"),\n                    type: \"text\",\n                    value: $el.text().trim()\n                }\n            ];\n\n            if ($el.parent().is('a') || $el.is('.mdi')) {\n                return [];\n            }\n\n            return result;\n\n        }, function ($el, value, type, field) {\n            switch (type) {\n                case \"text\":\n                    var html = CP_Customizer.utils.htmlDecode($el.html()).replace(field.value, value);\n                    $el.html(html);\n                    break;\n            }\n        });\n\n        // containers selector\n        CP_Customizer.preview.addDataContainerSelector('[data-hover-fx]');\n\n        // link panel;\n        CP_Customizer.addContainerDataHandler('a', function ($el) {\n            var linkIsShortcode = $el.is('[data-attr-shortcode^=\"href:\"]');\n\n            var hasClass = ($el.attr('class') || \"\").trim().length > 0;\n\n            var result = [\n\n                {\n                    label: (hasClass ? window.CP_Customizer.translateCompanionString(\"Button\") : window.CP_Customizer.translateCompanionString(\"Link\"))\n                    + \" \" + window.CP_Customizer.translateCompanionString(\"Text\"),\n                    type: \"text\",\n                    value: $el.text().trim()\n                }\n            ];\n\n            if (!linkIsShortcode) {\n                result.push({\n                    label: window.CP_Customizer.translateCompanionString(\"Link\"),\n                    type: \"link\",\n                    value: {\n                        link: CP_Customizer.preview.cleanURL($el.attr('href') || \"\"),\n                        target: $el.attr('target') || \"_self\"\n                    }\n                });\n            }\n\n            return result;\n\n        }, function ($el, value, type, field) {\n            switch (type) {\n                case \"link\":\n                    $el.attr('href', value.link);\n                    $el.attr('target', value.target);\n\n                    $el.attr('data-cp-link', 1);\n\n                    break;\n                case \"text\":\n                    if (!field.name) {\n                        var html = CP_Customizer.utils.htmlDecode($el.html()).replace(field.value, value);\n                        $el.html(html);\n                    }\n                    break;\n            }\n        });\n\n\n        // list panel;\n        CP_Customizer.addContainerDataHandler('ul', function ($el) {\n            var items = $el.children('li');\n\n            items = items.map(function (index, item) {\n                return {\n                    \"label\": window.CP_Customizer.translateCompanionString(\"Item\") + \" \" + index,\n                    \"value\": jQuery(item).html(),\n                    \"id\": \"item_\" + index\n                }\n            })\n\n            var result = {\n                label: window.CP_Customizer.translateCompanionString(\"List items\"),\n                type: \"list\",\n                value: items,\n                getValue: function ($control) {\n                    var items = [];\n                    $control.children().each(function () {\n                        items.push(jQuery(this).find('.item-editor').val());\n                    })\n                    return items;\n                }\n            }\n\n            return result;\n\n        }, function ($el, items, type) {\n\n            var orig = $el.children().eq(0).clone();\n            $el.empty();\n\n            for (var i = 0; i < items.length; i++) {\n                var $item = orig.clone();\n                $item.html(items[i]);\n                $el.append($item);\n            }\n        });\n\n        // image link panel\n        CP_Customizer.addContainerDataFilter(function ($el) {\n            return !($el.is('a') && $el.children().is('img'));\n        });\n\n        CP_Customizer.addContainerDataHandler('img', function ($el) {\n\n            var mediaType = \"image\",\n                mediaData = false;\n\n            if ($el.attr('data-size')) {\n                mediaType = \"cropable\";\n                var size = $el.attr('data-size').split('x');\n\n                var section = CP_Customizer.preview.getNodeSection($el);\n                var sectionExports = CP_Customizer.getSectionExports(section);\n\n                var flexible = _.isUndefined(sectionExports.maintainCropPropotion) ? true : sectionExports.maintainCropPropotion;\n\n                if ($el.is('[data-size-flexible=false]')) {\n                    flexible = false;\n                }\n\n                mediaData = {\n                    width: size[0],\n                    height: size[1],\n                    flexible: flexible\n                };\n            }\n\n\n            var image = [{\n                label: window.CP_Customizer.translateCompanionString(\"Image\"),\n                mediaType: mediaType,\n                mediaData: mediaData,\n                type: \"image\",\n                value: ($el[0].currentSrc || $el.attr('src'))\n            }];\n\n            if ($el.parent().is('a')) {\n                image.push({\n                    label: window.CP_Customizer.translateCompanionString(\"Link\"),\n                    type: \"link\",\n                    value: {\n                        link: CP_Customizer.preview.cleanURL($el.parent().attr('href') || \"\"),\n                        target: $el.parent().attr('target') || \"_self\"\n                    }\n                });\n            }\n            return image;\n\n        }, function ($el, value, type) {\n            switch (type) {\n                case 'image':\n                    $el.attr(\"src\", value);\n                    $el.removeAttr('srcset');\n                    $el.removeAttr('src-orig');\n                    $el.removeAttr('width');\n                    $el.removeAttr('height');\n                    break;\n                case 'link':\n                    $el.parent().attr('href', value.link);\n                    $el.parent().attr('target', value.target);\n                    break;\n            }\n        });\n\n        // data-bg=[image]\n\n        function getLinkFromBgImageValue(value) {\n            value = value.replace(/url\\((.*)\\)/, \"$1\");\n            return CP_Customizer.utils.phpTrim(value, \"\\\"'\");\n        }\n\n        CP_Customizer.addContainerDataHandler('[data-bg=image]', function ($el) {\n\n            var mediaType = \"image\",\n                mediaData = false;\n\n            if ($el.attr('data-size')) {\n                mediaType = \"cropable\";\n                var size = $el.attr('data-size').split('x');\n                mediaData = {\n                    width: size[0],\n                    height: size[1]\n                };\n            }\n\n\n            return [{\n                label: window.CP_Customizer.translateCompanionString(\"Background Image\"),\n                mediaType: mediaType,\n                mediaData: mediaData,\n                type: \"image\",\n                value: getLinkFromBgImageValue($el.css('background-image'))\n            }];\n\n        }, function ($el, value, type) {\n            switch (type) {\n                case 'image':\n                    $el.css(\"background-image\", 'url(\"' + value + '\")');\n                    break;\n            }\n        });\n\n\n        // material icons icon with link\n\n        CP_Customizer.addContainerDataFilter(function ($el) {\n            return !($el.children().is('i.mdi') && $el.is('a'));\n        });\n\n        var mdiIconRegexp = /mdi\\-[a-z\\-]+/ig;\n\n        CP_Customizer.addContainerDataHandler('a i.mdi', function ($el) {\n\n            var mediaType = \"icon\",\n                mediaData = false;\n\n            var result = [{\n                label: window.CP_Customizer.translateCompanionString(\"Material Icon\"),\n                mediaType: mediaType,\n                mediaData: mediaData,\n                canHide: true,\n                type: \"linked-icon\",\n                value: {\n                    icon: $el.attr('class').match(mdiIconRegexp).pop(),\n                    link: CP_Customizer.preview.cleanURL($el.parent().attr('href') || \"\"),\n                    target: $el.parent().attr('target') || \"_self\",\n                    visible: CP_Customizer.preview.isNodeVisible($el.parent())\n                }\n            }];\n\n            if ($el.parent().is('.read-more')) {\n                result = [{\n                    label: window.CP_Customizer.translateCompanionString(\"Text\"),\n                    type: \"text\",\n                    value: $el.parent().text().trim()\n                }, {\n                    label: window.CP_Customizer.translateCompanionString(\"Link\"),\n                    type: \"link\",\n                    value: {\n                        link: CP_Customizer.preview.cleanURL($el.parent().attr('href') || \"\"),\n                        target: $el.parent().attr('target') || \"_self\"\n                    }\n                }]\n\n            }\n\n            return result;\n\n\n        }, function ($el, value, type, field) {\n\n            if (type === \"linked-icon\") {\n                var classValue = $el.attr('class');\n                classValue = classValue.replace(/mdi\\-[a-z\\-]+/ig, \"\") + \" \" + value.icon;\n                $el.attr('class', classValue);\n\n                $el.parent().attr('href', value.link);\n                $el.parent().attr('target', value.target);\n\n                value.visible = _.isUndefined(value.visible) ? true : value.visible;\n\n                if (value.visible) {\n                    CP_Customizer.preview.showNode($el.parent());\n                } else {\n                    CP_Customizer.preview.hideNode($el.parent());\n                }\n            }\n\n            if (type === \"link\") {\n                $el.parent().attr('href', value.link);\n                $el.parent().attr('target', value.target);\n                $el.parent().attr('data-cp-link', 1);\n            }\n            if (type === \"text\") {\n                $el.parent().html(value).append($el);\n            }\n        });\n\n\n        CP_Customizer.addContainerDataHandler('i.mdi', function ($el) {\n\n            var mediaType = \"icon\",\n                mediaData = false;\n\n            return [{\n                label: window.CP_Customizer.translateCompanionString(\"Material Icon\"),\n                mediaType: mediaType,\n                mediaData: mediaData,\n                canHide: $el.closest('[data-type=group]').length > 0,\n                type: \"icon\",\n                styles: iconStyles,\n                sizes: iconSizes,\n                value: {\n                    icon: $el.attr('class').match(mdiIconRegexp).pop(),\n                    style: getIconStyle($el),\n                    size: getIconSize($el),\n                    visible: CP_Customizer.preview.isNodeVisible($el)\n                }\n            }];\n\n\n        }, function ($el, value, type, prop) {\n            if (type === \"icon\") {\n                var classValue = $el.attr('class');\n                classValue = classValue.replace(/mdi\\-[a-z\\-]+/ig, \"\") + \" \" + value.icon;\n                $el.attr('class', classValue);\n\n                value.visible = _.isUndefined(value.visible) ? true : value.visible;\n\n                if (value.visible) {\n                    // $el.removeAttr('data-reiki-hidden');\n                    CP_Customizer.preview.showNode($el);\n                } else {\n                    CP_Customizer.preview.hideNode($el);\n                }\n\n                setIconStyle(value.style, $el);\n                setIconSize(value.size, $el);\n            }\n\n        });\n\n\n    });\n})();\n","/* global top */\n\n(function (root, CP_Customizer, $) {\n\n    function newColumnContent() {\n        /*\n         <div data-cpid=\"new\" class=\"column_28\" reveal-fx=\"RevealFX115\" data-scrollreveal=\"RevealFX115\">\n         <img width=\"184\" height=\"174\" src=\"@@ROOT@@/wp-content/themes/reiki-dragdrop/images/icon1.png\" data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\">\n         <h4 data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\">ON CANVAS TEXT EDITING</h4>\n         <p class=\"small_text1\" data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n         </div>\n         */\n    }\n\n    var unwrapComment = /\\/\\*!?(?:\\@preserve)?[ \\t]*(?:\\r\\n|\\n)([\\s\\S]*?)(?:\\r\\n|\\n)\\s*\\*\\//;\n\n    function getFunctionCommentTemplate(fn) {\n        //return typeof fn === 'function' ? unwrapComment.exec(fn.toString())[1] : fn;\n        if (typeof fn === 'function')\n        {\n            var exec = unwrapComment.exec(fn.toString());\n            if (exec) return exec[1];\n        } \n        return fn;\n    }\n\n    CP_Customizer.addModule(function (CP_Customizer) {\n        var $ = jQuery; // use global jquery until preview is ready\n\n        CP_Customizer.bind(CP_Customizer.events.PREVIEW_LOADED, function () {\n            // add preview jquery  spectrum plugin\n            // use preview jQuery as the $ for the next elements\n            $ = CP_Customizer.preview.jQuery();\n            $.fn.spectrum = root.jQuery.fn.spectrum;\n        });\n\n        function getColorComponent() {\n            if ($('#cp-spectrum-keeper').length) {\n                return $('#cp-spectrum-keeper');\n            }\n\n            var $template = $(\n                '   <div id=\"cp-spectrum-picker\" class=\"picker\">' +\n                '       <div class=\"bg-picker\">' +\n                '            <h5 class=\"legend\">' + window.CP_Customizer.translateCompanionString('Background Color') + '</h5>' +\n                '           <input name=\"color\" type=\"text\" />' +\n                '       </div>');\n\n            var colorPalette = root.CP_Customizer.data().bgColorPalette;\n            $template.find('[name=color]').spectrum({\n                flat: true,\n                preferredFormat: \"hex\",\n                showPaletteOnly: true,\n                color: '#ffffff',\n                palette: [colorPalette],\n                move: function (color) {\n                    if (!color) {\n                        return;\n                    }\n                    var node = $(this).closest('.node-overlay').data().node;\n                    $(this).find('[name=color]').spectrum(\"set\", color.toString());\n                    $(node).css('background-color', color.toString());\n                    $(this).closest('.cog.active').removeClass('active');\n                    CP_Customizer.markSave();\n                },\n                change: function (color) {\n                    if (!color || !$(this).closest('.node-overlay').data()) {\n                        return;\n                    }\n                    $(this).find('[name=color]').spectrum(\"set\", color.toString());\n                    var node = $(this).closest('.node-overlay').data().node;\n                    $(node).css('background-color', color.toString());\n                    $(this).closest('.cog.active').removeClass('active');\n                    CP_Customizer.markSave();\n                }\n            });\n\n            $template.find('[name=\"addImage\"]').click(function (event) {\n                var node = $(this).closest('.node-overlay').data().node;\n                CP_Customizer.openImageManager(function (image) {\n                    $(node).css('background-image', \"url(\" + image + \")\");\n                    CP_Customizer.markSave();\n                });\n            });\n\n\n            $template.find('[name=\"removeImage\"]').click(function (event) {\n                var node = $(this).closest('.node-overlay').data().node;\n                $(node).css('background-image', \"none\");\n                CP_Customizer.markSave();\n            });\n\n\n            $template.find('[name=\"coverImage\"]').click(function (event) {\n                var node = $(this).closest('.node-overlay').data().node;\n\n                if ($(this).hasClass('active')) {\n                    $(node).css('background-size', \"auto\");\n                    $(node).css('background-repeat', \"repeat\");\n                } else {\n                    $(node).css('background-size', \"cover\");\n                    $(node).css('background-repeat', \"no-repeat\");\n                }\n                CP_Customizer.markSave();\n                $(this).toggleClass('active');\n            });\n\n            function update() {\n\n                var node = $(this).closest('.node-overlay').data().node;\n\n                var backgroundColor = \"#\" + tinycolor($(node).css('background-color')).toHex();\n\n                if (colorPalette.indexOf(backgroundColor) !== -1) {\n                    $(this).closest('.cog-subitems').removeClass('disabled');\n                    $(this).find('[name=color]').spectrum(\"set\", $(node).css('background-color'));\n\n                } else {\n                    $(this).closest('.cog-subitems').addClass('disabled');\n                    var $reason = $(this).closest('.cog-subitems').children('p.disable-reason');\n\n                    if ($reason.length === 0) {\n                        $reason = $(\"<p class='disable-reason'> \" + window.CP_Customizer.translateCompanionString('This section has a custom background color') +\n                            \"<br/>\" + window.CP_Customizer.translateCompanionString('Background can be changed in PRO') + \"</p>\");\n                        $(this).closest('.cog-subitems').prepend($reason);\n                    }\n\n                }\n\n                // if ($(node).css('background-size') && $(node).css('background-size') === \"cover\") {\n                //     $template.find('[name=\"coverImage\"]').addClass('active');\n                // } else {\n                //     $template.find('[name=\"coverImage\"]').removeClass('active');\n                // }\n\n\n            }\n\n            $template.data('update', update.bind($template));\n            return $template;\n        }\n\n\n        CP_Customizer.overlays.registerFixedOverlayOptions({\n            'section': {\n                'title': function (node) {\n                    var label = $(node).attr('data-label') ? $(node).attr('data-label') + \" [\" +\n                        window.CP_Customizer.translateCompanionString('Section') + \"]\" : window.CP_Customizer.translateCompanionString('SECTION');\n                    return label;\n                },\n                'toolbarTitle': function (node) {\n                    var label = $(node).attr('data-label') ? $(node).attr('data-label') + \" [\" + window.CP_Customizer.translateCompanionString('Section') + \"]\" :\n                        window.CP_Customizer.translateCompanionString('SECTION');\n                    return label;\n                },\n                toolbar_binds: {\n                    hover: [\n                        function (event, overlay) {\n\n                            // layout toggle\n                            var $changerItem = overlay.find('[data-name=\"section_layout_width_changer\"]');\n\n                            if (!$(this).closest(CP_Customizer.preview.getPageContainerSelector()).length) {\n                                $changerItem.hide();\n                            } else {\n                                $changerItem.show();\n                            }\n\n                            if ($(this).children().is('.gridContainer')) {\n                                $changerItem.text( window.CP_Customizer.translateCompanionString('Make full width'));\n                                $changerItem.data('toMake', 'full');\n                            } else {\n                                $changerItem.text( window.CP_Customizer.translateCompanionString('Make Centered'));\n                                $changerItem.data('toMake', 'centered');\n                            }\n\n                            var $bgChanger = overlay.find('[data-name=\"page_background_image\"]');\n                            var $isTransparent = tinycolor(getComputedStyle($(this)[0]).backgroundColor).getAlpha() === 0;\n\n                            if ($isTransparent) {\n                                $bgChanger.show();\n                            } else {\n                                $bgChanger.hide();\n                            }\n                        },\n                        function () {\n                        }\n                    ]\n                },\n                'items': [{\n                    'name': 'section_layout_width_changer',\n                    'title':  window.CP_Customizer.translateCompanionString('Make full width'),\n                    'on_click': function (node) {\n                        var toMake = $(this).data().toMake;\n                        switch (toMake) {\n                            case 'centered':\n                                $(node).children().not('[class*=\"section-separator\"]').addClass('gridContainer');\n                                break;\n                            case 'full':\n                                $(node).children().not('[class*=\"section-separator\"]').removeClass('gridContainer');\n                                break;\n                        }\n                        $(this).trigger('reiki.update_overlays');\n                        CP_Customizer.hooks.doAction('section_layout_changed', node, toMake);\n                        $(this).closest('.overlay-toolbar').trigger('mouseover');\n\n                        CP_Customizer.markSave();\n                    }\n                }, {\n                    'name': 'section_color_changer',\n                    'title': window.CP_Customizer.translateCompanionString('Change background'),\n                    'classes': 'subitems-arrow',\n                    'on_hover': [function () {\n                        var $subitemsContainer = $(this).children('.cog-subitems').length ? $(this).children('.cog-subitems') : $(\"<div class='cog-subitems' />\");\n                        $brush = getColorComponent();\n\n                        $subitemsContainer.empty();\n                        $subitemsContainer.appendTo($(this));\n\n                        $subitemsContainer.append($brush);\n                        $brush.data('update')();\n                    }, function () {\n                        //console.log('hover out');\n                    }]\n\n                }, {\n                    'name': 'page_background_image',\n                    'title':  window.CP_Customizer.translateCompanionString('Change background Image'),\n                    'on_click': function (event) {\n                        root.CP_Customizer.wpApi.control('background_image').focus();\n                    }\n                }]\n            },\n            'list': {\n                'nodeOverrider': function (node) {\n                    return $(node).is('[data-type=\"row\"]') ? $(node) : $(node).find('[data-type=\"row\"]').eq(0);\n                },\n                'title': function (node) {\n                    var label = $(node).closest('[data-label]').length ? $(node).closest('[data-label]').attr('data-label') +\n                        \" [\" + window.CP_Customizer.translateCompanionString(\"List\") + \"]\" : window.CP_Customizer.translateCompanionString(\"List\");\n                    return label;\n                },\n                'toolbarTitle': function (node) {\n                    var label = $(node).closest('[data-label]').length ? $(node).closest('[data-label]').attr('data-label') + \" [\" +\n                        window.CP_Customizer.translateCompanionString(\"List\") + \"]\" : window.CP_Customizer.translateCompanionString(\"List\");\n                    return label;\n                },\n                toolbar_binds: {\n                    hover: [\n                        function (event, overlay) {\n                            if ($(this).find('[data-type=\"row\"]').length || $(this).is('[data-type=\"row\"]')) {\n                                overlay.find('[data-category=\"list\"]').show();\n\n                                if ($(overlay.data('node')).find('[data-type=\"row\"]').is('[data-content-shortcode]')) {\n                                    overlay.find('[data-name=\"row_add_item\"]').hide();\n                                    overlay.find('[data-name=\"columns_reorder\"]').hide();\n                                } else {\n                                    overlay.find('[data-name=\"row_add_item\"]').show();\n                                    overlay.find('[data-name=\"columns_reorder\"]').show();\n\n                                }\n                            } else {\n                                overlay.find('[data-category=\"list\"]').hide();\n                            }\n                        },\n                        function (event, overlay) {\n                        }\n                    ]\n                },\n                'items': [{\n                    'name': 'row_add_item',\n                    'title': window.CP_Customizer.translateCompanionString('Add item'),\n                    'on_click': function (node) {\n                        var content = getFunctionCommentTemplate(newColumnContent);\n                        var $content;\n                        if (!$(node).children().length) {\n                            content = content.split(\"@@ROOT@@\").join(getWPLocation());\n                            $content = $(content);\n                        } else {\n                            $content = $(node).children('div').first().clone(false, false);\n                        }\n\n\n                        $content = root.CP_Customizer.preview.cleanNode($content);\n                        root.CP_Customizer.preview.insertNode($content, $(node));\n                        root.CP_Customizer.hooks.doAction('section_list_item_refresh');\n                    }\n                }, {\n                    'name': 'columns_per_row',\n                    'title': window.CP_Customizer.translateCompanionString('Columns per row'),\n                    'classes': 'subitems-arrow',\n                    'on_hover': [function (node) {\n                        var $subitemsContainer = $(this).children('.cog-subitems').length ? $(this).children('.cog-subitems') : $(\"<div class='cog-subitems' />\");\n                        $subitemsContainer.empty();\n\n                        var cols = [1, 2, 3, 4, 6];\n\n                        if(node.is('[data-max-items]')) {\n                            var newCols = [];\n                            var maxCols = parseInt(node.attr('data-max-items'));\n                            for (var kc = 0; kc < cols.length; kc++) {\n                                if(cols[kc]<=maxCols) {\n                                    newCols.push(cols[kc]);\n                                }\n                            }\n                            cols = newCols;\n                        }\n\n                        for (var i = 0; i < cols.length; i++) {\n                            var colNr = cols[i];\n                            var itemData = {\n                                'title': colNr + (colNr > 1 ? \" \" +\n                                    window.CP_Customizer.translateCompanionString(\"columns\") : \" \" +\n                                    window.CP_Customizer.translateCompanionString(\"column\")),\n                                'name': colNr + \"_columns\",\n                                'on_click': function (node) {\n\n                                    var columns = this.data('name').replace('_columns', '');\n                                    var value = parseInt(columns);\n                                    columns = parseInt(columns);\n                                    columns = parseInt(12 / columns);\n\n\n                                    if (node.is('[data-dynamic-columns]')) {\n                                        var setting = node.attr('data-dynamic-columns');\n                                        if (setting !== \"handled\") {\n\n                                            root.CP_Customizer.setMod(setting, columns, \"refresh\");\n\n                                        } else {\n\n                                            CP_Customizer.hooks.doAction('dynamic_columns_handle', columns, node, value);\n\n                                        }\n                                        return;\n                                    }\n\n                                    root.CP_Customizer.markSave();\n                                    var _class = 'col-md-' + columns,\n                                        colsRegexp = /((cp[0-9]+cols)(\\s|$))|((col\\-md\\-[0-9]+)(\\s|$))/ig,\n                                        currentDevice = root.CP_Customizer.preview.currentDevice();\n\n                                    switch (currentDevice) {\n                                        case \"tablet\":\n                                            colsRegexp = /((cp[0-9]+cols\\-tablet)(\\s|$))|((col\\-sm\\-[0-9]+)(\\s|$))/ig;\n                                            _class = 'col-sm-' + columns;\n                                            break;\n\n                                        case \"mobile\":\n                                            colsRegexp = /((cp[0-9]+cols\\-mobile)(\\s|$))|((col\\-xs\\-[0-9]+)(\\s|$))/;\n                                            _class = 'col-xs-' + columns;\n                                            break;\n                                    }\n\n                                    $(node).children().each(function (index, el) {\n                                        var $col = $(el),\n                                            _classAttr = $col.attr('class');\n\n                                        // remove existing cols:\n                                        _classAttr = _classAttr.replace(colsRegexp, \"\");\n\n                                        // add new class\n                                        _classAttr += \" \" + _class + \" \";\n\n\n                                        //remove not needed spaces in class attribute\n                                        _classAttr = _classAttr.replace(/\\s\\s+/, \" \");\n                                        $col.attr('class', _classAttr);\n\n\n                                    });\n\n                                    if (!$(node).hasClass('row')) {\n                                        $(node).attr('class', 'row');\n                                    }\n\n\n                                    // wait for animations\n                                    _.delay(root.CP_Customizer.overlays.updateAllOverlays, 600);\n                                }\n                            };\n\n                            var $button = root.CP_Customizer.overlays.getOverlayOptionButton(itemData, node);\n                            $subitemsContainer.append($button);\n                        }\n\n                        $subitemsContainer.appendTo($(this));\n                    }, function () {\n                    }]\n                }, {\n                    'name': 'columns_reorder',\n                    'title': window.CP_Customizer.translateCompanionString('Reorder Items'),\n                    'classes': 'subitems-arrow',\n                    'on_hover': [function (node) {\n\n                        var $ = root.CP_Customizer.preview.jQuery();\n                        var $subitemsContainer = $(this).children('.cog-subitems').length ? $(this).children('.cog-subitems') : $(\"<div class='cog-subitems' />\");\n                        $subitemsContainer.empty();\n\n                        var itemsNo = $(node).children().length;\n                        for (var i = 0; i < itemsNo; i++) {\n                            var item = node.children().eq(i);\n                            var title = item.text().replace(/\\s\\s+/g, \" \").trim();\n\n\n                            title = title.trim().length ? title : \"\";\n\n                            if (!title && item.find('img').length) {\n                                title = CP_Customizer.utils.getFileInfo(item.find('img').eq(0).attr('src')).filename;\n                            }\n\n                            if (!title) {\n                                title = '[ ITEM ]';\n                            }\n\n                            title = title.replace(/(^.{1,10})(.*)$/, function (matches, firstMatch, secondMatch) {\n                                var result = (firstMatch || \"\").trim() + (secondMatch && secondMatch.length ? \"[...]\" : \"\");\n                                return result;\n                            });\n\n                            var itemData = {\n                                'title': (i + 1) + ') ' + title,\n                                'name': 'reorder_item_' + i,\n                                'classes': 'sortable-item'\n                            };\n\n                            var $button = root.CP_Customizer.overlays.getOverlayOptionButton(itemData, item);\n                            $button.data('item', item);\n                            $subitemsContainer.append($button);\n                        }\n\n                        $subitemsContainer.appendTo($(this));\n                        $subitemsContainer.sortable({\n                            'axis': 'y',\n                            'start': function (event, ui) {\n                                ui.helper.css({\n                                    'position': 'fixed',\n                                    'transition': 'none',\n                                    'background-color': '#ffffff',\n                                    'left': ui.helper.offset().left + 'px'\n                                });\n\n                                ui.item.parent().addClass('big-heat-area');\n                            },\n                            sort: function (event, ui) {\n                                ui.helper.css('top', event.clientY);\n                            },\n                            'stop': function (event, ui) {\n                                var index = ui.item.index();\n                                var node = jQuery(ui.item).data().item;\n                                root.CP_Customizer.preview.insertNode(node, node.parent(), index);\n                                ui.item.parent().removeClass('big-heat-area');\n                            }\n                        });\n                    }, function () {\n                    }]\n                }]\n            },\n            'column': {\n                'title': window.CP_Customizer.translateCompanionString('List item'),\n                'toolbarTitle': 'List item',\n                'node_binds': {\n                    'hover': [function () {\n                        $(this).data().overlay.removeClass('hide');\n                    }, function () {\n                        $(this).data().overlay.addClass('hide');\n                    }]\n                },\n                'items': [{\n                    'name': 'row_remove_item',\n                    'title': window.CP_Customizer.translateCompanionString('Remove Item'),\n                    'on_click': function (node) {\n                        var $overlay = $($(node).data('overlay'));\n                        if ($overlay.data('node-observer')) {\n                            $overlay.data('node-observer').disconnect();\n                        }\n\n                        $overlay.remove();\n                        $(node).remove();\n                        $(this).trigger('reiki.update_overlays');\n                        root.CP_Customizer.markSave();\n                    }\n                }]\n\n            }\n        });\n    });\n\n    function addSectionOverlay($nodes) {\n\n        $nodes.addFixedOverlay({\n            types: [\"section\", \"list\"],\n            \"classes\": ['section-overlay']\n        });\n\n    }\n\n\n    CP_Customizer.bind(CP_Customizer.events.ADD_FIXED_OVERLAYS, function (event, $startNode) {\n        addSectionOverlay($startNode.find('[data-label]'));\n\n        if ($startNode.is('[data-label]')) {\n            _.delay(function () {\n                addSectionOverlay($startNode);\n            }, 0);\n        }\n\n    });\n})(window, CP_Customizer, jQuery);\n","(function (root, CP_Customizer, $) {\n\n    CP_Customizer.addModule(function (CP_Customizer) {\n        _.extend(CP_Customizer, {\n            menu: {\n\n                getGlobalOption: function(name, defaultValue){\n                    if (cpCustomizerGlobal && cpCustomizerGlobal.pluginOptions && cpCustomizerGlobal.pluginOptions.hasOwnProperty(name)) {\n                        return cpCustomizerGlobal.pluginOptions[name];\n                    }\n\n                    return defaultValue;\n                },\n\n                getPrimaryLocationModName: function() {\n                    var primaryLocation = this.getGlobalOption(\"primaryMenuLocation\", \"primary\");\n                    return 'nav_menu_locations[' + primaryLocation + ']';\n                },\n\n                getHomeUrl: function() {\n                    var primaryMenuHomeUrl = this.getGlobalOption(\"homeUrl\", CP_Customizer.preview.data().siteURL);\n                    return primaryMenuHomeUrl;\n                },\n\n                canSetPrimaryLocation: function() {\n                    var canSetPrimaryLocation = this.getGlobalOption(\"canSetPrimaryLocation\", true);\n                    return canSetPrimaryLocation;\n                },\n\n                getPrimaryLocationDefaultLanguageMenu: function() {\n                    var primaryLocationDefaultLanguageMenu = this.getGlobalOption(\"primaryLocationDefaultLanguageMenu\", -1);\n                    return primaryLocationDefaultLanguageMenu;\n                },\n\n                createPrimaryMenu: function () {\n                    var api = root.wp.customize;\n                    var customizeId,\n                        name = name || root.CP_Customizer.translateCompanionString(\"Main Menu\"),\n                        placeholderId = api.Menus.generatePlaceholderAutoIncrementId();\n\n                    customizeId = 'nav_menu[' + String(placeholderId) + ']';\n\n                    api.create(customizeId, customizeId, {}, {\n                        type: 'nav_menu',\n                        transport: api.Menus.data.settingTransport,\n                        previewer: api.previewer\n                    });\n\n                    api(customizeId).set($.extend({},\n                        api.Menus.data.defaultSettingValues.nav_menu, {\n                            name: name\n                        }\n                    ));\n\n\n                    menuSection = new api.Menus.MenuSection(customizeId, {\n                        params: {\n                            id: customizeId,\n                            panel: 'nav_menus',\n                            title: name,\n                            customizeAction: api.Menus.data.l10n.customizingMenus,\n                            type: 'nav_menu',\n                            priority: 10,\n                            menu_id: placeholderId\n                        }\n                    });\n                    api.section.add(customizeId, menuSection);\n\n                    if (this.canSetPrimaryLocation()) {\n                        // set location\n                        api(this.getPrimaryLocationModName()).set(placeholderId);\n                    }\n\n                    var defaultMenu = this.getPrimaryLocationDefaultLanguageMenu();\n\n                    if (defaultMenu !== -1) {\n                        wp.customize.bind(\"save-request-params\", function (query) {\n                            query.icl_translation_of = defaultMenu;\n                            return query;\n                        });\n                    }\n\n\n                    // create home page menu item;\n\n                    this.addAnchorToPrimaryMenu('#page-top', 'Home');\n                },\n\n\n                getPrimaryMenuID: function () {\n                    var menuId = wp.customize(this.getPrimaryLocationModName()).get();\n                    if (wp.customize('nav_menu[' + menuId + ']')) {\n                        return menuId;\n                    } else {\n                        return false;\n                    }\n                },\n\n                getPrimaryMenu: function () {\n                    var menuId = CP_Customizer.menu.getPrimaryMenuID();\n                    if (menuId !== false) {\n                        return wp.customize('nav_menu[' + menuId + ']').get();\n                    } else {\n                        return false;\n                    }\n                },\n\n                focusPrimaryMenuCustomize: function () {\n                    var menuId = CP_Customizer.menu.getPrimaryMenuID();\n                    if (menuId !== false) {\n                        wp.customize.section('nav_menu[' + menuId + ']').focus();\n                        return true;\n                    }\n\n                    return false;\n                },\n\n                getPrimaryMenuControl: function () {\n                    var api = root.wp.customize;\n                    var menuId = CP_Customizer.menu.getPrimaryMenuID();\n\n                    if (menuId) {\n                        return api.Menus.getMenuControl(menuId);\n                    } else {\n                        return false;\n                    }\n                },\n\n                addAnchorToPrimaryMenu: function (anchor, title) {\n                    var api = root.wp.customize;\n                    var customizeId, placeholderId, settingArgs, setting, menuItemControl, menuId, menuControl, position = 0,\n                        priority = 10;\n\n                    menuId = CP_Customizer.menu.getPrimaryMenuID();\n                    menuControl = CP_Customizer.menu.getPrimaryMenuControl();\n\n                    if (!menuId || !menuControl) {\n                        return;\n                    }\n\n                    _.each(menuControl.getMenuItemControls(), function (control) {\n                        if (false === control.setting()) {\n                            return;\n                        }\n                        priority = Math.max(priority, control.priority());\n                        if (0 === control.setting().menu_item_parent) {\n                            position = Math.max(position, control.setting().position);\n                        }\n                    });\n                    position += 1;\n                    priority += 1;\n\n                    var url = CP_Customizer.menu.getHomeUrl();\n                    if (anchor.replace(/#/, '').length) {\n                        url = CP_Customizer.preview.data().pageURL + \"#\" + anchor.replace(/#/, '');\n                    }\n\n                    var item = $.extend({},\n                        api.Menus.data.defaultSettingValues.nav_menu_item, {\n                            'title': title,\n                            'url': url,\n                            'type': 'custom',\n                            'type_label': api.Menus.data.l10n.custom_label,\n                            'object': 'custom'\n                        }, {\n                            nav_menu_term_id: menuId,\n                            original_title: title,\n                            position: position\n                        });\n\n\n                    placeholderId = api.Menus.generatePlaceholderAutoIncrementId();\n                    customizeId = 'nav_menu_item[' + String(placeholderId) + ']';\n                    settingArgs = {\n                        type: 'nav_menu_item',\n                        transport: api.Menus.data.settingTransport,\n                        previewer: api.previewer\n                    };\n\n                    setting = api.create(customizeId, customizeId, {}, settingArgs);\n                    setting.set(item);\n\n                    menuItemControl = new api.controlConstructor.nav_menu_item(customizeId, {\n                        params: {\n                            type: 'nav_menu_item',\n                            content: '<li id=\"customize-control-nav_menu_item-' + String(placeholderId) + '\" class=\"customize-control customize-control-nav_menu_item\"></li>',\n                            section: menuControl.id,\n                            priority: priority,\n                            active: true,\n                            settings: {\n                                'default': customizeId\n                            },\n                            menu_item_id: placeholderId\n                        },\n                        previewer: api.previewer\n                    });\n\n                    api.control.add(customizeId, menuItemControl);\n                    menuControl.debouncedReflowMenuItems();\n\n\n\n                },\n\n                anchorExistsInPrimaryMenu: function (anchor) {\n                    var menuControl = CP_Customizer.menu.getPrimaryMenuControl();\n\n                    if (!menuControl) {\n                        return false;\n                    }\n\n                    anchor = anchor.replace(/#/, '');\n\n                    var itemsControl = menuControl.getMenuItemControls();\n                    for (var i = 0; i < itemsControl.length; i++) {\n                        var itemControl = itemsControl[i];\n                        var url = (itemControl.setting.get().url || \"\").split(\"#\").pop().trim();\n                        if (url === anchor) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                },\n\n\n                updatePrimaryMenuAnchor: function (oldAnchor, options) {\n                    var menuControl = CP_Customizer.menu.getPrimaryMenuControl();\n\n                    if (!menuControl) {\n                        return false;\n                    }\n\n                    oldAnchor = oldAnchor.replace(/#/, '');\n                    var newAnchor = options.anchor.replace(/#/, '');\n                    var title = options.title;\n\n                    var itemsControl = menuControl.getMenuItemControls();\n                    for (var i = 0; i < itemsControl.length; i++) {\n                        var itemControl = itemsControl[i];\n                        var url = (itemControl.setting.get().url || \"\").split(\"#\").pop().trim();\n                        if (url === oldAnchor) {\n                            var itemData = itemControl.setting();\n                            if (itemData) {\n                                itemData = _.clone(itemData);\n                                itemData.title = title;\n                                itemData.url = CP_Customizer.preview.data().pageURL + \"#\" + newAnchor;\n                                itemControl.setting.set(itemData);\n                                return true;\n                            }\n                        }\n                    }\n\n                    return false;\n                },\n\n                removeAnchorFromPrimaryMenu: function (anchor) {\n                    var api = root.wp.customize;\n                    var menuControl = CP_Customizer.menu.getPrimaryMenuControl();\n\n                    if (!menuControl) {\n                        return false;\n                    }\n\n                    anchor = anchor.replace(/#/, '');\n\n                    var itemsControl = menuControl.getMenuItemControls();\n                    for (var i = 0; i < itemsControl.length; i++) {\n                        var itemControl = itemsControl[i];\n                        var url = (itemControl.setting.get().url || \"\").split(\"#\").pop();\n                        if (url === anchor) {\n                            itemControl.setting.set(false);\n                            api.control.remove(itemControl.id);\n                            return true;\n                        }\n                    }\n\n                    return false;\n                }\n            }\n        });\n    });\n\n})(window, CP_Customizer, jQuery);","(function (root, CP_Customizer, $) {\n    CP_Customizer.addModule(function (CP_Customizer) {\n\n        var panel = CP_Customizer.panels.pageContentPanel;\n\n\n        $('body').on('click', '[data-name=\"page_content_panel\"] span.section-icon.setting.page-settings', function () {\n            CP_Customizer.openRightSidebar('cp-current-page-settings');\n        });\n\n        function getRegisteredControls() {\n            var controls_ids = $('[data-name=\"page_content_panel\"] .page-settings').attr('data-settings');\n            var controls = [];\n            controls_ids.split(',').forEach(function (id) {\n                var _c = wp.customize.control(id);\n                if (_c) {\n                    controls.push(_c);\n                }\n            });\n\n            return controls;\n        }\n\n\n        panel.registerArea('general_page_settings', {\n\n            $controlsHolder: null,\n\n            refreshControls: function () {\n                var controls = getRegisteredControls(),\n                    self = this;\n\n                _.each(controls, function (c) {\n                    self.$controlsHolder.append(c.container);\n                });\n            },\n\n            init: function ($container) {\n\n                this.$controlsHolder = $(\"<ul/>\");\n                $container.append($('<li/>').append(this.$controlsHolder));\n                var self = this;\n\n                self.refreshControls();\n\n                wp.customize.bind('pane-contents-reflowed', function () {\n                    self.refreshControls();\n                })\n            }\n        });\n    });\n})(window, CP_Customizer, jQuery);\n"]}