{"version":3,"sources":["HoverFX.js","countup.js","progressbar.js","video-bg.js","libs/jquery.backstretch.js","scripts.js"],"names":["$","window","initHoverFX","options","isUI","resizeEvent","defaults","item","opts","instanceName","className","classElements","supportRGBA","getDimms","elem","width","height","Math","abs","parseFloat","outerHeight","each","self","params","inner","overlay","initial","type","transitionProp","easeType","icon","source","target","ml","mr","mt","mb","floatVal","this","unbind","css","attr","split","i","length","prop","setParams","find","getInner","contentType","overlayColor","innerColor","removeAttr","float","margin-left","margin-right","margin-top","margin-bottom","ease","easeCSS","oldWebkit","toLowerCase","prefixes","getEaseType","effectEasing","parent","captionWrap","addClass","wrap","applyTransition","duration","includeTiming","property","dur","effectDelay","transitionValue","-webkit-transition","-moz-transition","-o-transition","transition","add","effectType","loaded","initialDims","on","imageDims","outerWidth","background-color","hex","alpha","indexOf","rgba","opacity","toFixed","rgb","values","exec","r","round","g","b","toString","substring","toUpperCase","convertRGBDecimalToHex","replace","m","result","alhpaToHex","val","num","floor","parseInt","join","background","filter","zoom","fallback","genRGBA","overlayAlpha","showCaption","hideCaption","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","document","_isMobile","link","bind","openPage","location","assign","open","direction","setTimeout","insertBefore","captionType","position","z-index","captionHeight","start","jQuery","root","factory","define","amd","exports","module","require","CountUp","startVal","endVal","decimals","version","useEasing","useGrouping","separator","decimal","easingFn","t","c","d","pow","formattingFn","x","x1","x2","rgx","test","numerals","w","prefix","suffix","onUpdate","key","hasOwnProperty","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","ensureNumber","n","isNaN","callback","element","currTime","Date","getTime","timeToCall","max","id","clearTimeout","initialize","initialized","error","getElementById","Number","dec","countDown","frameVal","printValue","value","tagName","textContent","innerHTML","count","timestamp","startTime","progress","remaining","rAF","pauseResume","paused","reset","update","newEndVal","fn","LineProgressbar","extend","min","stop","ShowProgressCount","color","backgroundColor","text","radius","index","el","html","progressFill","progressBar","progressText","borderRadius","animate","step","progressTo","next","videoSize","videoElement","$videoElement","$header","videoWidth","videoHeight","marginLeft","left","addEventListener","querySelector","__cpVideoElementFirstPlayed","iframeVideo","undefined","YOUTUBE_REGEXP","backstretch","images","returnValues","args","arguments","scrollTop","scrollTo","eachIndex","$this","obj","data","returnValue","apply","Array","prototype","slice","call","destroy","cssBackgroundImage","url","Backstretch","expr","transitionDuration","animateFirst","alignX","alignY","preload","preloadSize","resolutionRefreshRate","resolutionChangeRatioThreshold","widthInsertSort","selectBest","replaceTagsInUrl","cache","caching","styles","top","overflow","margin","padding","zIndex","itemWrapper","display","border","maxWidth","optimalSizeImages","arr","tmp","j","containerWidth","containerHeight","imageSizes","testWidth","image","devicePixelRatio","deviceOrientation","getDeviceOrientation","wrapperOrientation","getWindowOrientation","lastAllowedImage","pixelRatio","windowOrientation","orientation","templateReplacer","src","$container","chosenImages","isArray","chosen","push","isVideoSource","isVideo","sources","last","startAt","batchSize","countLoaded","Image","complete","processImagesArray","processed","processOptions","required","centeredX","centeredY","console","log","speed","resolutionChangeRatioTreshold","fadeFirst","fade","processAlignOptions","container","firstShow","isBody","body","$window","$root","supportsFixedPosition","originalImages","alwaysTestWindowResolution","$existing","children","first","$wrap","bypassCss","appendTo","show","proxy","resize","pageYOffset","$resTest","newContainerWidth","newContainerHeight","changeRatioW","_lastResizeContainerWidth","changeRatioH","_lastResizeContainerHeight","_currentImage","that","_selectAnotherResolutionTimeout","bgCSS","right","bottom","rootWidth","innerWidth","rootHeight","innerHeight","bgWidth","bgHeight","$itemWrapper","evt","Event","relatedTarget","not","trigger","err","newIndex","overrideOptions","$oldItemWrapper","oldVideoWrapper","videoWrapper","evtOptions","selectedImage","_cycleTimeout","$item","VideoWrapper","$video","append","e","$wrapper","imgWidth","naturalWidth","imgHeight","naturalHeight","getOption","opt","transitionEasing","bringInNextImage","remove","cycle","play","random","$new","$old","fadeIn","easing","fadeInNew","fadeOut","transitionParts","animProp","newCssStart","newCssAnim","oldCssAnim","performTransition","new","old","alt","current","unshift","prev","pause","resume","callNext","off","loop","lastFrameTimeout","player","getDuration","getCurrentTime","preserveBackground","removeData","init","setVideoElement","video","videoType","loadYoutubeAPI","ytId","encodeURIComponent","origin","__ytStartMuted","mute","src_to_load","__manuallyStopped","ytReady","_initYoutube","one","poster","sourceItem","canPlayType","YT","hasParent","parentNode","$tmpParent","Player","events","onReady","detach","_updateYoutubeSize","onStateChange","event","PlayerState","PLAYING","ENDED","PAUSED","BUFFERING","CUED","onPlaybackQualityChange","onError","hasError","ytPlayer","getPlaybackQuality","playVideo","pauseVideo","seekTo","currentTime","seconds","setCurrentTime","ytAPILoadInt","setInterval","ua","platform","wkmatch","wkversion","ffmatch","ffversion","operammobilematch","omversion","iematch","ieversion","matchMedia","matches","screen","operamini","contentSwap","contentswap-effect","overflowEnabled","name","operationType","hasls","additionalWrapperClasses","useSameTemplate","ready","contentSwapTimeout"],"mappings":"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","file":"companion.bundle.min.js","sourcesContent":["(function($) {\n\n    window.initHoverFX = function(options, isUI, resizeEvent) {\n        var defaults, item, opts, params, instanceName, className, classElements, doesCSS3, supportRGBA;\n        item = $('.contentswap-effect');\n        supportRGBA = true;\n        doesCSS3 = true;\n\n        opts = options;\n\n        function setParams(elem) {\n\n            className = $(elem).attr('class');\n            classElements = className.split(\" \");\n            for (var i = 0; i <= item.length; i++) {\n                for (var prop in opts) {\n                    if (classElements[i] === prop) {\n                        instanceName = prop;\n                    }\n                }\n            }\n\n            return opts ? params = opts[instanceName] : params = defaults[instanceName];\n        }\n\n        function getInner(elem, type) {\n\n            var inner;\n            switch (type) {\n                case \"overlay\":\n                    inner = $(elem).find('.swap-inner');\n                    break;\n                case \"imageSwap\":\n                    inner = $(elem).find('.second-image');\n                    break;\n                case \"caption\":\n                    inner = $(elem).find('.swap-inner');\n                    break;\n            }\n            return inner;\n        }\n\n        function getDimms(elem) {\n            var dims = {\n                width: '100%',\n                height: Math.abs(parseFloat($(elem).outerHeight(false)))\n            };\n            return dims\n        }\n\n        function moveCSSProps(source, target) {\n            var ml = source.css('margin-left');\n            var mr = source.css('margin-right');\n            var mt = source.css('margin-top');\n            var mb = source.css('margin-bottom');\n            var floatVal = source.css('float');\n            source.css({\n                'float': 'none',\n                'margin-left': '0px',\n                'margin-right': '0px',\n                'margin-top': '0px',\n                'margin-bottom': '0px'\n            })\n            target.css({\n                'float': floatVal,\n                'margin-left': ml,\n                'margin-right': mr,\n                'margin-top': mt,\n                'margin-bottom': mb\n            })\n\n        }\n\n        function setCaptionHeight(height, elem) {\n            if (height != 'auto' || height != 'undefined') elem.css('height', parseInt(height) + 'px');\n        }\n\n        function genRGBA(hex, alpha, elem) {\n            //          with both longhand and shorthand support (accepts both #fff or #fffff)\n            if (hex.indexOf('#') == -1 || hex.indexOf('rgb(') > -1 || hex.indexOf('rgba') > -1) {\n                return {\n                    rgba: hex\n                };\n            }\n            var opacity;\n            alpha ? opacity = (alpha / 100).toFixed(2) : opacity = 1;\n\n            function convertRGBDecimalToHex(rgb) {\n\n                // check for RGB\n                var regexRGB = /rgb *\\( *([0-9]{1,3}) *, *([0-9]{1,3}) *, *([0-9]{1,3}) *\\)/;\n                var values = regexRGB.exec(rgb);\n\n                // check for RGBA\n                if (!values) {\n                    var regexRGBA = /rgba *\\( *([0-9]{1,3}) *, *([0-9]{1,3}) *, *([0-9]{1,3}) *, *(0.+[0-9]) *\\)/;\n                    values = regexRGBA.exec(rgb);\n                }\n\n                if (!values) return rgb;\n                if (values.length != 5) {\n                    return rgb; // fall back to what was given.              \n                }\n                var r = Math.round(parseFloat(values[1]));\n                var g = Math.round(parseFloat(values[2]));\n                var b = Math.round(parseFloat(values[3]));\n                if (values[4]) {\n                    opacity = values[4];\n                }\n                return \"#\" + (r + 0x10000).toString(16).substring(3).toUpperCase() + (g + 0x10000).toString(16).substring(3).toUpperCase() + (b + 0x10000).toString(16).substring(3).toUpperCase();\n            }\n\n            hex = convertRGBDecimalToHex(hex);\n\n            var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n            hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n                return r + r + g + g + b + b;\n            });\n\n            var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n            function alhpaToHex(val) {\n                var num = val * 255;\n                return Math.floor(num).toString(16);\n            }\n\n            if (typeof(elem) !== 'undefined' && result) {\n                switch (supportRGBA) {\n                    case true:\n                        elem.css('background-color', 'rgba(' + [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)].join(\",\") + ',' + opacity + ')');\n                        break;\n                    case false:\n                        elem.css({\n                            'background': 'transparent',\n                            'filter': 'progid:DXImageTransform.Microsoft.gradient(startColorstr=#' + alhpaToHex(opacity) + result[0].replace('#', '') + ',endColorstr=#' + alhpaToHex(opacity) + result[0].replace('#', '') + ');',\n                            'zoom': 1\n                        });\n                        break;\n                }\n            }\n\n            return result ? {\n                rgba: 'rgba(' + [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)].join(\",\") + ',' + opacity + ')',\n                fallback: alhpaToHex(opacity) + result[0].replace('#', '')\n            } : null;\n        }\n\n        function getEaseType(ease) {\n            //    Add more ease types - work in progress\n            var easeCSS = \"\";\n            var easeType;\n            var oldWebkit = false;\n\n            switch (ease.toLowerCase()) {\n                case 'easeinoutback':\n                    easeType = 'cubic-bezier(0.680, -0.550, 0.265, 1.550)';\n                    oldWebkit = 'cubic-bezier(0.680, 0, 0.265, 1)';\n                    break;\n                case 'quick-in':\n                    easeType = \"cubic-bezier(0.315, -0.185, 0.000, 1.270)\";\n                    oldWebkit = \"cubic-bezier(0.315, 0, 0.000, 1)\";\n                    break;\n                case 'accelerate':\n                    easeType = \"cubic-bezier(0.885, 0.420, 0.000, 1.270)\";\n                    oldWebkit = \"cubic-bezier(0.885, 0.420, 0.000, 1)\";\n                    break;\n                case 'super-fast':\n                    easeType = \"cubic-bezier(0.000, 0.870, 0.000, 0.890)\";\n                    break;\n                case 'ease-in-out-back':\n                    easeType = \"cubic-bezier(0.680, -0.550, 0.265, 1.550)\";\n                    oldWebkit = \"cubic-bezier(0.680, 0, 0.265, 1)\";\n                    break;\n                case 'ease-in-out-expo':\n                    easeType = \"cubic-bezier(1.000, 0.000, 0.000, 1.000)\";\n                    break;\n                case 'ease-out-back':\n                    easeType = \"cubic-bezier(0.175, 0.885, 0.320, 1.275)\";\n                    oldWebkit = \"cubic-bezier(0.175, 0.885, 0.320, 1)\";\n                    break;\n                case 'ease-out-circ':\n                    easeType = \"cubic-bezier(0.075, 0.820, 0.165, 1.000)\";\n                    break;\n                case 'ease-in-back':\n                    easeType = \"cubic-bezier(0.600, -0.280, 0.735, 0.045)\";\n                    oldWebkit = \"cubic-bezier(0.600, 0, 0.735, 0.045)\";\n                    break;\n                case 'ease-in-circ':\n                    easeType = \"cubic-bezier(0.600, 0.040, 0.980, 0.335)\";\n                    oldWebkit = \"cubic-bezier(0.600, 0.040, 0.980, 0.335)\";\n                    break;\n                case 'ease':\n                    easeType = \"ease\";\n                    break;\n                case \"ease-in\":\n                    easeType = \"ease-in\";\n                    break;\n                case \"ease-in-out\":\n                    easeType = \"ease-in-out\";\n                    break;\n                case \"ease-out\":\n                    easeType = \"ease-out\";\n                    break;\n            }\n\n            if (oldWebkit) {\n                easeType = oldWebkit;\n                // easeCSS += \"-webkit-transition-timing-function:\" + oldWebkit + \";\";\n            }\n            var prefixes = [\"-webkit-\", \"-moz-\", \"-o-\", \"\"];\n            for (var i = 0; i < prefixes.length; i++) {\n                easeCSS += prefixes[i] + \"transition-timing-function:\" + easeType + \";\"\n            }\n\n            return easeCSS;\n\n\n        };\n\n\n        function centerIcon(icon) {\n            var elem = $(icon);\n            elem\n                .parent()\n                .css({\n                    'width': elem.width(),\n                    'height': elem.height()\n                })\n        }\n        options.resizeEvent = resizeEvent ? true : false;\n\n\n        start(options);\n\n        function start(options) {\n            var addEffects = $();\n\n            item.each(function() {\n\n                var self, params, inner, overlay, initial, dims, type, transitionProp, easeType, icon;\n                self = $(this);\n                self.unbind('.hoverfx');\n                self.css({\n                    \"width\": \"\",\n                    \"height\": \"\"\n                });\n\n\n                params = setParams(self);\n                inner = getInner(self, params.contentType);\n                initial = self.find('.initial-image');\n                overlay = self.find('.overlay');\n                params.overlayColor = inner.css('background-color');\n                params.innerColor = inner.css('background-color');\n                inner.removeAttr('style');\n                overlay.removeAttr('style');\n                initial.removeAttr('style');\n\n                moveCSSProps(initial, self);\n\n                dims = getDimms(self);\n                //console.log(dims);\n                easeType = getEaseType(params.effectEasing);\n                type = params.contentType;\n\n                icon = inner.find('.swap-icons img');\n                centerIcon(icon);\n                if (type == 'overlay') {\n                    transitionProp = 'all';\n                } else {\n                    transitionProp = 'margin';\n                }\n                initial.css('float', 'none');\n\n                if (type == \"caption\") {\n                    if (self.find('.caption-wrap').length == 0) {\n                        var captionWrap = $('<div />').addClass('caption-wrap overlay');\n                        inner.wrap(captionWrap);\n                    }\n                    overlay = self.find('.caption-wrap');\n                } else {\n                    overlay = self.find('.overlay');\n                }\n                overlay.add(inner).css('display', 'block');\n\n\n\n                function applyTransition(elem, prop, easeCSS, duration, includeTiming) {\n                    var property = prop ? prop : \"all\";\n                    var customEase = \"\";\n                    var dur = params.effectDelay + \"ms\";\n                    var delay = \"\";\n\n\n\n                    var transitionValue = property + \" \" + dur;\n                    elem.css({\n                        '-webkit-transition': transitionValue,\n                        '-moz-transition': transitionValue,\n                        '-o-transition': transitionValue,\n                        'transition': transitionValue\n                    })\n                    if (includeTiming) {\n                        applyTiming(elem, easeCSS);\n                    }\n                }\n\n                function applyTiming(elem, easeCSS) {\n                    elem.attr('style', elem.attr('style') + easeCSS);\n                }\n\n                self.addClass(params.effectType);\n\n                var loaded = false;\n\n                if (initial.height() > 0) {\n\n                    loaded = true;\n                    var initialDims = getDimms(initial);\n                    self.css({\n                        'width': initialDims.width/*,\n                        'height': initialDims.height*/\n                    });\n\n                    if (type == \"overlay\") {\n                        applyTransition(inner, transitionProp, easeType, params.effectDelay, true);\n                    }\n                }\n\n                initial.on('load', function() {\n                    var imageDims = getDimms($(this));\n\n                    self.css({\n                        'width': imageDims.width/*,\n                        'height': imageDims.height*/\n                    });\n                    if (type == 'overlay') {\n                        inner.css({\n                            'margin-top': 0 / 2,\n                            'margin-left': Math.abs(imageDims.width - inner.outerWidth()) / 2\n                        });\n                    }\n                    if (type == \"overlay\") {\n                        applyTransition(inner, transitionProp, easeType, params.effectDelay);\n                    }\n\n                });\n\n                inner.css({\n                    'background-color': genRGBA(params.overlayColor, params.overlayAlpha).rgba\n                });\n\n                if (type == \"overlay\") {\n                    applyTransition(overlay, 'opacity', easeType, params.effectDelay, true);\n                }\n\n\n\n                var showCaption, hideCaption;\n\n                var isMobile = {\n                    Android: function() {\n                        return navigator.userAgent.match(/Android/i);\n                    },\n                    BlackBerry: function() {\n                        return navigator.userAgent.match(/BlackBerry/i);\n                    },\n                    iOS: function() {\n                        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n                    },\n                    Opera: function() {\n                        return navigator.userAgent.match(/Opera Mini/i);\n                    },\n                    Windows: function() {\n                        return navigator.userAgent.match(/IEMobile/i);\n                    },\n                    any: function() {\n                        return !!(isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows() || (\"ontouchstart\" in document));\n                    }\n                };\n\n               var _isMobile =  isMobile.any();\n\n\n                if (params.link) {\n                    if (_isMobile == true) {\n\n                    } else {\n                        self.bind('click.hoverfx', function() {\n                            if (params.openPage === 'same') {\n                                window.location.assign(params['link']);\n                            } else {\n                                window.open(params['link'], '_blank');\n                            }\n                        });\n                    }\n                }\n\n\n                if (type == 'overlay') {\n                    self.unbind('.caption');\n                    self.addClass('contentswap-overlay');\n                    var initialDims = getDimms(initial);\n                    //console.log(dims.width + \" .. \" +  inner.outerWidth());\n                    if (initial.height() > 0) {\n                        inner.css({\n                            // 'margin-top': Math.abs(initialDims.height - inner.outerHeight()) / 2,\n                            'margin-top': 0 / 2,\n                            'margin-left': Math.abs(initialDims.width - inner.outerWidth()) / 2\n                        });\n                    }\n\n                }\n\n                if (type == 'caption') {\n                    self.addClass('caption');\n\n                    if (params.direction == 'top') {\n                        if (!loaded) {\n                            setTimeout(function() {\n                                overlay.css({\n                                    'margin-top': (-inner.outerHeight() - 1) + 'px',\n                                    'opacity': 1\n                                });\n                            }, 10);\n\n                        } else {\n                            overlay.css({\n                                'margin-top': (-inner.outerHeight() - 1) + 'px',\n                                'opacity': 1\n                            });\n                        }\n\n                        setTimeout(function() {\n                            overlay.insertBefore(initial);\n\n                        }, 10);\n                    } else {\n\n                        setTimeout(function() {\n                            overlay.css({\n                                'opacity': 1\n                            });\n                        }, 10);\n                    }\n                    //else applyTransition(initial,transitionProp);\n                    var showCaption, hideCaption;\n\n\n                    //work in progress\n                    if (params.captionType == \"over\") {\n\n                        if (params.direction == 'top') {\n                            overlay.css({\n                                'position': 'absolute',\n                                'z-index': 9991\n\n                            });\n                        } else {\n                            overlay.css({\n                                'margin-top': '1px'\n                            });\n                        }\n                        applyTransition(overlay, 'margin', easeType, params.effectDelay, true);\n\n                        showCaption = function() {\n\n                            overlay.css({\n                                'margin-top': (-inner.outerHeight()) + 'px'\n                            });\n                            if (params.direction == 'top') overlay.css('margin-top', 0);\n                        };\n                        hideCaption = function() {\n                            overlay.css({\n                                'margin-top': \"0px\"\n                            });\n                            if (params.direction == 'top') overlay.css('margin-top', (-inner.outerHeight()) + 'px');\n                        }\n                    } else {\n                        applyTransition(overlay, \"margin\", easeType, params.effectDelay, true);\n                        applyTransition(initial, \"margin\", easeType, params.effectDelay, true);\n\n\n                        showCaption = function() {\n\n                            if (params.captionHeight <= inner.outerHeight()) {\n                                setCaptionHeight(params.captionHeight, inner);\n                            }\n\n                            if (params.direction == 'top' && params.captionType != 'over') {\n\n                                overlay.css({\n                                    'margin-top': '0px'\n                                });\n                            } else {\n                                overlay.css({\n                                    'margin-top': -inner.outerHeight()\n                                })\n                                initial.css({\n                                    'margin-top': -inner.outerHeight(),\n                                    'margin-bottom': inner.outerHeight()\n                                })\n\n                            }\n                        }\n\n                        hideCaption = function() {\n                            if (params.direction == 'top') {\n                                overlay.css({\n                                    'margin-top': (-inner.outerHeight() - 1) + 'px'\n                                })\n                            } else {\n                                overlay.css({\n                                    'margin-top': '1px'\n                                })\n                                initial.css({\n                                    'margin-top': '0px',\n                                    'margin-bottom': '0px'\n                                })\n                            }\n                        }\n                    }\n\n\n                }\n\n                if (_isMobile == true) {\n                    self.addClass('hover');\n                    if (type == \"caption\") {\n                        showCaption();\n                    } else {\n\n                    }\n\n                } else {\n                    if (type == \"caption\") {\n                        self.bind('mouseenter.hoverfx', showCaption)\n                            .bind('mouseleave.hoverfx', hideCaption);\n                    }\n\n                }\n\n\n\n\n            });\n        }\n\n    }\n})(jQuery);\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require, exports, module);\n    } else {\n        root.CountUp = factory();\n    }\n}(this, function (require, exports, module) {\n\n    /*\n\n        countUp.js\n        by @inorganik\n\n    */\n\n// target = id of html element or var of previously selected html element where counting occurs\n// startVal = the value you want to begin at\n// endVal = the value you want to arrive at\n// decimals = number of decimal places, default 0\n// duration = duration of animation in seconds, default 2\n// options = optional object of options (see below)\n\n    var CountUp = function (target, startVal, endVal, decimals, duration, options) {\n\n        var self = this;\n        self.version = function () {\n            return '1.9.1';\n        };\n\n        // default options\n        self.options = {\n            useEasing: true, // toggle easing\n            useGrouping: true, // 1,000,000 vs 1000000\n            separator: ',', // character to use as a separator\n            decimal: '.', // character to use as a decimal\n            easingFn: easeOutExpo, // optional custom easing function, default is Robert Penner's easeOutExpo\n            formattingFn: formatNumber, // optional custom formatting function, default is formatNumber above\n            prefix: '', // optional text before the result\n            suffix: '', // optional text after the result\n            numerals: [], // optionally pass an array of custom numerals for 0-9\n            onUpdate: false\n        };\n\n        // extend default options with passed options object\n        if (options && typeof options === 'object') {\n            for (var key in self.options) {\n                if (options.hasOwnProperty(key) && options[key] !== null) {\n                    self.options[key] = options[key];\n                }\n            }\n        }\n\n        if (self.options.separator === '') self.options.useGrouping = false;\n\n        // make sure requestAnimationFrame and cancelAnimationFrame are defined\n        // polyfill for browsers without native support\n        // by Opera engineer Erik Möller\n        var lastTime = 0;\n        var vendors = ['webkit', 'moz', 'ms', 'o'];\n        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n            window.cancelAnimationFrame =\n                window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n        }\n        if (!window.requestAnimationFrame) {\n            window.requestAnimationFrame = function (callback, element) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                var id = window.setTimeout(function () {\n                        callback(currTime + timeToCall);\n                    },\n                    timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n        }\n        if (!window.cancelAnimationFrame) {\n            window.cancelAnimationFrame = function (id) {\n                clearTimeout(id);\n            };\n        }\n\n        function formatNumber(num) {\n            num = num.toFixed(self.decimals);\n            num += '';\n            var x, x1, x2, rgx;\n            x = num.split('.');\n            x1 = x[0];\n            x2 = x.length > 1 ? self.options.decimal + x[1] : '';\n            rgx = /(\\d+)(\\d{3})/;\n            if (self.options.useGrouping) {\n                while (rgx.test(x1)) {\n                    x1 = x1.replace(rgx, '$1' + self.options.separator + '$2');\n                }\n            }\n            // optional numeral substitution\n            if (self.options.numerals.length) {\n                x1 = x1.replace(/[0-9]/g, function (w) {\n                    return self.options.numerals[+w];\n                })\n                x2 = x2.replace(/[0-9]/g, function (w) {\n                    return self.options.numerals[+w];\n                })\n            }\n            return self.options.prefix + x1 + x2 + self.options.suffix;\n        }\n\n        // Robert Penner's easeOutExpo\n        function easeOutExpo(t, b, c, d) {\n            return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n        }\n\n        function ensureNumber(n) {\n            return (typeof n === 'number' && !isNaN(n));\n        }\n\n        self.initialize = function () {\n            if (self.initialized) return true;\n\n            self.error = '';\n            self.d = (typeof target === 'string') ? document.getElementById(target) : target;\n            if (!self.d) {\n                self.error = '[CountUp] target is null or undefined'\n                return false;\n            }\n            self.startVal = Number(startVal);\n            self.endVal = Number(endVal);\n            // error checks\n            if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {\n                self.decimals = Math.max(0, decimals || 0);\n                self.dec = Math.pow(10, self.decimals);\n                self.duration = Number(duration) * 1000 || 4000;\n                self.countDown = (self.startVal > self.endVal);\n                self.frameVal = self.startVal;\n                self.initialized = true;\n                return true;\n            }\n            else {\n                self.error = '[CountUp] startVal (' + startVal + ') or endVal (' + endVal + ') is not a number';\n                return false;\n            }\n        };\n\n        // Print value to target\n        self.printValue = function (value) {\n            var result = self.options.formattingFn(value);\n            // var sizeKeeper = self.options.formattingFn(endVal);\n\n            // sizeKeeper = '<span style=\"visibility: hidden;display: block;line-height: 0px;height: 0px;overflow: hidden;\">'+sizeKeeper+'</span>';\n\n            // result = sizeKeeper+result;\n\n            if (self.d.tagName === 'INPUT') {\n                this.d.value = result;\n            }\n            else if (self.d.tagName === 'text' || self.d.tagName === 'tspan') {\n                this.d.textContent = result;\n            }\n            else {\n                this.d.innerHTML = result;\n            }\n        };\n\n        self.count = function (timestamp) {\n\n            if (!self.startTime) {\n                self.startTime = timestamp;\n            }\n\n            self.timestamp = timestamp;\n            var progress = timestamp - self.startTime;\n            self.remaining = self.duration - progress;\n\n            // to ease or not to ease\n            if (self.options.useEasing) {\n                if (self.countDown) {\n                    self.frameVal = self.startVal - self.options.easingFn(progress, 0, self.startVal - self.endVal, self.duration);\n                } else {\n                    self.frameVal = self.options.easingFn(progress, self.startVal, self.endVal - self.startVal, self.duration);\n                }\n            } else {\n                if (self.countDown) {\n                    self.frameVal = self.startVal - ((self.startVal - self.endVal) * (progress / self.duration));\n                } else {\n                    self.frameVal = self.startVal + (self.endVal - self.startVal) * (progress / self.duration);\n                }\n            }\n\n            // don't go past endVal since progress can exceed duration in the last frame\n            if (self.countDown) {\n                self.frameVal = (self.frameVal < self.endVal) ? self.endVal : self.frameVal;\n            } else {\n                self.frameVal = (self.frameVal > self.endVal) ? self.endVal : self.frameVal;\n            }\n\n            // decimal\n            self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;\n\n            // format and print value\n            self.printValue(self.frameVal);\n\n            if (self.options.onUpdate) {\n                self.options.onUpdate(self.frameVal);\n            }\n\n            // whether to continue\n            if (progress < self.duration) {\n                self.rAF = requestAnimationFrame(self.count);\n            } else {\n                if (self.callback) self.callback();\n            }\n        };\n        // start your animation\n        self.start = function (callback) {\n            if (!self.initialize()) return;\n            self.callback = callback;\n            self.rAF = requestAnimationFrame(self.count);\n        };\n        // toggles pause/resume animation\n        self.pauseResume = function () {\n            if (!self.paused) {\n                self.paused = true;\n                cancelAnimationFrame(self.rAF);\n            } else {\n                self.paused = false;\n                delete self.startTime;\n                self.duration = self.remaining;\n                self.startVal = self.frameVal;\n                requestAnimationFrame(self.count);\n            }\n        };\n        // reset to startVal so animation can be run again\n        self.reset = function () {\n            self.paused = false;\n            delete self.startTime;\n            self.initialized = false;\n            if (self.initialize()) {\n                cancelAnimationFrame(self.rAF);\n                self.printValue(self.startVal);\n            }\n        };\n        // pass a new endVal and start animation\n        self.update = function (newEndVal) {\n            if (!self.initialize()) return;\n            newEndVal = Number(newEndVal);\n            if (!ensureNumber(newEndVal)) {\n                self.error = '[CountUp] update() - new endVal is not a number: ' + newEndVal;\n                return;\n            }\n            self.error = '';\n            if (newEndVal === self.frameVal) return;\n            cancelAnimationFrame(self.rAF);\n            self.paused = false;\n            delete self.startTime;\n            self.startVal = self.frameVal;\n            self.endVal = newEndVal;\n            self.countDown = (self.startVal > self.endVal);\n            self.rAF = requestAnimationFrame(self.count);\n        };\n\n        // format startVal on initialization\n        if (self.initialize()) self.printValue(self.startVal);\n    };\n\n    return CountUp;\n\n}));","/**\n * jQuery Line Progressbar\n * Author: KingRayhan<rayhan095@gmail.com>\n * Author URL: http://rayhan.info\n * Version: 1.0.0\n */\n\n(function ($) {\n    'use strict';\n\n\n    $.fn.LineProgressbar = function (options) {\n\n         options = $.extend({\n             min: 0,\n             max: 100,\n             stop: 50,\n             ShowProgressCount: true,\n             duration: 2000,\n             color: '#654ea3',\n             backgroundColor: '#f5f5f5',\n             suffix: '%',\n             text: 'Category',\n             radius: '0px',\n             height: '10px',\n             width: '100%'\n        }, options);\n\n        $.options = options;\n        return this.each(function (index, el) {\n            // Markup\n            $(el).html('<div class=\"progressbar\"><div class=\"counterText\"></div><div class=\"percentCount\"></div><div class=\"proggress\"></div></div>');\n\n\n\n            var progressFill = $(el).find('.proggress');\n            var progressBar = $(el).find('.progressbar');\n            var progressText = $(el).find('.counterText');\n\n\n            progressFill.css({\n                backgroundColor: options.color,\n                height: options.height,\n                borderRadius: options.radius\n            });\n            progressBar.css({\n                width: options.width,\n                backgroundColor: options.backgroundColor,\n                borderRadius: options.radius\n            });\n\n            progressText.html(options.text);\n\n            // Progressing\n            progressFill.animate(\n                {\n                    width: options.stop + \"%\"\n                },\n                {\n                    step: function (x) {\n                        if (options.ShowProgressCount) {\n                            $(el).find(\".percentCount\").text(Math.round(x) + options.suffix);\n                        }\n                    },\n                    duration: options.duration\n                }\n            );\n            ////////////////////////////////////////////////////////////////////\n        });\n    }\n    $.fn.progressTo = function (next) {\n\n        var options = $.options;\n\n        return this.each(function (index, el) {\n\n            var progressFill = $(el).find('.proggress');\n            var progressBar = $(el).find('.progressbar');\n\n            progressFill.animate(\n                {\n                    width: next + \"%\"\n                },\n                {\n                    step: function (x) {\n                        if (options.ShowProgressCount) {\n                            $(el).find(\".percentCount\").text(Math.round(x) + options.suffix);\n                        }\n                    },\n                    duration: options.duration\n                }\n            );\n            ////////////////////////////////////////////////////////////////////\n        });\n    }\n\n})(jQuery);\n","(function ($) {\n\n    window.addEventListener('resize', function () {\n        var videoElement = document.querySelector('video#wp-custom-header-video') || document.querySelector('iframe#wp-custom-header-video');\n        if (videoElement) {\n            videoSize(videoElement);\n        }\n    });\n\n    function videoSize(videoElement, animate) {\n        var $videoElement = jQuery(videoElement);\n        var $header = jQuery(\".header-homepage.cp-video-bg\");\n        var videoWidth = $header.width(),\n            videoHeight = $header.height();\n\n            videoWidth = Math.max(videoWidth,videoHeight);            \n\n        if (videoWidth < videoHeight * 16 / 9) {\n            videoWidth = 16 / 9 * videoHeight;\n        } else {\n            videoHeight = videoWidth * 9 / 16;\n        }\n\n        var marginLeft = -0.5 * (videoWidth - $header.width());\n\n        $videoElement.css({\n            width: videoWidth,\n            height: videoHeight,\n            \"opacity\": 1,\n            \"left\": marginLeft\n        });\n\n        if (animate === false) {\n            return;\n        }\n\n\n    }\n\n    jQuery(function () {\n        var videoElement = document.querySelector('video#wp-custom-header-video') || document.querySelector('iframe#wp-custom-header-video');\n        if (videoElement) {\n            videoSize(videoElement, false);\n        }\n    });\n\n    __cpVideoElementFirstPlayed = false;\n\n    document.addEventListener('wp-custom-header-video-loaded', function () {\n        var videoElement = document.querySelector('video#wp-custom-header-video');\n\n        if (videoElement) {\n            videoSize(videoElement);\n            return;\n        }\n\n        document.querySelector('#wp-custom-header').addEventListener('play', function () {\n            var iframeVideo = document.querySelector('iframe#wp-custom-header-video');\n            var videoElement = document.querySelector('video#wp-custom-header-video') || iframeVideo;\n          \n            if (videoElement && !__cpVideoElementFirstPlayed) {\n                __cpVideoElementFirstPlayed = true;\n                videoSize(videoElement);\n            }\n          \n        });\n\n    });\n})(jQuery);","/*\n * Backstretch\n * http://srobbin.com/jquery-plugins/backstretch/\n *\n * Copyright (c) 2013 Scott Robbin\n * Licensed under the MIT license.\n */\n\n;(function ($, window, undefined) {\n  'use strict';\n\n  /** @const */\n  var YOUTUBE_REGEXP = /^.*(youtu\\.be\\/|youtube\\.com\\/v\\/|youtube\\.com\\/embed\\/|youtube\\.com\\/watch\\?v=|youtube\\.com\\/watch\\?.*\\&v=)([^#\\&\\?]*).*/i;\n  \n  /* PLUGIN DEFINITION\n   * ========================= */\n\n  $.fn.backstretch = function (images, options) {\n    var args = arguments;\n\n    /*\n     * Scroll the page one pixel to get the right window height on iOS\n     * Pretty harmless for everyone else\n    */\n    if ($(window).scrollTop() === 0 ) {\n      window.scrollTo(0, 0);\n    }\n\n    var returnValues;\n    \n    this.each(function (eachIndex) {\n      var $this = $(this)\n        , obj = $this.data('backstretch');\n\n      // Do we already have an instance attached to this element?\n      if (obj) {\n\n        // Is this a method they're trying to execute?\n        if (typeof args[0] === 'string' &&\n            typeof obj[args[0]] === 'function') {\n              \n          // Call the method\n          var returnValue = obj[args[0]].apply(obj, Array.prototype.slice.call(args, 1));\n          if (returnValue === obj) { // If a method is chaining\n            returnValue = undefined;\n          }\n          if (returnValue !== undefined) {\n            returnValues = returnValues || [];\n            returnValues[eachIndex] = returnValue;\n          }\n          \n          return; // Nothing further to do\n        }\n\n        // Merge the old options with the new\n        options = $.extend(obj.options, options);\n\n        // Remove the old instance\n        if ( obj.hasOwnProperty('destroy') ) {\n          obj.destroy(true);\n        }\n      }\n\n      // We need at least one image\n      if (!images || (images && images.length === 0)) {\n        var cssBackgroundImage = $this.css('background-image');\n        if (cssBackgroundImage && cssBackgroundImage !== 'none') {\n          images = [ { url: $this.css('backgroundImage').replace(/url\\(|\\)|\"|'/g,\"\") } ];\n        } else {\n          $.error('No images were supplied for Backstretch, or element must have a CSS-defined background image.');\n        }\n      }\n\n      obj = new Backstretch(this, images, options || {});\n      $this.data('backstretch', obj);\n    });\n    \n    return returnValues ? returnValues.length === 1 ? returnValues[0] : returnValues : this;\n  };\n\n  // If no element is supplied, we'll attach to body\n  $.backstretch = function (images, options) {\n    // Return the instance\n    return $('body')\n            .backstretch(images, options)\n            .data('backstretch');\n  };\n\n  // Custom selector\n  $.expr[':'].backstretch = function(elem) {\n    return $(elem).data('backstretch') !== undefined;\n  };\n\n  /* DEFAULTS\n   * ========================= */\n\n  $.fn.backstretch.defaults = {\n    duration: 5000                // Amount of time in between slides (if slideshow)\n    , transition: 'fade'          // Type of transition between slides\n    , transitionDuration: 0       // Duration of transition between slides\n    , animateFirst: true          // Animate the transition of first image of slideshow in?\n    , alignX: 0.5                 // The x-alignment for the image, can be 'left'|'center'|'right' or any number between 0.0 and 1.0\n    , alignY: 0.5                 // The y-alignment for the image, can be 'top'|'center'|'bottom' or any number between 0.0 and 1.0\n    , paused: false               // Whether the images should slide after given duration\n    , start: 0                    // Index of the first image to show\n    , preload: 2                  // How many images preload at a time?\n    , preloadSize: 1              // How many images can we preload in parallel?\n    , resolutionRefreshRate: 2500 // How long to wait before switching resolution?\n    , resolutionChangeRatioThreshold: 0.1 // How much a change should it be before switching resolution?\n  };\n\n  /* STYLES\n   *\n   * Baked-in styles that we'll apply to our elements.\n   * In an effort to keep the plugin simple, these are not exposed as options.\n   * That said, anyone can override these in their own stylesheet.\n   * ========================= */\n  var styles = {\n    wrap: {\n      left: 0\n      , top: 0\n      , overflow: 'hidden'\n      , margin: 0\n      , padding: 0\n      , height: '100%'\n      , width: '100%'\n      , zIndex: -999999\n    }\n    , itemWrapper: {\n      position: 'absolute'\n      , display: 'none'\n      , margin: 0\n      , padding: 0\n      , border: 'none'\n      , width: '100%'\n      , height: '100%'\n      , zIndex: -999999\n    }\n    , item: {\n      position: 'absolute'\n      , margin: 0\n      , padding: 0\n      , border: 'none'\n      , width: '100%'\n      , height: '100%'\n      , maxWidth: 'none'\n    }\n  };\n\n  /* Given an array of different options for an image,\n   * choose the optimal image for the container size.\n   *\n   * Given an image template (a string with {{ width }} and/or\n   * {{height}} inside) and a container object, returns the\n   * image url with the exact values for the size of that\n   * container.\n   *\n   * Returns an array of urls optimized for the specified resolution.\n   *\n   */\n  var optimalSizeImages = (function () {\n\n    /* Sorts the array of image sizes based on width */\n    var widthInsertSort = function (arr) {\n      for (var i = 1; i < arr.length; i++) {\n        var tmp = arr[i],\n            j = i;\n        while (arr[j - 1] && parseInt(arr[j - 1].width, 10) > parseInt(tmp.width, 10)) {\n          arr[j] = arr[j - 1];\n          --j;\n        }\n        arr[j] = tmp;\n      }\n\n      return arr;\n    };\n\n    /* Given an array of various sizes of the same image and a container width,\n     * return the best image.\n     */\n    var selectBest = function (containerWidth, containerHeight, imageSizes) {\n\n      var devicePixelRatio = window.devicePixelRatio || 1;\n      var deviceOrientation = getDeviceOrientation();\n      var windowOrientation = getWindowOrientation();\n      var wrapperOrientation = (containerHeight > containerWidth) ?\n        'portrait' :\n        (containerWidth > containerHeight ? 'landscape' : 'square');\n\n      var lastAllowedImage = 0;\n      var testWidth;\n\n      for (var j = 0, image; j < imageSizes.length; j++) {\n\n          image = imageSizes[j];\n\n          // In case a new image was pushed in, process it:\n          if (typeof image === 'string') {\n              image = imageSizes[j] = { url: image };\n          }\n\n          if (image.pixelRatio && image.pixelRatio !== 'auto' && parseFloat(image.pixelRatio) !== devicePixelRatio) {\n              // We disallowed choosing this image for current device pixel ratio,\n              // So skip this one.\n              continue;\n          }\n\n          if (image.deviceOrientation && image.deviceOrientation !== deviceOrientation) {\n              // We disallowed choosing this image for current device orientation,\n              // So skip this one.\n              continue;\n          }\n\n          if (image.windowOrientation && image.windowOrientation !== deviceOrientation) {\n              // We disallowed choosing this image for current window orientation,\n              // So skip this one.\n              continue;\n          }\n\n          if (image.orientation && image.orientation !== wrapperOrientation) {\n              // We disallowed choosing this image for current element's orientation,\n              // So skip this one.\n              continue;\n          }\n\n          // Mark this one as the last one we investigated\n          // which does not violate device pixel ratio rules.\n          // We may choose this one later if there's no match.\n          lastAllowedImage = j;\n\n          // For most images, we match the specified width against element width,\n          // And enforcing a limit depending on the \"pixelRatio\" property if specified.\n          // But if a pixelRatio=\"auto\", then we consider the width as the physical width of the image,\n          // And match it while considering the device's pixel ratio.\n          testWidth = containerWidth;\n          if (image.pixelRatio === 'auto') {\n              containerWidth *= devicePixelRatio;\n          }\n\n          // Stop when the width of the image is larger or equal to the container width\n          if (image.width >= testWidth) {\n              break;\n          }\n      }\n\n      // Use the image located at where we stopped\n      return imageSizes[Math.min(j, lastAllowedImage)];\n    };\n    \n    var replaceTagsInUrl = function (url, templateReplacer) {\n        \n        if (typeof url === 'string') {\n            url = url.replace(/{{(width|height)}}/g, templateReplacer);\n        } else if (url instanceof Array) {\n            for (var i = 0; i < url.length; i++) {\n                if (url[i].src) {\n                    url[i].src = replaceTagsInUrl(url[i].src, templateReplacer);\n                } else {\n                    url[i] = replaceTagsInUrl(url[i], templateReplacer);\n                }\n            }\n        }\n        \n        return url;\n    };\n\n    return function ($container, images) {\n      var containerWidth = $container.width(),\n          containerHeight = $container.height();\n\n      var chosenImages = [];\n\n      var templateReplacer = function (match, key) {\n        if (key === 'width') {\n          return containerWidth;\n        }\n        if (key === 'height') {\n          return containerHeight;\n        }\n        return match;\n      };\n\n      for (var i = 0; i < images.length; i++) {\n        if ($.isArray(images[i])) {\n          images[i] = widthInsertSort(images[i]);\n          var chosen = selectBest(containerWidth, containerHeight, images[i]);\n          chosenImages.push(chosen);\n        } else {\n          // In case a new image was pushed in, process it:\n          if (typeof images[i] === 'string') {\n              images[i] = { url: images[i] };\n          }\n\n          var item = $.extend({}, images[i]);\n          item.url = replaceTagsInUrl(item.url, templateReplacer);\n          chosenImages.push(item);\n        }\n      }\n      return chosenImages;\n    };\n\n  })();\n  \n  var isVideoSource = function (source) {\n    return YOUTUBE_REGEXP.test(source.url) || source.isVideo;\n  };\n\n  /* Preload images */\n  var preload = (function (sources, startAt, count, batchSize, callback) {\n    // Plugin cache\n    var cache = [];\n\n    // Wrapper for cache\n    var caching = function(image){\n      for (var i = 0; i < cache.length; i++) {\n        if (cache[i].src === image.src) {\n          return cache[i];\n        }\n      }\n      cache.push(image);\n      return image;\n    };\n\n    // Execute callback\n    var exec = function(sources, callback, last){\n      if (typeof callback === 'function') {\n        callback.call(sources, last);\n      }\n    };\n\n    // Closure to hide cache\n    return function preload (sources, startAt, count, batchSize, callback){\n      // Check input data\n      if (typeof sources === 'undefined') {\n        return;\n      }\n      if (!$.isArray(sources)) {\n        sources = [sources];\n      }\n\n      if (arguments.length < 5 && typeof arguments[arguments.length - 1] === 'function') {\n        callback = arguments[arguments.length - 1];\n      }\n\n      startAt = (typeof startAt === 'function' || !startAt) ? 0 : startAt;\n      count = (typeof count === 'function' || !count || count < 0) ? sources.length : Math.min(count, sources.length);\n      batchSize = (typeof batchSize === 'function' || !batchSize) ? 1 : batchSize;\n\n      if (startAt >= sources.length) {\n          startAt = 0;\n          count = 0;\n      }\n      if (batchSize < 0) {\n          batchSize = count;\n      }\n      batchSize = Math.min(batchSize, count);\n\n      var next = sources.slice(startAt + batchSize, count - batchSize);\n      sources = sources.slice(startAt, batchSize);\n      count = sources.length;\n\n      // If sources array is empty\n      if (!count) {\n        exec(sources, callback, true);\n        return;\n      }\n\n      // Image loading callback\n      var countLoaded = 0;\n\n      var loaded = function() {\n        countLoaded++;\n        if (countLoaded !== count) {\n          return;\n        }\n\n        exec(sources, callback, !next);\n        preload(next, 0, 0, batchSize, callback);\n      };\n\n      // Loop sources to preload\n      var image;\n\n      for (var i = 0; i < sources.length; i++) {\n        \n        if (isVideoSource(sources[i])) {\n          \n          // Do not preload videos. There are issues with that.\n          // First - we need to keep an instance of the preloaded and use that exactly, not a copy.\n          // Second - there are memory issues.\n          // If there will be a requirement from users - I'll try to implement this.\n\n          continue;\n            \n        } else {\n      \n          image = new Image();\n          image.src = sources[i].url;\n\n          image = caching(image);\n\n          if (image.complete) {\n            loaded();\n          } else {\n            $(image).on('load error', loaded);\n          }\n            \n        }\n        \n      }\n    };\n  })();\n\n  /* Process images array */\n  var processImagesArray = function (images) {\n    var processed = [];\n    for (var i = 0; i < images.length; i++) {\n      if (typeof images[i] === 'string') {\n        processed.push({ url: images[i] });\n      }\n      else if ($.isArray(images[i])) {\n        processed.push(processImagesArray(images[i]));\n      }\n      else {\n        processed.push(processOptions(images[i]));\n      }\n    }\n    return processed;\n  };\n\n  /* Process options */\n  var processOptions = function (options, required) {\n\n    // Convert old options\n\n    // centeredX/centeredY are deprecated\n    if (options.centeredX || options.centeredY) {\n      if (window.console && window.console.log) {\n        window.console.log('jquery.backstretch: `centeredX`/`centeredY` is deprecated, please use `alignX`/`alignY`');\n      }\n      if (options.centeredX) {\n        options.alignX = 0.5;\n      }\n      if (options.centeredY) {\n        options.alignY = 0.5;\n      }\n    }\n\n    // Deprecated spec\n    if (options.speed !== undefined) {\n\n      if (window.console && window.console.log) {\n        window.console.log('jquery.backstretch: `speed` is deprecated, please use `transitionDuration`');\n      }\n\n      options.transitionDuration = options.speed;\n      options.transition = 'fade';\n    }\n\n    // Typo\n    if (options.resolutionChangeRatioTreshold !== undefined) {\n      window.console.log('jquery.backstretch: `treshold` is a typo!');\n      options.resolutionChangeRatioThreshold = options.resolutionChangeRatioTreshold;\n    }\n\n    // Current spec that needs processing\n\n    if (options.fadeFirst !== undefined) {\n      options.animateFirst = options.fadeFirst;\n    }\n\n    if (options.fade !== undefined) {\n      options.transitionDuration = options.fade;\n      options.transition = 'fade';\n    }\n\n    return processAlignOptions(options);\n  };\n\n  /* Process align options */\n  var processAlignOptions = function (options, required) {\n    if (options.alignX === 'left') {\n      options.alignX = 0.0;\n    }\n    else if (options.alignX === 'center') {\n      options.alignX = 0.5;\n    }\n    else if (options.alignX === 'right') {\n      options.alignX = 1.0;\n    }\n    else {\n      if (options.alignX !== undefined || required) {\n        options.alignX = parseFloat(options.alignX);\n        if (isNaN(options.alignX)) {\n          options.alignX = 0.5;\n        }\n      }\n    }\n\n    if (options.alignY === 'top') {\n      options.alignY = 0.0;\n    }\n    else if (options.alignY === 'center') {\n      options.alignY = 0.5;\n    }\n    else if (options.alignY === 'bottom') {\n      options.alignY = 1.0;\n    }\n    else {\n      if (options.alignX !== undefined || required) {\n        options.alignY = parseFloat(options.alignY);\n        if (isNaN(options.alignY)) {\n          options.alignY = 0.5;\n        }\n      }\n    }\n\n    return options;\n  };\n\n  /* CLASS DEFINITION\n   * ========================= */\n  var Backstretch = function (container, images, options) {\n    this.options = $.extend({}, $.fn.backstretch.defaults, options || {});\n\n    this.firstShow = true;\n\n    // Process options\n    processOptions(this.options, true);\n\n    /* In its simplest form, we allow Backstretch to be called on an image path.\n     * e.g. $.backstretch('/path/to/image.jpg')\n     * So, we need to turn this back into an array.\n     */\n    this.images = processImagesArray($.isArray(images) ? images : [images]);\n\n    /**\n     * Paused-Option\n     */\n    if (this.options.paused) {\n        this.paused = true;\n    }\n\n    /**\n     * Start-Option (Index)\n     */\n    if (this.options.start >= this.images.length)\n    {\n        this.options.start = this.images.length - 1;\n    }\n    if (this.options.start < 0)\n    {\n        this.options.start = 0;\n    }\n\n    // Convenience reference to know if the container is body.\n    this.isBody = container === document.body;\n\n    /* We're keeping track of a few different elements\n     *\n     * Container: the element that Backstretch was called on.\n     * Wrap: a DIV that we place the image into, so we can hide the overflow.\n     * Root: Convenience reference to help calculate the correct height.\n     */\n    var $window = $(window);\n    this.$container = $(container);\n    this.$root = this.isBody ? supportsFixedPosition ? $window : $(document) : this.$container;\n\n    this.originalImages = this.images;\n    this.images = optimalSizeImages(\n        this.options.alwaysTestWindowResolution ? $window : this.$root, \n        this.originalImages);\n\n    /**\n     * Pre-Loading.\n     * This is the first image, so we will preload a minimum of 1 images.\n     */\n    preload(this.images, this.options.start || 0, this.options.preload || 1);\n\n    // Don't create a new wrap if one already exists (from a previous instance of Backstretch)\n    var $existing = this.$container.children(\".backstretch\").first();\n    this.$wrap = $existing.length ? $existing : \n        $('<div class=\"backstretch\"></div>')\n        .css(this.options.bypassCss ? {} : styles.wrap)\n        .appendTo(this.$container);\n\n    if (!this.options.bypassCss) {\n        \n        // Non-body elements need some style adjustments\n        if (!this.isBody) {\n          // If the container is statically positioned, we need to make it relative,\n          // and if no zIndex is defined, we should set it to zero.\n          var position = this.$container.css('position')\n            , zIndex = this.$container.css('zIndex');\n\n          this.$container.css({\n              position: position === 'static' ? 'relative' : position\n            , zIndex: zIndex === 'auto' ? 0 : zIndex\n          });\n\n          // Needs a higher z-index\n          this.$wrap.css({zIndex: -999998});\n        }\n\n        // Fixed or absolute positioning?\n        this.$wrap.css({\n            position: this.isBody && supportsFixedPosition ? 'fixed' : 'absolute'\n        });\n    \n    }\n\n    // Set the first image\n    this.index = this.options.start;\n    this.show(this.index);\n\n    // Listen for resize\n    $window.on('resize.backstretch', $.proxy(this.resize, this))\n           .on('orientationchange.backstretch', $.proxy(function () {\n              // Need to do this in order to get the right window height\n              if (this.isBody && window.pageYOffset === 0) {\n                window.scrollTo(0, 1);\n                this.resize();\n              }\n           }, this));\n  };\n\n  var performTransition = function (options) {\n\n    var transition = options.transition || 'fade';\n\n    // Look for multiple options\n    if (typeof transition === 'string' && transition.indexOf('|') > -1) {\n      transition = transition.split('|');\n    }\n\n    if (transition instanceof Array) {\n      transition = transition[Math.round(Math.random() * (transition.length - 1))];\n    }\n    \n    var $new = options['new'];\n    var $old = options['old'] ? options['old'] : $([]);\n\n    switch (transition.toString().toLowerCase()) {\n\n      default:\n      case 'fade':\n        $new.fadeIn({\n          duration: options.duration,\n          complete: options.complete,\n          easing: options.easing || undefined\n        });\n        break;\n        \n      case 'fadeinout':\n      case 'fade_in_out':\n            \n        var fadeInNew = function () {\n            $new.fadeIn({\n              duration: options.duration / 2,\n              complete: options.complete,\n              easing: options.easing || undefined\n            });\n        };\n        \n        if ($old.length) {\n            $old.fadeOut({\n              duration: options.duration / 2,\n              complete: fadeInNew,\n              easing: options.easing || undefined\n            });\n        } else {\n            fadeInNew();\n        }\n        \n        break;\n\n      case 'pushleft':\n      case 'push_left':\n      case 'pushright':\n      case 'push_right':\n      case 'pushup':\n      case 'push_up':\n      case 'pushdown':\n      case 'push_down':\n      case 'coverleft':\n      case 'cover_left':\n      case 'coverright':\n      case 'cover_right':\n      case 'coverup':\n      case 'cover_up':\n      case 'coverdown':\n      case 'cover_down':\n\n        var transitionParts = transition.match(/^(cover|push)_?(.*)$/);\n\n        var animProp = transitionParts[2] === 'left' ? 'right' :\n            transitionParts[2] === 'right' ? 'left' :\n                transitionParts[2] === 'down' ? 'top' :\n                    transitionParts[2] === 'up' ? 'bottom' :\n                        'right';\n\n        var newCssStart = {\n          'display': ''\n        }, newCssAnim = {};\n        newCssStart[animProp] = '-100%';\n        newCssAnim[animProp] = 0;\n\n        $new\n            .css(newCssStart)\n            .animate(newCssAnim, {\n              duration: options.duration,\n              complete: function () {\n                $new.css(animProp, '');\n                options.complete.apply(this, arguments);\n              },\n              easing: options.easing || undefined\n            });\n\n        if (transitionParts[1] === 'push' && $old.length) {\n            var oldCssAnim = {};\n            oldCssAnim[animProp] = '100%';\n\n            $old\n                .animate(oldCssAnim, {\n                  duration: options.duration,\n                  complete: function () {\n                    $old.css('display', 'none');\n                  },\n                  easing: options.easing || undefined\n                });\n        }\n\n        break;\n    }\n\n  };\n\n  /* PUBLIC METHODS\n   * ========================= */\n  Backstretch.prototype = {\n\n      resize: function () {\n        try {\n\n          // Check for a better suited image after the resize\n          var $resTest = this.options.alwaysTestWindowResolution ? $(window) : this.$root;\n          var newContainerWidth = $resTest.width();\n          var newContainerHeight = $resTest.height();\n          var changeRatioW = newContainerWidth / (this._lastResizeContainerWidth || 0);\n          var changeRatioH = newContainerHeight / (this._lastResizeContainerHeight || 0);\n          var resolutionChangeRatioThreshold = this.options.resolutionChangeRatioThreshold || 0.0;\n\n          // check for big changes in container size\n          if ((newContainerWidth !== this._lastResizeContainerWidth ||\n               newContainerHeight !== this._lastResizeContainerHeight) &&\n              ((Math.abs(changeRatioW - 1) >= resolutionChangeRatioThreshold || isNaN(changeRatioW)) ||\n              (Math.abs(changeRatioH - 1) >= resolutionChangeRatioThreshold || isNaN(changeRatioH)))) {\n\n            this._lastResizeContainerWidth = newContainerWidth;\n            this._lastResizeContainerHeight = newContainerHeight;\n\n            // Big change: rebuild the entire images array\n            this.images = optimalSizeImages($resTest, this.originalImages);\n\n            // Preload them (they will be automatically inserted on the next cycle)\n            if (this.options.preload) {\n              preload(this.images, (this.index + 1) % this.images.length, this.options.preload);\n            }\n\n            // In case there is no cycle and the new source is different than the current\n            if (this.images.length === 1 &&\n                this._currentImage.url !== this.images[0].url) {\n\n              // Wait a little an update the image being showed\n              var that = this;\n              clearTimeout(that._selectAnotherResolutionTimeout);\n              that._selectAnotherResolutionTimeout = setTimeout(function () {\n                that.show(0);\n              }, this.options.resolutionRefreshRate);\n            }\n          }\n\n          var bgCSS = {left: 0, top: 0, right: 'auto', bottom: 'auto'}\n            , rootWidth = this.isBody ? this.$root.width() : this.$root.innerWidth()\n            , rootHeight = this.isBody ? ( window.innerHeight ? window.innerHeight : this.$root.height() ) : this.$root.innerHeight()\n            , bgWidth = rootWidth\n            , bgHeight = bgWidth / this.$itemWrapper.data('ratio')\n            , evt = $.Event('backstretch.resize', {\n              relatedTarget: this.$container[0]\n            })\n            , bgOffset\n            , alignX = this._currentImage.alignX === undefined ? this.options.alignX : this._currentImage.alignX\n            , alignY = this._currentImage.alignY === undefined ? this.options.alignY : this._currentImage.alignY;\n\n            // Make adjustments based on image ratio\n            if (bgHeight >= rootHeight) {\n                bgCSS.top = -(bgHeight - rootHeight) * alignY;\n            } else {\n                bgHeight = rootHeight;\n                bgWidth = bgHeight * this.$itemWrapper.data('ratio');\n                bgOffset = (bgWidth - rootWidth) / 2;\n                bgCSS.left = -(bgWidth - rootWidth) * alignX;\n            }\n\n            if (!this.options.bypassCss) {\n\n                this.$wrap\n                    .css({width: rootWidth, height: rootHeight})\n                    .find('>.backstretch-item').not('.deleteable')\n                    .each(function () {\n                        var $wrapper = $(this);\n                        $wrapper.find('img,video,iframe')\n                                .css({width: bgWidth, height: bgHeight})\n                                .css(bgCSS);\n                    });\n            }\n\n            this.$container.trigger(evt, this);\n        } catch(err) {\n            // IE7 seems to trigger resize before the image is loaded.\n            // This try/catch block is a hack to let it fail gracefully.\n        }\n\n        return this;\n      }\n\n      // Show the slide at a certain position\n    , show: function (newIndex, overrideOptions) {\n\n        // Validate index\n        if (Math.abs(newIndex) > this.images.length - 1) {\n          return;\n        }\n\n        // Vars\n        var that = this\n          , $oldItemWrapper = that.$wrap.find('>.backstretch-item').addClass('deleteable')\n          , oldVideoWrapper = that.videoWrapper\n          , evtOptions = { relatedTarget: that.$container[0] };\n\n        // Trigger the \"before\" event\n        that.$container.trigger($.Event('backstretch.before', evtOptions), [that, newIndex]);\n\n        // Set the new frame index\n        this.index = newIndex;\n        var selectedImage = that.images[newIndex];\n\n        // Pause the slideshow\n        clearTimeout(that._cycleTimeout);\n\n        // New image\n\n        delete that.videoWrapper; // Current item may not be a video\n\n        var isVideo = isVideoSource(selectedImage);\n        if (isVideo) {\n          that.videoWrapper = new VideoWrapper(selectedImage);\n          that.$item = that.videoWrapper.$video.css('pointer-events', 'none');\n        } else {\n          that.$item = $('<img />');\n        }\n\n        that.$itemWrapper = $('<div class=\"backstretch-item\">')\n            .append(that.$item);\n\n        if (this.options.bypassCss) {\n            that.$itemWrapper.css({\n              'display': 'none'\n            });\n        } else {\n          that.$itemWrapper.css(styles.itemWrapper);\n          that.$item.css(styles.item);\n        }\n\n        that.$item.bind(isVideo ? 'canplay' : 'load', function (e) {\n            var $this = $(this)\n              , $wrapper = $this.parent()\n              , options = $wrapper.data('options');\n              \n            if (overrideOptions) {\n              options = $.extend({}, options, overrideOptions);\n            }\n\n            var imgWidth = this.naturalWidth || this.videoWidth || this.width\n              , imgHeight = this.naturalHeight || this.videoHeight || this.height;\n\n            // Save the ratio\n            $wrapper.data('ratio', imgWidth / imgHeight);\n\n            var getOption = function (opt) {\n              return options[opt] !== undefined ?\n                options[opt] :\n                that.options[opt];\n            };\n\n            var transition = getOption('transition');\n            var transitionEasing = getOption('transitionEasing');\n            var transitionDuration = getOption('transitionDuration');\n\n            // Show the image, then delete the old one\n            var bringInNextImage = function () {\n              \n              if (oldVideoWrapper) {\n                oldVideoWrapper.stop();\n                oldVideoWrapper.destroy();\n              }\n              \n              $oldItemWrapper.remove();\n\n              // Resume the slideshow\n              if (!that.paused && that.images.length > 1) {\n                that.cycle();\n              }\n\n              // Now we can clear the background on the element, to spare memory\n              if (!that.options.bypassCss && !that.isBody) {\n                that.$container.css('background-image', 'none');\n              }\n\n              // Trigger the \"after\" and \"show\" events\n              // \"show\" is being deprecated\n              $(['after', 'show']).each(function () {\n                that.$container.trigger($.Event('backstretch.' + this, evtOptions), [that, newIndex]);\n              });\n              \n              if (isVideo) {\n                that.videoWrapper.play();\n              }\n            };\n\n            if ((that.firstShow && !that.options.animateFirst) || !transitionDuration || !transition) {\n                // Avoid transition on first show or if there's no transitionDuration value\n                $wrapper.show();\n                bringInNextImage();\n            } else {\n\n                performTransition({\n                    'new': $wrapper,\n                    old: $oldItemWrapper,\n                    transition: transition,\n                    duration: transitionDuration,\n                    easing: transitionEasing,\n                    complete: bringInNextImage\n                });\n\n            }\n\n            that.firstShow = false;\n\n            // Resize\n            that.resize();\n        });\n\n        that.$itemWrapper.appendTo(that.$wrap);\n\n        that.$item.attr('alt', selectedImage.alt || '');\n        that.$itemWrapper.data('options', selectedImage);\n\n        if (!isVideo) {\n          that.$item.attr('src', selectedImage.url);\n        }\n        \n        that._currentImage = selectedImage;\n\n        return that;\n      }\n\n    , current: function () {\n        return this.index;\n      }\n\n    , next: function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        args.unshift(this.index < this.images.length - 1 ? this.index + 1 : 0);\n        return this.show.apply(this, args);\n      }\n\n    , prev: function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        args.unshift(this.index === 0 ? this.images.length - 1 : this.index - 1);\n        return this.show.apply(this, args);\n      }\n\n    , pause: function () {\n        // Pause the slideshow\n        this.paused = true;\n        \n        if (this.videoWrapper) {\n          this.videoWrapper.pause();\n        }\n        \n        return this;\n      }\n\n    , resume: function () {\n        // Resume the slideshow\n        this.paused = false;\n        \n        if (this.videoWrapper) {\n          this.videoWrapper.play();\n        }\n        \n        this.cycle();\n        return this;\n      }\n\n    , cycle: function () {\n        // Start/resume the slideshow\n        if(this.images.length > 1) {\n          // Clear the timeout, just in case\n          clearTimeout(this._cycleTimeout);\n\n          var duration = (this._currentImage && this._currentImage.duration) || this.options.duration;\n          var isVideo = isVideoSource(this._currentImage);\n          \n          var callNext = function () {\n            this.$item.off('.cycle');\n            \n            // Check for paused slideshow\n            if (!this.paused) {\n              this.next();\n            }\n          };\n\n          // Special video handling\n          if (isVideo) {\n\n            // Leave video at last frame\n            if (!this._currentImage.loop) {\n              var lastFrameTimeout = 0;\n\n              this.$item\n                .on('playing.cycle', function () {\n                  var player = $(this).data('player');\n\n                  clearTimeout(lastFrameTimeout);\n                  lastFrameTimeout = setTimeout(function () {\n                    player.pause();\n                    player.$video.trigger('ended');\n                  }, (player.getDuration() - player.getCurrentTime()) * 1000);\n                })\n                .on('ended.cycle', function () {\n                  clearTimeout(lastFrameTimeout);\n                });\n            }\n\n            // On error go to next\n            this.$item.on('error.cycle initerror.cycle', $.proxy(callNext, this));\n          }\n\n          if (isVideo && !this._currentImage.duration) {\n            // It's a video - playing until end\n            this.$item.on('ended.cycle', $.proxy(callNext, this));\n            \n          } else {\n            // Cycling according to specified duration\n            this._cycleTimeout = setTimeout($.proxy(callNext, this), duration);\n          }\n          \n        }\n        return this;\n      }\n\n    , destroy: function (preserveBackground) {\n        // Stop the resize events\n        $(window).off('resize.backstretch orientationchange.backstretch');\n\n        // Stop any videos\n        if (this.videoWrapper) {\n          this.videoWrapper.destroy();\n        }\n        \n        // Clear the timeout\n        clearTimeout(this._cycleTimeout);\n\n        // Remove Backstretch\n        if(!preserveBackground) {\n          this.$wrap.remove();\n        }\n        this.$container.removeData('backstretch');\n      }\n  };\n    \n /**\n  * Video Abstraction Layer\n  *\n  * Static methods:\n  * > VideoWrapper.loadYoutubeAPI() -> Call in order to load the Youtube API. \n  *                                   An 'youtube_api_load' event will be triggered on $(window) when the API is loaded.\n  *\n  * Generic:\n  * > player.type -> type of the video\n  * > player.video / player.$video -> contains the element holding the video\n  * > player.play() -> plays the video\n  * > player.pause() -> pauses the video\n  * > player.setCurrentTime(position) -> seeks to a position by seconds\n  * \n  * Youtube:\n  * > player.ytId will contain the youtube ID if the source is a youtube url\n  * > player.ytReady is a flag telling whether the youtube source is ready for playback\n  * */\n\n  var VideoWrapper = function () { this.init.apply(this, arguments); };\n\n  /**\n   * @param {Object} options\n   * @param {String|Array<String>|Array<{{src: String, type: String?}}>} options.url\n   * @param {Boolean} options.loop=false\n   * @param {Boolean?} options.mute=true\n   * @param {String?} options.poster\n   * loop, mute, poster\n   */\n  VideoWrapper.prototype.init = function (options) {\n\n    var that = this;\n    \n    var $video;\n\n    var setVideoElement = function () {\n      that.$video = $video;\n      that.video = $video[0];\n    };\n    \n    // Determine video type\n    \n    var videoType = 'video';\n    \n    if (!(options.url instanceof Array) &&\n      YOUTUBE_REGEXP.test(options.url)) {\n      videoType = 'youtube';\n    }\n    \n    that.type = videoType;\n\n    if (videoType === 'youtube') {\n\n      // Try to load the API in the meantime\n      VideoWrapper.loadYoutubeAPI();\n\n      that.ytId = options.url.match(YOUTUBE_REGEXP)[2];\n      var src = 'https://www.youtube.com/embed/' + that.ytId +\n        '?rel=0&autoplay=0&showinfo=0&controls=0&modestbranding=1' +\n        '&cc_load_policy=0&disablekb=1&iv_load_policy=3&loop=0' +\n        '&enablejsapi=1&origin=' + encodeURIComponent(window.location.origin);\n\n      that.__ytStartMuted = !!options.mute || options.mute === undefined;\n\n      $video = $('<iframe />')\n        .attr({ 'src_to_load': src })\n        .css({ 'border': 0, 'margin': 0, 'padding': 0 })\n        .data('player', that);\n        \n      if (options.loop) {\n        $video.on('ended.loop', function () {\n          if (!that.__manuallyStopped) {\n           that.play();\n          }\n        });\n      }\n\n      that.ytReady = false;\n\n      setVideoElement();\n\n      if (window['YT']) {\n        that._initYoutube();\n        $video.trigger('initsuccess');\n      } else {\n        $(window).one('youtube_api_load', function () {\n          that._initYoutube();\n          $video.trigger('initsuccess');\n        });\n      }\n      \n    }\n    else {\n      // Traditional <video> tag with multiple sources\n      \n      $video = $('<video>')\n        .prop('autoplay', false)\n        .prop('controls', false)\n        .prop('loop', !!options.loop)\n        .prop('muted', !!options.mute || options.mute === undefined)\n        \n        // Let the first frames be available before playback, as we do transitions\n        .prop('preload', 'auto')\n        .prop('poster', options.poster || '');\n        \n      var sources = (options.url instanceof Array) ? options.url : [options.url];\n\n      for (var i = 0; i < sources.length; i++) {\n        var sourceItem = sources[i];\n        if (typeof(sourceItem) === 'string') {\n          sourceItem = { src: sourceItem };\n        }\n        $('<source>')\n          .attr('src', sourceItem.src)\n          // Make sure to not specify type if unknown - \n          //   so the browser will try to autodetect.\n          .attr('type', sourceItem.type || null)\n          .appendTo($video);\n      }\n      \n      if (!$video[0].canPlayType || !sources.length) {\n        $video.trigger('initerror');\n      } else {\n        $video.trigger('initsuccess');\n      }\n\n      setVideoElement();\n    }\n\n  };\n\n  VideoWrapper.prototype._initYoutube = function () {\n    var that = this;\n    \n    var YT = window['YT'];\n\n    that.$video\n      .attr('src', that.$video.attr('src_to_load'))\n      .removeAttr('src_to_load');\n\n    // It won't init if it's not in the DOM, so we emulate that\n    var hasParent = !!that.$video[0].parentNode;\n    if (!hasParent) {\n      var $tmpParent = $('<div>').css('display', 'none !important').appendTo(document.body);\n      that.$video.appendTo($tmpParent);\n    }\n\n    var player = new YT.Player(that.video, {\n      events: {\n        'onReady': function () {\n\n          if (that.__ytStartMuted) {\n            player.mute();\n          }\n\n          if (!hasParent) {\n            // Restore parent to old state - without interrupting any changes\n            if (that.$video[0].parentNode === $tmpParent[0]) {\n              that.$video.detach();\n            }\n            $tmpParent.remove();\n          }\n\n          that.ytReady = true;\n          that._updateYoutubeSize();\n          that.$video.trigger('canplay');\n        },\n        'onStateChange': function (event) {\n          switch (event.data) {\n            case YT.PlayerState.PLAYING:\n              that.$video.trigger('playing');\n              break;\n            case YT.PlayerState.ENDED:\n              that.$video.trigger('ended');\n              break;\n            case YT.PlayerState.PAUSED:\n              that.$video.trigger('pause');\n              break;\n            case YT.PlayerState.BUFFERING:\n              that.$video.trigger('waiting');\n              break;\n            case YT.PlayerState.CUED:\n              that.$video.trigger('canplay');\n              break;\n          }\n        },\n        'onPlaybackQualityChange': function () {\n          that._updateYoutubeSize();\n          that.$video.trigger('resize');\n        },\n        'onError': function (err) {\n          that.hasError = true;\n          that.$video.trigger({ 'type': 'error', 'error': err });\n        }\n      }\n    });\n\n    that.ytPlayer = player;\n\n    return that;\n  };    \n    \n  VideoWrapper.prototype._updateYoutubeSize = function () {\n    var that = this;\n\n    switch (that.ytPlayer.getPlaybackQuality() || 'medium') {\n      case 'small':\n        that.video.videoWidth = 426;\n        that.video.videoHeight = 240;\n        break;\n      case 'medium':\n        that.video.videoWidth = 640;\n        that.video.videoHeight = 360;\n        break;\n      default:\n      case 'large':\n        that.video.videoWidth = 854;\n        that.video.videoHeight = 480;\n        break;\n      case 'hd720':\n        that.video.videoWidth = 1280;\n        that.video.videoHeight = 720;\n        break;\n      case 'hd1080':\n        that.video.videoWidth = 1920;\n        that.video.videoHeight = 1080;\n        break;\n      case 'highres':\n        that.video.videoWidth = 2560;\n        that.video.videoHeight = 1440;\n        break;\n    }\n\n    return that;\n  };\n\n  VideoWrapper.prototype.play = function () {\n    var that = this;\n\n    that.__manuallyStopped = false;\n    \n    if (that.type === 'youtube') {\n      if (that.ytReady) {\n        that.$video.trigger('play');\n        that.ytPlayer.playVideo();\n      }\n    } else {\n      that.video.play();\n    }\n\n    return that;\n  };\n\n  VideoWrapper.prototype.pause = function () {\n    var that = this;\n\n    that.__manuallyStopped = false;\n    \n    if (that.type === 'youtube') {\n      if (that.ytReady) {\n        that.ytPlayer.pauseVideo();\n      }\n    } else {\n      that.video.pause();\n    }\n\n    return that;\n  };\n\n  VideoWrapper.prototype.stop = function () {\n    var that = this;\n\n    that.__manuallyStopped = true;\n    \n    if (that.type === 'youtube') {\n      if (that.ytReady) {\n        that.ytPlayer.pauseVideo();\n        that.ytPlayer.seekTo(0);\n      }\n    } else {\n      that.video.pause();\n      that.video.currentTime = 0;\n    }\n\n    return that;\n  };\n\n  VideoWrapper.prototype.destroy = function () {\n    var that = this;\n\n    if (that.ytPlayer) {\n      that.ytPlayer.destroy();\n    }\n\n    that.$video.remove();\n\n    return that;\n  };\n\n  VideoWrapper.prototype.getCurrentTime = function (seconds) {\n    var that = this;\n\n    if (that.type === 'youtube') {\n      if (that.ytReady) {\n        return that.ytPlayer.getCurrentTime();\n      }\n    } else {\n      return that.video.currentTime;\n    }\n\n    return 0;\n  };\n\n  VideoWrapper.prototype.setCurrentTime = function (seconds) {\n    var that = this;\n\n    if (that.type === 'youtube') {\n      if (that.ytReady) {\n        that.ytPlayer.seekTo(seconds, true);\n      }\n    } else {\n      that.video.currentTime = seconds;\n    }\n\n    return that;\n  };\n\n  VideoWrapper.prototype.getDuration = function () {\n    var that = this;\n\n    if (that.type === 'youtube') {\n      if (that.ytReady) {\n        return that.ytPlayer.getDuration();\n      }\n    } else {\n      return that.video.duration;\n    }\n\n    return 0;\n  };\n\n  /**\n   * This will load the youtube API (if not loaded yet)\n   * Use $(window).one('youtube_api_load', ...) to listen for API loaded event\n   */\n  VideoWrapper.loadYoutubeAPI = function () {\n    if (window['YT']) {\n      return;\n    }\n    if (!$('script[src*=www\\\\.youtube\\\\.com\\\\/iframe_api]').length) {\n      $('<script type=\"text/javascript\" src=\"https://www.youtube.com/iframe_api\">').appendTo('body');\n    }\n    var ytAPILoadInt = setInterval(function () {\n      if (window['YT'] && window['YT'].loaded) {\n        $(window).trigger('youtube_api_load');\n        clearTimeout(ytAPILoadInt);\n      }\n    }, 50);\n  };\n\n  var getDeviceOrientation = function () {\n\n    if ('matchMedia' in window) {\n      if (window.matchMedia(\"(orientation: portrait)\").matches) {\n         return 'portrait';\n      } else if (window.matchMedia(\"(orientation: landscape)\").matches) {\n         return 'landscape';\n      }\n    }\n\n    if (screen.height > screen.width) {\n      return 'portrait';\n    }\n\n    // Even square devices have orientation,\n    //   but a desktop browser may be too old for `matchMedia`.\n    // Defaulting to `landscape` for the VERY rare case of a square desktop screen is good enough.\n    return 'landscape';\n  };\n\n  var getWindowOrientation = function () {\n    if (window.innerHeight > window.innerWidth) {\n      return 'portrait';\n    }\n    if (window.innerWidth > window.innerHeight) {\n      return 'landscape';\n    }\n\n    return 'square';\n  };\n\n  /* SUPPORTS FIXED POSITION?\n   *\n   * Based on code from jQuery Mobile 1.1.0\n   * http://jquerymobile.com/\n   *\n   * In a nutshell, we need to figure out if fixed positioning is supported.\n   * Unfortunately, this is very difficult to do on iOS, and usually involves\n   * injecting content, scrolling the page, etc.. It's ugly.\n   * jQuery Mobile uses this workaround. It's not ideal, but works.\n   *\n   * Modified to detect IE6\n   * ========================= */\n\n  var supportsFixedPosition = (function () {\n    var ua = navigator.userAgent\n      , platform = navigator.platform\n        // Rendering engine is Webkit, and capture major version\n      , wkmatch = ua.match( /AppleWebKit\\/([0-9]+)/ )\n      , wkversion = !!wkmatch && wkmatch[ 1 ]\n      , ffmatch = ua.match( /Fennec\\/([0-9]+)/ )\n      , ffversion = !!ffmatch && ffmatch[ 1 ]\n      , operammobilematch = ua.match( /Opera Mobi\\/([0-9]+)/ )\n      , omversion = !!operammobilematch && operammobilematch[ 1 ]\n      , iematch = ua.match( /MSIE ([0-9]+)/ )\n      , ieversion = !!iematch && iematch[ 1 ];\n\n    return !(\n      // iOS 4.3 and older : Platform is iPhone/Pad/Touch and Webkit version is less than 534 (ios5)\n      ((platform.indexOf( \"iPhone\" ) > -1 || platform.indexOf( \"iPad\" ) > -1  || platform.indexOf( \"iPod\" ) > -1 ) && wkversion && wkversion < 534) ||\n\n      // Opera Mini\n      (window.operamini && ({}).toString.call( window.operamini ) === \"[object OperaMini]\") ||\n      (operammobilematch && omversion < 7458) ||\n\n      //Android lte 2.1: Platform is Android and Webkit version is less than 533 (Android 2.2)\n      (ua.indexOf( \"Android\" ) > -1 && wkversion && wkversion < 533) ||\n\n      // Firefox Mobile before 6.0 -\n      (ffversion && ffversion < 6) ||\n\n      // WebOS less than 3\n      (\"palmGetResource\" in window && wkversion && wkversion < 534) ||\n\n      // MeeGo\n      (ua.indexOf( \"MeeGo\" ) > -1 && ua.indexOf( \"NokiaBrowser/8.5.0\" ) > -1) ||\n\n      // IE6\n      (ieversion && ieversion <= 6)\n    );\n  }());\n\n}(jQuery, window));","(function ($) {\n    var contentSwap = {\n        \"contentswap-effect\": {\n            \"effectType\": \"\",\n            \"contentType\": \"overlay\",\n            \"overflowEnabled\": \"false\",\n            \"effectDelay\": \"800\",\n            \"effectEasing\": \"Ease\",\n            \"overlayColor\": \"490A3D\",\n            \"innerColor\": \"ffffff\",\n            \"openPage\": \"same\",\n            \"name\": \"\",\n            \"captionType\": \"490A3D\",\n            \"operationType\": \"edit\",\n            \"hasls\": \"true\",\n            \"additionalWrapperClasses\": \"\",\n            \"direction\": \"bottom\",\n            \"useSameTemplate\": \"true\"\n        }\n    };\n\n\n    jQuery(document).ready(function () {\n\n        var contentSwapTimeout = setTimeout(function () {\n            if (window.initHoverFX) {\n                initHoverFX(contentSwap);\n            }\n        }, 10);\n\n        jQuery(window).resize(function (e) {\n            clearTimeout(contentSwapTimeout);\n            contentSwapTimeout = setTimeout(function () {\n                if (window.initHoverFX) {\n                    initHoverFX(contentSwap, null, e);\n                }\n            }, 150);\n\n        });\n\n    });\n\n\n})(jQuery);\n"]}